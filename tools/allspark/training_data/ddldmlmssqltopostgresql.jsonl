{"input_text": "convert following DDL/DML code from MSSQL to Postgresql \nUSE [master]\nGO\n/****** Object:  Database [adventureworks]    Script Date: 2/1/24 11:21:09 PM ******/\nCREATE DATABASE [adventureworks]\n CONTAINMENT = NONE\n ON  PRIMARY \n( NAME = N'AdventureWorks2022', FILENAME = N'/var/opt/mssql/data/54512614-d6eb-4929-bf4f-9e7cf4dc5dad_AdventureWorks2022.mdf' , SIZE = 204800KB , MAXSIZE = UNLIMITED, FILEGROWTH = 65536KB )\n LOG ON \n( NAME = N'AdventureWorks2022_log', FILENAME = N'/var/opt/mssql/data/54512614-d6eb-4929-bf4f-9e7cf4dc5dad_AdventureWorks2022_log.ldf' , SIZE = 73728KB , MAXSIZE = 2048GB , FILEGROWTH = 65536KB )\nGO\nIF (1 = FULLTEXTSERVICEPROPERTY('IsFullTextInstalled'))\nbegin\nEXEC [adventureworks].[dbo].[sp_fulltext_database] @action = 'enable'\nend\nGO\nALTER DATABASE [adventureworks] SET ANSI_NULL_DEFAULT OFF \nGO\nALTER DATABASE [adventureworks] SET ANSI_NULLS ON \nGO\nALTER DATABASE [adventureworks] SET ANSI_PADDING ON \nGO\nALTER DATABASE [adventureworks] SET ANSI_WARNINGS ON \nGO\nALTER DATABASE [adventureworks] SET ARITHABORT ON \nGO\nALTER DATABASE [adventureworks] SET AUTO_CLOSE OFF \nGO\nALTER DATABASE [adventureworks] SET AUTO_SHRINK OFF \nGO\nALTER DATABASE [adventureworks] SET AUTO_UPDATE_STATISTICS ON \nGO\nALTER DATABASE [adventureworks] SET CURSOR_CLOSE_ON_COMMIT OFF \nGO\nALTER DATABASE [adventureworks] SET CURSOR_DEFAULT  GLOBAL \nGO\nALTER DATABASE [adventureworks] SET CONCAT_NULL_YIELDS_NULL ON \nGO\nALTER DATABASE [adventureworks] SET NUMERIC_ROUNDABORT OFF \nGO\nALTER DATABASE [adventureworks] SET QUOTED_IDENTIFIER ON \nGO\nALTER DATABASE [adventureworks] SET RECURSIVE_TRIGGERS OFF \nGO\nALTER DATABASE [adventureworks] SET  DISABLE_BROKER \nGO\nALTER DATABASE [adventureworks] SET AUTO_UPDATE_STATISTICS_ASYNC OFF \nGO\nALTER DATABASE [adventureworks] SET DATE_CORRELATION_OPTIMIZATION OFF \nGO\nALTER DATABASE [adventureworks] SET TRUSTWORTHY OFF \nGO\nALTER DATABASE [adventureworks] SET ALLOW_SNAPSHOT_ISOLATION OFF \nGO\nALTER DATABASE [adventureworks] SET PARAMETERIZATION SIMPLE \nGO\nALTER DATABASE [adventureworks] SET READ_COMMITTED_SNAPSHOT ON \nGO\nALTER DATABASE [adventureworks] SET HONOR_BROKER_PRIORITY OFF \nGO\nALTER DATABASE [adventureworks] SET RECOVERY SIMPLE \nGO\nALTER DATABASE [adventureworks] SET  MULTI_USER \nGO\nALTER DATABASE [adventureworks] SET PAGE_VERIFY CHECKSUM  \nGO\nALTER DATABASE [adventureworks] SET DB_CHAINING OFF \nGO\nALTER DATABASE [adventureworks] SET FILESTREAM( NON_TRANSACTED_ACCESS = OFF ) \nGO\nALTER DATABASE [adventureworks] SET TARGET_RECOVERY_TIME = 0 SECONDS \nGO\nALTER DATABASE [adventureworks] SET DELAYED_DURABILITY = DISABLED \nGO\nALTER DATABASE [adventureworks] SET QUERY_STORE = OFF\nGO\nUSE [adventureworks]\nGO\nALTER DATABASE SCOPED CONFIGURATION SET ACCELERATED_PLAN_FORCING = ON;\nGO\nALTER DATABASE SCOPED CONFIGURATION SET ASYNC_STATS_UPDATE_WAIT_AT_LOW_PRIORITY = OFF;\nGO\nALTER DATABASE SCOPED CONFIGURATION SET BATCH_MODE_ADAPTIVE_JOINS = ON;\nGO\nALTER DATABASE SCOPED CONFIGURATION SET BATCH_MODE_MEMORY_GRANT_FEEDBACK = ON;\nGO\nALTER DATABASE SCOPED CONFIGURATION SET BATCH_MODE_ON_ROWSTORE = ON;\nGO\nALTER DATABASE SCOPED CONFIGURATION SET CE_FEEDBACK = ON;\nGO\nALTER DATABASE SCOPED CONFIGURATION SET DEFERRED_COMPILATION_TV = ON;\nGO\nALTER DATABASE SCOPED CONFIGURATION SET DOP_FEEDBACK = OFF;\nGO\nALTER DATABASE SCOPED CONFIGURATION SET DW_COMPATIBILITY_LEVEL = 0;\nGO\nALTER DATABASE SCOPED CONFIGURATION SET ELEVATE_ONLINE = OFF;\nGO\nALTER DATABASE SCOPED CONFIGURATION SET ELEVATE_RESUMABLE = OFF;\nGO\nALTER DATABASE SCOPED CONFIGURATION SET EXEC_QUERY_STATS_FOR_SCALAR_FUNCTIONS = ON;\nGO\nALTER DATABASE SCOPED CONFIGURATION SET FORCE_SHOWPLAN_RUNTIME_PARAMETER_COLLECTION = OFF;\nGO\nALTER DATABASE SCOPED CONFIGURATION SET GLOBAL_TEMPORARY_TABLE_AUTO_DROP = ON;\nGO\nALTER DATABASE SCOPED CONFIGURATION SET IDENTITY_CACHE = ON;\nGO\nALTER DATABASE SCOPED CONFIGURATION SET INTERLEAVED_EXECUTION_TVF = ON;\nGO\nALTER DATABASE SCOPED CONFIGURATION SET ISOLATE_SECURITY_POLICY_CARDINALITY = OFF;\nGO\nALTER DATABASE SCOPED CONFIGURATION SET LAST_QUERY_PLAN_STATS = OFF;\nGO\nALTER DATABASE SCOPED CONFIGURATION SET LEDGER_DIGEST_STORAGE_ENDPOINT = OFF;\nGO\nALTER DATABASE SCOPED CONFIGURATION SET LEGACY_CARDINALITY_ESTIMATION = OFF;\nGO\nALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET LEGACY_CARDINALITY_ESTIMATION = PRIMARY;\nGO\nALTER DATABASE SCOPED CONFIGURATION SET LIGHTWEIGHT_QUERY_PROFILING = ON;\nGO\nALTER DATABASE SCOPED CONFIGURATION SET MAXDOP = 0;\nGO\nALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET MAXDOP = PRIMARY;\nGO\nALTER DATABASE SCOPED CONFIGURATION SET MEMORY_GRANT_FEEDBACK_PERCENTILE_GRANT = ON;\nGO\nALTER DATABASE SCOPED CONFIGURATION SET MEMORY_GRANT_FEEDBACK_PERSISTENCE = ON;\nGO\nALTER DATABASE SCOPED CONFIGURATION SET OPTIMIZED_PLAN_FORCING = ON;\nGO\nALTER DATABASE SCOPED CONFIGURATION SET OPTIMIZE_FOR_AD_HOC_WORKLOADS = OFF;\nGO\nALTER DATABASE SCOPED CONFIGURATION SET PARAMETER_SENSITIVE_PLAN_OPTIMIZATION = ON;\nGO\nALTER DATABASE SCOPED CONFIGURATION SET PARAMETER_SNIFFING = ON;\nGO\nALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET PARAMETER_SNIFFING = PRIMARY;\nGO\nALTER DATABASE SCOPED CONFIGURATION SET PAUSED_RESUMABLE_INDEX_ABORT_DURATION_MINUTES = 1440;\nGO\nALTER DATABASE SCOPED CONFIGURATION SET QUERY_OPTIMIZER_HOTFIXES = OFF;\nGO\nALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET QUERY_OPTIMIZER_HOTFIXES = PRIMARY;\nGO\nALTER DATABASE SCOPED CONFIGURATION SET ROW_MODE_MEMORY_GRANT_FEEDBACK = ON;\nGO\nALTER DATABASE SCOPED CONFIGURATION SET TSQL_SCALAR_UDF_INLINING = ON;\nGO\nALTER DATABASE SCOPED CONFIGURATION SET VERBOSE_TRUNCATION_WARNINGS = ON;\nGO\nALTER DATABASE SCOPED CONFIGURATION SET XTP_PROCEDURE_EXECUTION_STATISTICS = OFF;\nGO\nALTER DATABASE SCOPED CONFIGURATION SET XTP_QUERY_EXECUTION_STATISTICS = OFF;\nGO\nUSE [adventureworks]\nGO\nEXEC [adventureworks].sys.sp_addextendedproperty @name=N'MS_Description', @value=N'AdventureWorks 2016 Sample OLTP Database' \nGO\nUSE [master]\nGO\nALTER DATABASE [adventureworks] SET  READ_WRITE \nGO", "output_text": "CREATE DATABASE Adventureworks;"}
{"input_text": "convert following DDL/DML code from MSSQL to Postgresql \nUSE [adventureworks]\nGO\n/****** Object:  Table [HumanResources].[Department]    Script Date: 2/3/24 12:02:53 AM ******/\nSET ANSI_NULLS ON\nGO\nSET QUOTED_IDENTIFIER ON\nGO\nCREATE TABLE [HumanResources].[Department](\n        [DepartmentID] [smallint] IDENTITY(1,1) NOT NULL,\n        [Name] [dbo].[Name] NOT NULL,\n        [GroupName] [dbo].[Name] NOT NULL,\n        [ModifiedDate] [datetime] NOT NULL,\n CONSTRAINT [PK_Department_DepartmentID] PRIMARY KEY CLUSTERED \n(\n        [DepartmentID] ASC\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]\n) ON [PRIMARY]\nGO\nSET ANSI_PADDING ON\nGO\n/****** Object:  Index [AK_Department_Name]    Script Date: 2/3/24 12:03:02 AM ******/\nCREATE UNIQUE NONCLUSTERED INDEX [AK_Department_Name] ON [HumanResources].[Department]\n(\n        [Name] ASC\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]\nGO\nALTER TABLE [HumanResources].[Department] ADD  CONSTRAINT [DF_Department_ModifiedDate]  DEFAULT (getdate()) FOR [ModifiedDate]\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key for Department records.' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'TABLE',@level1name=N'Department', @level2type=N'COLUMN',@level2name=N'DepartmentID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Name of the department.' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'TABLE',@level1name=N'Department', @level2type=N'COLUMN',@level2name=N'Name'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Name of the group to which the department belongs.' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'TABLE',@level1name=N'Department', @level2type=N'COLUMN',@level2name=N'GroupName'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Date and time the record was last updated.' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'TABLE',@level1name=N'Department', @level2type=N'COLUMN',@level2name=N'ModifiedDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of GETDATE()' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'TABLE',@level1name=N'Department', @level2type=N'CONSTRAINT',@level2name=N'DF_Department_ModifiedDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key (clustered) constraint' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'TABLE',@level1name=N'Department', @level2type=N'CONSTRAINT',@level2name=N'PK_Department_DepartmentID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Unique nonclustered index.' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'TABLE',@level1name=N'Department', @level2type=N'INDEX',@level2name=N'AK_Department_Name'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Lookup table containing the departments within the Adventure Works Cycles company.' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'TABLE',@level1name=N'Department'\nGO\n", "output_text": "\nCREATE TABLE humanresources.department (\n    departmentid integer NOT NULL,\n    name public.\"Name\" NOT NULL,\n    groupname public.\"Name\" NOT NULL,\n    modifieddate timestamp without time zone DEFAULT now() NOT NULL\n);\n\n\n--\n-- Name: TABLE department; Type: COMMENT; Schema: humanresources; Owner: -\n--\n\nCOMMENT ON TABLE humanresources.department IS 'Lookup table containing the departments within the Adventure Works Cycles company.';\n\n\n--\n-- Name: COLUMN department.departmentid; Type: COMMENT; Schema: humanresources; Owner: -\n--\n\nCOMMENT ON COLUMN humanresources.department.departmentid IS 'Primary key for Department records.';\n\n\n--\n-- Name: COLUMN department.name; Type: COMMENT; Schema: humanresources; Owner: -\n--\n\nCOMMENT ON COLUMN humanresources.department.name IS 'Name of the department.';\n\n\n--\n-- Name: COLUMN department.groupname; Type: COMMENT; Schema: humanresources; Owner: -\n--\n\nCOMMENT ON COLUMN humanresources.department.groupname IS 'Name of the group to which the department belongs.';"}
{"input_text": "convert following DDL/DML code from MSSQL to Postgresql \nUSE [adventureworks]\nGO\n/****** Object:  Table [HumanResources].[Employee]    Script Date: 2/3/24 12:02:53 AM ******/\nSET ANSI_NULLS ON\nGO\nSET QUOTED_IDENTIFIER ON\nGO\nCREATE TABLE [HumanResources].[Employee](\n        [BusinessEntityID] [int] NOT NULL,\n        [NationalIDNumber] [nvarchar](15) NOT NULL,\n        [LoginID] [nvarchar](256) NOT NULL,\n        [OrganizationNode] [hierarchyid] NULL,\n        [OrganizationLevel]  AS ([OrganizationNode].[GetLevel]()),\n        [JobTitle] [nvarchar](50) NOT NULL,\n        [BirthDate] [date] NOT NULL,\n        [MaritalStatus] [nchar](1) NOT NULL,\n        [Gender] [nchar](1) NOT NULL,\n        [HireDate] [date] NOT NULL,\n        [SalariedFlag] [dbo].[Flag] NOT NULL,\n        [VacationHours] [smallint] NOT NULL,\n        [SickLeaveHours] [smallint] NOT NULL,\n        [CurrentFlag] [dbo].[Flag] NOT NULL,\n        [rowguid] [uniqueidentifier] ROWGUIDCOL  NOT NULL,\n        [ModifiedDate] [datetime] NOT NULL,\n CONSTRAINT [PK_Employee_BusinessEntityID] PRIMARY KEY CLUSTERED \n(\n        [BusinessEntityID] ASC\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]\n) ON [PRIMARY]\nGO\nSET ANSI_PADDING ON\nGO\n/****** Object:  Index [AK_Employee_LoginID]    Script Date: 2/3/24 12:03:02 AM ******/\nCREATE UNIQUE NONCLUSTERED INDEX [AK_Employee_LoginID] ON [HumanResources].[Employee]\n(\n        [LoginID] ASC\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]\nGO\nSET ANSI_PADDING ON\nGO\n/****** Object:  Index [AK_Employee_NationalIDNumber]    Script Date: 2/3/24 12:03:02 AM ******/\nCREATE UNIQUE NONCLUSTERED INDEX [AK_Employee_NationalIDNumber] ON [HumanResources].[Employee]\n(\n        [NationalIDNumber] ASC\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]\nGO\n/****** Object:  Index [AK_Employee_rowguid]    Script Date: 2/3/24 12:03:02 AM ******/\nCREATE UNIQUE NONCLUSTERED INDEX [AK_Employee_rowguid] ON [HumanResources].[Employee]\n(\n        [rowguid] ASC\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]\nGO\nSET ARITHABORT ON\nSET CONCAT_NULL_YIELDS_NULL ON\nSET QUOTED_IDENTIFIER ON\nSET ANSI_NULLS ON\nSET ANSI_PADDING ON\nSET ANSI_WARNINGS ON\nSET NUMERIC_ROUNDABORT OFF\nGO\n/****** Object:  Index [IX_Employee_OrganizationLevel_OrganizationNode]    Script Date: 2/3/24 12:03:02 AM ******/\nCREATE NONCLUSTERED INDEX [IX_Employee_OrganizationLevel_OrganizationNode] ON [HumanResources].[Employee]\n(\n        [OrganizationLevel] ASC,\n        [OrganizationNode] ASC\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]\nGO\n/****** Object:  Index [IX_Employee_OrganizationNode]    Script Date: 2/3/24 12:03:02 AM ******/\nCREATE NONCLUSTERED INDEX [IX_Employee_OrganizationNode] ON [HumanResources].[Employee]\n(\n        [OrganizationNode] ASC\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]\nGO\nALTER TABLE [HumanResources].[Employee] ADD  CONSTRAINT [DF_Employee_SalariedFlag]  DEFAULT ((1)) FOR [SalariedFlag]\nGO\nALTER TABLE [HumanResources].[Employee] ADD  CONSTRAINT [DF_Employee_VacationHours]  DEFAULT ((0)) FOR [VacationHours]\nGO\nALTER TABLE [HumanResources].[Employee] ADD  CONSTRAINT [DF_Employee_SickLeaveHours]  DEFAULT ((0)) FOR [SickLeaveHours]\nGO\nALTER TABLE [HumanResources].[Employee] ADD  CONSTRAINT [DF_Employee_CurrentFlag]  DEFAULT ((1)) FOR [CurrentFlag]\nGO\nALTER TABLE [HumanResources].[Employee] ADD  CONSTRAINT [DF_Employee_rowguid]  DEFAULT (newid()) FOR [rowguid]\nGO\nALTER TABLE [HumanResources].[Employee] ADD  CONSTRAINT [DF_Employee_ModifiedDate]  DEFAULT (getdate()) FOR [ModifiedDate]\nGO\nALTER TABLE [HumanResources].[Employee]  WITH CHECK ADD  CONSTRAINT [FK_Employee_Person_BusinessEntityID] FOREIGN KEY([BusinessEntityID])\nREFERENCES [Person].[Person] ([BusinessEntityID])\nGO\nALTER TABLE [HumanResources].[Employee] CHECK CONSTRAINT [FK_Employee_Person_BusinessEntityID]\nGO\nALTER TABLE [HumanResources].[Employee]  WITH CHECK ADD  CONSTRAINT [CK_Employee_BirthDate] CHECK  (([BirthDate]>='1930-01-01' AND [BirthDate]<=dateadd(year,(-18),getdate())))\nGO\nALTER TABLE [HumanResources].[Employee] CHECK CONSTRAINT [CK_Employee_BirthDate]\nGO\nALTER TABLE [HumanResources].[Employee]  WITH CHECK ADD  CONSTRAINT [CK_Employee_Gender] CHECK  ((upper([Gender])='F' OR upper([Gender])='M'))\nGO\nALTER TABLE [HumanResources].[Employee] CHECK CONSTRAINT [CK_Employee_Gender]\nGO\nALTER TABLE [HumanResources].[Employee]  WITH CHECK ADD  CONSTRAINT [CK_Employee_HireDate] CHECK  (([HireDate]>='1996-07-01' AND [HireDate]<=dateadd(day,(1),getdate())))\nGO\nALTER TABLE [HumanResources].[Employee] CHECK CONSTRAINT [CK_Employee_HireDate]\nGO\nALTER TABLE [HumanResources].[Employee]  WITH CHECK ADD  CONSTRAINT [CK_Employee_MaritalStatus] CHECK  ((upper([MaritalStatus])='S' OR upper([MaritalStatus])='M'))\nGO\nALTER TABLE [HumanResources].[Employee] CHECK CONSTRAINT [CK_Employee_MaritalStatus]\nGO\nALTER TABLE [HumanResources].[Employee]  WITH CHECK ADD  CONSTRAINT [CK_Employee_SickLeaveHours] CHECK  (([SickLeaveHours]>=(0) AND [SickLeaveHours]<=(120)))\nGO\nALTER TABLE [HumanResources].[Employee] CHECK CONSTRAINT [CK_Employee_SickLeaveHours]\nGO\nALTER TABLE [HumanResources].[Employee]  WITH CHECK ADD  CONSTRAINT [CK_Employee_VacationHours] CHECK  (([VacationHours]>=(-40) AND [VacationHours]<=(240)))\nGO\nALTER TABLE [HumanResources].[Employee] CHECK CONSTRAINT [CK_Employee_VacationHours]\nGO\n/****** Object:  Trigger [HumanResources].[dEmployee]    Script Date: 2/3/24 12:03:03 AM ******/\nSET ANSI_NULLS ON\nGO\nSET QUOTED_IDENTIFIER ON\nGO\n\nCREATE TRIGGER [HumanResources].[dEmployee] ON [HumanResources].[Employee] \nINSTEAD OF DELETE NOT FOR REPLICATION AS \nBEGIN\n    DECLARE @Count int;\n\n    SET @Count = @@ROWCOUNT;\n    IF @Count = 0 \n        RETURN;\n\n    SET NOCOUNT ON;\n\n    BEGIN\n        RAISERROR\n            (N'Employees cannot be deleted. They can only be marked as not current.', -- Message\n            10, -- Severity.\n            1); -- State.\n\n        -- Rollback any active or uncommittable transactions\n        IF @@TRANCOUNT > 0\n        BEGIN\n            ROLLBACK TRANSACTION;\n        END\n    END;\nEND;\n\nGO\nALTER TABLE [HumanResources].[Employee] ENABLE TRIGGER [dEmployee]\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key for Employee records.  Foreign key to BusinessEntity.BusinessEntityID.' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'TABLE',@level1name=N'Employee', @level2type=N'COLUMN',@level2name=N'BusinessEntityID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Unique national identification number such as a social security number.' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'TABLE',@level1name=N'Employee', @level2type=N'COLUMN',@level2name=N'NationalIDNumber'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Network login.' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'TABLE',@level1name=N'Employee', @level2type=N'COLUMN',@level2name=N'LoginID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Where the employee is located in corporate hierarchy.' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'TABLE',@level1name=N'Employee', @level2type=N'COLUMN',@level2name=N'OrganizationNode'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The depth of the employee in the corporate hierarchy.' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'TABLE',@level1name=N'Employee', @level2type=N'COLUMN',@level2name=N'OrganizationLevel'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Work title such as Buyer or Sales Representative.' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'TABLE',@level1name=N'Employee', @level2type=N'COLUMN',@level2name=N'JobTitle'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Date of birth.' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'TABLE',@level1name=N'Employee', @level2type=N'COLUMN',@level2name=N'BirthDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'M = Married, S = Single' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'TABLE',@level1name=N'Employee', @level2type=N'COLUMN',@level2name=N'MaritalStatus'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'M = Male, F = Female' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'TABLE',@level1name=N'Employee', @level2type=N'COLUMN',@level2name=N'Gender'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Employee hired on this date.' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'TABLE',@level1name=N'Employee', @level2type=N'COLUMN',@level2name=N'HireDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Job classification. 0 = Hourly, not exempt from collective bargaining. 1 = Salaried, exempt from collective bargaining.' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'TABLE',@level1name=N'Employee', @level2type=N'COLUMN',@level2name=N'SalariedFlag'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of 1 (TRUE)' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'TABLE',@level1name=N'Employee', @level2type=N'CONSTRAINT',@level2name=N'DF_Employee_SalariedFlag'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Number of available vacation hours.' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'TABLE',@level1name=N'Employee', @level2type=N'COLUMN',@level2name=N'VacationHours'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of 0' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'TABLE',@level1name=N'Employee', @level2type=N'CONSTRAINT',@level2name=N'DF_Employee_VacationHours'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Number of available sick leave hours.' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'TABLE',@level1name=N'Employee', @level2type=N'COLUMN',@level2name=N'SickLeaveHours'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of 0' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'TABLE',@level1name=N'Employee', @level2type=N'CONSTRAINT',@level2name=N'DF_Employee_SickLeaveHours'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'0 = Inactive, 1 = Active' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'TABLE',@level1name=N'Employee', @level2type=N'COLUMN',@level2name=N'CurrentFlag'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of 1' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'TABLE',@level1name=N'Employee', @level2type=N'CONSTRAINT',@level2name=N'DF_Employee_CurrentFlag'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'TABLE',@level1name=N'Employee', @level2type=N'COLUMN',@level2name=N'rowguid'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of NEWID()' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'TABLE',@level1name=N'Employee', @level2type=N'CONSTRAINT',@level2name=N'DF_Employee_rowguid'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Date and time the record was last updated.' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'TABLE',@level1name=N'Employee', @level2type=N'COLUMN',@level2name=N'ModifiedDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of GETDATE()' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'TABLE',@level1name=N'Employee', @level2type=N'CONSTRAINT',@level2name=N'DF_Employee_ModifiedDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key (clustered) constraint' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'TABLE',@level1name=N'Employee', @level2type=N'CONSTRAINT',@level2name=N'PK_Employee_BusinessEntityID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Unique nonclustered index.' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'TABLE',@level1name=N'Employee', @level2type=N'INDEX',@level2name=N'AK_Employee_LoginID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Unique nonclustered index.' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'TABLE',@level1name=N'Employee', @level2type=N'INDEX',@level2name=N'AK_Employee_NationalIDNumber'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Unique nonclustered index. Used to support replication samples.' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'TABLE',@level1name=N'Employee', @level2type=N'INDEX',@level2name=N'AK_Employee_rowguid'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Unique nonclustered index.' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'TABLE',@level1name=N'Employee', @level2type=N'INDEX',@level2name=N'IX_Employee_OrganizationLevel_OrganizationNode'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Unique nonclustered index.' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'TABLE',@level1name=N'Employee', @level2type=N'INDEX',@level2name=N'IX_Employee_OrganizationNode'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Employee information such as salary, department, and title.' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'TABLE',@level1name=N'Employee'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'INSTEAD OF DELETE trigger which keeps Employees from being deleted.' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'TABLE',@level1name=N'Employee', @level2type=N'TRIGGER',@level2name=N'dEmployee'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key constraint referencing Person.BusinessEntityID.' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'TABLE',@level1name=N'Employee', @level2type=N'CONSTRAINT',@level2name=N'FK_Employee_Person_BusinessEntityID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Check constraint [BirthDate] >= ''1930-01-01'' AND [BirthDate] <= dateadd(year,(-18),GETDATE())' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'TABLE',@level1name=N'Employee', @level2type=N'CONSTRAINT',@level2name=N'CK_Employee_BirthDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Check constraint [Gender]=''f'' OR [Gender]=''m'' OR [Gender]=''F'' OR [Gender]=''M''' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'TABLE',@level1name=N'Employee', @level2type=N'CONSTRAINT',@level2name=N'CK_Employee_Gender'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Check constraint [HireDate] >= ''1996-07-01'' AND [HireDate] <= dateadd(day,(1),GETDATE())' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'TABLE',@level1name=N'Employee', @level2type=N'CONSTRAINT',@level2name=N'CK_Employee_HireDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Check constraint [MaritalStatus]=''s'' OR [MaritalStatus]=''m'' OR [MaritalStatus]=''S'' OR [MaritalStatus]=''M''' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'TABLE',@level1name=N'Employee', @level2type=N'CONSTRAINT',@level2name=N'CK_Employee_MaritalStatus'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Check constraint [SickLeaveHours] >= (0) AND [SickLeaveHours] <= (120)' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'TABLE',@level1name=N'Employee', @level2type=N'CONSTRAINT',@level2name=N'CK_Employee_SickLeaveHours'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Check constraint [VacationHours] >= (-40) AND [VacationHours] <= (240)' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'TABLE',@level1name=N'Employee', @level2type=N'CONSTRAINT',@level2name=N'CK_Employee_VacationHours'\nGO\n", "output_text": "CREATE TABLE humanresources.department (CREATE TABLE humanresources.employee (\n    businessentityid integer NOT NULL,\n    nationalidnumber character varying(15) NOT NULL,\n    loginid character varying(256) NOT NULL,\n    jobtitle character varying(50) NOT NULL,\n    birthdate date NOT NULL,\n    maritalstatus character(1) NOT NULL,\n    gender character(1) NOT NULL,\n    hiredate date NOT NULL,\n    salariedflag public.\"Flag\" DEFAULT true NOT NULL,\n    vacationhours smallint DEFAULT 0 NOT NULL,\n    sickleavehours smallint DEFAULT 0 NOT NULL,\n    currentflag public.\"Flag\" DEFAULT true NOT NULL,\n    rowguid uuid DEFAULT public.uuid_generate_v1() NOT NULL,\n    modifieddate timestamp without time zone DEFAULT now() NOT NULL,\n    organizationnode character varying DEFAULT '/'::character varying,\n    CONSTRAINT \"CK_Employee_BirthDate\" CHECK (((birthdate >= '1930-01-01'::date) AND (birthdate <= (now() - '18 years'::interval)))),\n    CONSTRAINT \"CK_Employee_Gender\" CHECK ((upper((gender)::text) = ANY (ARRAY['M'::text, 'F'::text]))),\n    CONSTRAINT \"CK_Employee_HireDate\" CHECK (((hiredate >= '1996-07-01'::date) AND (hiredate <= (now() + '1 day'::interval)))),\n    CONSTRAINT \"CK_Employee_MaritalStatus\" CHECK ((upper((maritalstatus)::text) = ANY (ARRAY['M'::text, 'S'::text]))),\n    CONSTRAINT \"CK_Employee_SickLeaveHours\" CHECK (((sickleavehours >= 0) AND (sickleavehours <= 120))),\n    CONSTRAINT \"CK_Employee_VacationHours\" CHECK (((vacationhours >= '-40'::integer) AND (vacationhours <= 240)))\n);\n\n\n--\n-- Name: TABLE employee; Type: COMMENT; Schema: humanresources; Owner: -\n--\n\nCOMMENT ON TABLE humanresources.employee IS 'Employee information such as salary, department, and title.';\n\n\n--\n-- Name: COLUMN employee.businessentityid; Type: COMMENT; Schema: humanresources; Owner: -\n--\n\nCOMMENT ON COLUMN humanresources.employee.businessentityid IS 'Primary key for Employee records.  Foreign key to BusinessEntity.BusinessEntityID.';\n\n\n--\n-- Name: COLUMN employee.nationalidnumber; Type: COMMENT; Schema: humanresources; Owner: -\n--\n\nCOMMENT ON COLUMN humanresources.employee.nationalidnumber IS 'Unique national identification number such as a social security number.';\n\n\n--\n-- Name: COLUMN employee.loginid; Type: COMMENT; Schema: humanresources; Owner: -\n--\n\nCOMMENT ON COLUMN humanresources.employee.loginid IS 'Network login.';\n\n\n--\n-- Name: COLUMN employee.jobtitle; Type: COMMENT; Schema: humanresources; Owner: -\n--\n\nCOMMENT ON COLUMN humanresources.employee.jobtitle IS 'Work title such as Buyer or Sales Representative.';\n\n\n--\n-- Name: COLUMN employee.birthdate; Type: COMMENT; Schema: humanresources; Owner: -\n--\n\nCOMMENT ON COLUMN humanresources.employee.birthdate IS 'Date of birth.';\n\n\n--\n-- Name: COLUMN employee.maritalstatus; Type: COMMENT; Schema: humanresources; Owner: -\n--\n\nCOMMENT ON COLUMN humanresources.employee.maritalstatus IS 'M = Married, S = Single';\n\n\n--\n-- Name: COLUMN employee.gender; Type: COMMENT; Schema: humanresources; Owner: -\n--\n\nCOMMENT ON COLUMN humanresources.employee.gender IS 'M = Male, F = Female';\n\n\n--\n-- Name: COLUMN employee.hiredate; Type: COMMENT; Schema: humanresources; Owner: -\n--\n\nCOMMENT ON COLUMN humanresources.employee.hiredate IS 'Employee hired on this date.';\n\n\n--\n-- Name: COLUMN employee.salariedflag; Type: COMMENT; Schema: humanresources; Owner: -\n--\n\nCOMMENT ON COLUMN humanresources.employee.salariedflag IS 'Job classification. 0 = Hourly, not exempt from collective bargaining. 1 = Salaried, exempt from collective bargaining.';\n\n\n--\n-- Name: COLUMN employee.vacationhours; Type: COMMENT; Schema: humanresources; Owner: -\n--\n\nCOMMENT ON COLUMN humanresources.employee.vacationhours IS 'Number of available vacation hours.';\n\n\n--\n-- Name: COLUMN employee.sickleavehours; Type: COMMENT; Schema: humanresources; Owner: -\n--\n\nCOMMENT ON COLUMN humanresources.employee.sickleavehours IS 'Number of available sick leave hours.';\n\n\n--\n-- Name: COLUMN employee.currentflag; Type: COMMENT; Schema: humanresources; Owner: -\n--\n\nCOMMENT ON COLUMN humanresources.employee.currentflag IS '0 = Inactive, 1 = Active';\n\n\n--\n-- Name: COLUMN employee.organizationnode; Type: COMMENT; Schema: humanresources; Owner: -\n--\n\nCOMMENT ON COLUMN humanresources.employee.organizationnode IS 'Where the employee is located in corporate hierarchy.';\n"}
{"input_text": "convert following DDL/DML code from MSSQL to Postgresql \nUSE [adventureworks]\nGO\n/****** Object:  Table [HumanResources].[EmployeeDepartmentHistory]    Script Date: 2/3/24 12:02:53 AM ******/\nSET ANSI_NULLS ON\nGO\nSET QUOTED_IDENTIFIER ON\nGO\nCREATE TABLE [HumanResources].[EmployeeDepartmentHistory](\n\t[BusinessEntityID] [int] NOT NULL,\n\t[DepartmentID] [smallint] NOT NULL,\n\t[ShiftID] [tinyint] NOT NULL,\n\t[StartDate] [date] NOT NULL,\n\t[EndDate] [date] NULL,\n\t[ModifiedDate] [datetime] NOT NULL,\n CONSTRAINT [PK_EmployeeDepartmentHistory_BusinessEntityID_StartDate_DepartmentID] PRIMARY KEY CLUSTERED \n(\n\t[BusinessEntityID] ASC,\n\t[StartDate] ASC,\n\t[DepartmentID] ASC,\n\t[ShiftID] ASC\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]\n) ON [PRIMARY]\nGO\n/****** Object:  Index [IX_EmployeeDepartmentHistory_DepartmentID]    Script Date: 2/3/24 12:03:02 AM ******/\nCREATE NONCLUSTERED INDEX [IX_EmployeeDepartmentHistory_DepartmentID] ON [HumanResources].[EmployeeDepartmentHistory]\n(\n\t[DepartmentID] ASC\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]\nGO\n/****** Object:  Index [IX_EmployeeDepartmentHistory_ShiftID]    Script Date: 2/3/24 12:03:02 AM ******/\nCREATE NONCLUSTERED INDEX [IX_EmployeeDepartmentHistory_ShiftID] ON [HumanResources].[EmployeeDepartmentHistory]\n(\n\t[ShiftID] ASC\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]\nGO\nALTER TABLE [HumanResources].[EmployeeDepartmentHistory] ADD  CONSTRAINT [DF_EmployeeDepartmentHistory_ModifiedDate]  DEFAULT (getdate()) FOR [ModifiedDate]\nGO\nALTER TABLE [HumanResources].[EmployeeDepartmentHistory]  WITH CHECK ADD  CONSTRAINT [FK_EmployeeDepartmentHistory_Department_DepartmentID] FOREIGN KEY([DepartmentID])\nREFERENCES [HumanResources].[Department] ([DepartmentID])\nGO\nALTER TABLE [HumanResources].[EmployeeDepartmentHistory] CHECK CONSTRAINT [FK_EmployeeDepartmentHistory_Department_DepartmentID]\nGO\nALTER TABLE [HumanResources].[EmployeeDepartmentHistory]  WITH CHECK ADD  CONSTRAINT [FK_EmployeeDepartmentHistory_Employee_BusinessEntityID] FOREIGN KEY([BusinessEntityID])\nREFERENCES [HumanResources].[Employee] ([BusinessEntityID])\nGO\nALTER TABLE [HumanResources].[EmployeeDepartmentHistory] CHECK CONSTRAINT [FK_EmployeeDepartmentHistory_Employee_BusinessEntityID]\nGO\nALTER TABLE [HumanResources].[EmployeeDepartmentHistory]  WITH CHECK ADD  CONSTRAINT [FK_EmployeeDepartmentHistory_Shift_ShiftID] FOREIGN KEY([ShiftID])\nREFERENCES [HumanResources].[Shift] ([ShiftID])\nGO\nALTER TABLE [HumanResources].[EmployeeDepartmentHistory] CHECK CONSTRAINT [FK_EmployeeDepartmentHistory_Shift_ShiftID]\nGO\nALTER TABLE [HumanResources].[EmployeeDepartmentHistory]  WITH CHECK ADD  CONSTRAINT [CK_EmployeeDepartmentHistory_EndDate] CHECK  (([EndDate]>=[StartDate] OR [EndDate] IS NULL))\nGO\nALTER TABLE [HumanResources].[EmployeeDepartmentHistory] CHECK CONSTRAINT [CK_EmployeeDepartmentHistory_EndDate]\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Employee identification number. Foreign key to Employee.BusinessEntityID.' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'TABLE',@level1name=N'EmployeeDepartmentHistory', @level2type=N'COLUMN',@level2name=N'BusinessEntityID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Department in which the employee worked including currently. Foreign key to Department.DepartmentID.' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'TABLE',@level1name=N'EmployeeDepartmentHistory', @level2type=N'COLUMN',@level2name=N'DepartmentID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Identifies which 8-hour shift the employee works. Foreign key to Shift.Shift.ID.' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'TABLE',@level1name=N'EmployeeDepartmentHistory', @level2type=N'COLUMN',@level2name=N'ShiftID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Date the employee started work in the department.' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'TABLE',@level1name=N'EmployeeDepartmentHistory', @level2type=N'COLUMN',@level2name=N'StartDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Date the employee left the department. NULL = Current department.' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'TABLE',@level1name=N'EmployeeDepartmentHistory', @level2type=N'COLUMN',@level2name=N'EndDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Date and time the record was last updated.' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'TABLE',@level1name=N'EmployeeDepartmentHistory', @level2type=N'COLUMN',@level2name=N'ModifiedDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of GETDATE()' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'TABLE',@level1name=N'EmployeeDepartmentHistory', @level2type=N'CONSTRAINT',@level2name=N'DF_EmployeeDepartmentHistory_ModifiedDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key (clustered) constraint' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'TABLE',@level1name=N'EmployeeDepartmentHistory', @level2type=N'CONSTRAINT',@level2name=N'PK_EmployeeDepartmentHistory_BusinessEntityID_StartDate_DepartmentID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Nonclustered index.' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'TABLE',@level1name=N'EmployeeDepartmentHistory', @level2type=N'INDEX',@level2name=N'IX_EmployeeDepartmentHistory_DepartmentID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Nonclustered index.' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'TABLE',@level1name=N'EmployeeDepartmentHistory', @level2type=N'INDEX',@level2name=N'IX_EmployeeDepartmentHistory_ShiftID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Employee department transfers.' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'TABLE',@level1name=N'EmployeeDepartmentHistory'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key constraint referencing Department.DepartmentID.' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'TABLE',@level1name=N'EmployeeDepartmentHistory', @level2type=N'CONSTRAINT',@level2name=N'FK_EmployeeDepartmentHistory_Department_DepartmentID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key constraint referencing Employee.EmployeeID.' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'TABLE',@level1name=N'EmployeeDepartmentHistory', @level2type=N'CONSTRAINT',@level2name=N'FK_EmployeeDepartmentHistory_Employee_BusinessEntityID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key constraint referencing Shift.ShiftID' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'TABLE',@level1name=N'EmployeeDepartmentHistory', @level2type=N'CONSTRAINT',@level2name=N'FK_EmployeeDepartmentHistory_Shift_ShiftID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Check constraint [EndDate] >= [StartDate] OR [EndDate] IS NUL' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'TABLE',@level1name=N'EmployeeDepartmentHistory', @level2type=N'CONSTRAINT',@level2name=N'CK_EmployeeDepartmentHistory_EndDate'\nGO", "output_text": "CREATE TABLE humanresources.employeedepartmenthistory (\n    businessentityid integer NOT NULL,\n    departmentid smallint NOT NULL,\n    shiftid smallint NOT NULL,\n    startdate date NOT NULL,\n    enddate date,\n    modifieddate timestamp without time zone DEFAULT now() NOT NULL,\n    CONSTRAINT \"CK_EmployeeDepartmentHistory_EndDate\" CHECK (((enddate >= startdate) OR (enddate IS NULL)))\n);\n\n\n--\n-- Name: TABLE employeedepartmenthistory; Type: COMMENT; Schema: humanresources; Owner: -\n--\n\nCOMMENT ON TABLE humanresources.employeedepartmenthistory IS 'Employee department transfers.';\n\n\n--\n-- Name: COLUMN employeedepartmenthistory.businessentityid; Type: COMMENT; Schema: humanresources; Owner: -\n--\n\nCOMMENT ON COLUMN humanresources.employeedepartmenthistory.businessentityid IS 'Employee identification number. Foreign key to Employee.BusinessEntityID.';\n\n\n--\n-- Name: COLUMN employeedepartmenthistory.departmentid; Type: COMMENT; Schema: humanresources; Owner: -\n--\n\nCOMMENT ON COLUMN humanresources.employeedepartmenthistory.departmentid IS 'Department in which the employee worked including currently. Foreign key to Department.DepartmentID.';\n\n\n--\n-- Name: COLUMN employeedepartmenthistory.shiftid; Type: COMMENT; Schema: humanresources; Owner: -\n--\n\nCOMMENT ON COLUMN humanresources.employeedepartmenthistory.shiftid IS 'Identifies which 8-hour shift the employee works. Foreign key to Shift.Shift.ID.';\n\n\n--\n-- Name: COLUMN employeedepartmenthistory.startdate; Type: COMMENT; Schema: humanresources; Owner: -\n--\n\nCOMMENT ON COLUMN humanresources.employeedepartmenthistory.startdate IS 'Date the employee started work in the department.';\n\n\n--\n-- Name: COLUMN employeedepartmenthistory.enddate; Type: COMMENT; Schema: humanresources; Owner: -\n--\n\nCOMMENT ON COLUMN humanresources.employeedepartmenthistory.enddate IS 'Date the employee left the department. NULL = Current department.';"}
{"input_text": "convert following DDL/DML code from MSSQL to Postgresql \nUSE [adventureworks]\nGO\n/****** Object:  Table [HumanResources].[EmployeePayHistory]    Script Date: 2/3/24 12:02:56 AM ******/\nSET ANSI_NULLS ON\nGO\nSET QUOTED_IDENTIFIER ON\nGO\nCREATE TABLE [HumanResources].[EmployeePayHistory](\n\t[BusinessEntityID] [int] NOT NULL,\n\t[RateChangeDate] [datetime] NOT NULL,\n\t[Rate] [money] NOT NULL,\n\t[PayFrequency] [tinyint] NOT NULL,\n\t[ModifiedDate] [datetime] NOT NULL,\n CONSTRAINT [PK_EmployeePayHistory_BusinessEntityID_RateChangeDate] PRIMARY KEY CLUSTERED \n(\n\t[BusinessEntityID] ASC,\n\t[RateChangeDate] ASC\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]\n) ON [PRIMARY]\nGO\nALTER TABLE [HumanResources].[EmployeePayHistory] ADD  CONSTRAINT [DF_EmployeePayHistory_ModifiedDate]  DEFAULT (getdate()) FOR [ModifiedDate]\nGO\nALTER TABLE [HumanResources].[EmployeePayHistory]  WITH CHECK ADD  CONSTRAINT [FK_EmployeePayHistory_Employee_BusinessEntityID] FOREIGN KEY([BusinessEntityID])\nREFERENCES [HumanResources].[Employee] ([BusinessEntityID])\nGO\nALTER TABLE [HumanResources].[EmployeePayHistory] CHECK CONSTRAINT [FK_EmployeePayHistory_Employee_BusinessEntityID]\nGO\nALTER TABLE [HumanResources].[EmployeePayHistory]  WITH CHECK ADD  CONSTRAINT [CK_EmployeePayHistory_PayFrequency] CHECK  (([PayFrequency]=(2) OR [PayFrequency]=(1)))\nGO\nALTER TABLE [HumanResources].[EmployeePayHistory] CHECK CONSTRAINT [CK_EmployeePayHistory_PayFrequency]\nGO\nALTER TABLE [HumanResources].[EmployeePayHistory]  WITH CHECK ADD  CONSTRAINT [CK_EmployeePayHistory_Rate] CHECK  (([Rate]>=(6.50) AND [Rate]<=(200.00)))\nGO\nALTER TABLE [HumanResources].[EmployeePayHistory] CHECK CONSTRAINT [CK_EmployeePayHistory_Rate]\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Employee identification number. Foreign key to Employee.BusinessEntityID.' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'TABLE',@level1name=N'EmployeePayHistory', @level2type=N'COLUMN',@level2name=N'BusinessEntityID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Date the change in pay is effective' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'TABLE',@level1name=N'EmployeePayHistory', @level2type=N'COLUMN',@level2name=N'RateChangeDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Salary hourly rate.' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'TABLE',@level1name=N'EmployeePayHistory', @level2type=N'COLUMN',@level2name=N'Rate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'1 = Salary received monthly, 2 = Salary received biweekly' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'TABLE',@level1name=N'EmployeePayHistory', @level2type=N'COLUMN',@level2name=N'PayFrequency'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Date and time the record was last updated.' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'TABLE',@level1name=N'EmployeePayHistory', @level2type=N'COLUMN',@level2name=N'ModifiedDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of GETDATE()' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'TABLE',@level1name=N'EmployeePayHistory', @level2type=N'CONSTRAINT',@level2name=N'DF_EmployeePayHistory_ModifiedDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key (clustered) constraint' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'TABLE',@level1name=N'EmployeePayHistory', @level2type=N'CONSTRAINT',@level2name=N'PK_EmployeePayHistory_BusinessEntityID_RateChangeDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Employee pay history.' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'TABLE',@level1name=N'EmployeePayHistory'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key constraint referencing Employee.EmployeeID.' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'TABLE',@level1name=N'EmployeePayHistory', @level2type=N'CONSTRAINT',@level2name=N'FK_EmployeePayHistory_Employee_BusinessEntityID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Check constraint [PayFrequency]=(3) OR [PayFrequency]=(2) OR [PayFrequency]=(1)' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'TABLE',@level1name=N'EmployeePayHistory', @level2type=N'CONSTRAINT',@level2name=N'CK_EmployeePayHistory_PayFrequency'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Check constraint [Rate] >= (6.50) AND [Rate] <= (200.00)' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'TABLE',@level1name=N'EmployeePayHistory', @level2type=N'CONSTRAINT',@level2name=N'CK_EmployeePayHistory_Rate'\nGO", "output_text": "\nCREATE TABLE humanresources.employeepayhistory (\n    businessentityid integer NOT NULL,\n    ratechangedate timestamp without time zone NOT NULL,\n    rate numeric NOT NULL,\n    payfrequency smallint NOT NULL,\n    modifieddate timestamp without time zone DEFAULT now() NOT NULL,\n    CONSTRAINT \"CK_EmployeePayHistory_PayFrequency\" CHECK ((payfrequency = ANY (ARRAY[1, 2]))),\n    CONSTRAINT \"CK_EmployeePayHistory_Rate\" CHECK (((rate >= 6.50) AND (rate <= 200.00)))\n);\n\n\n--\n-- Name: TABLE employeepayhistory; Type: COMMENT; Schema: humanresources; Owner: -\n--\n\nCOMMENT ON TABLE humanresources.employeepayhistory IS 'Employee pay history.';\n\n\n--\n-- Name: COLUMN employeepayhistory.businessentityid; Type: COMMENT; Schema: humanresources; Owner: -\n--\n\nCOMMENT ON COLUMN humanresources.employeepayhistory.businessentityid IS 'Employee identification number. Foreign key to Employee.BusinessEntityID.';\n\n\n--\n-- Name: COLUMN employeepayhistory.ratechangedate; Type: COMMENT; Schema: humanresources; Owner: -\n--\n\nCOMMENT ON COLUMN humanresources.employeepayhistory.ratechangedate IS 'Date the change in pay is effective';\n\n\n--\n-- Name: COLUMN employeepayhistory.rate; Type: COMMENT; Schema: humanresources; Owner: -\n--\n\nCOMMENT ON COLUMN humanresources.employeepayhistory.rate IS 'Salary hourly rate.';\n\n\n--\n-- Name: COLUMN employeepayhistory.payfrequency; Type: COMMENT; Schema: humanresources; Owner: -\n--\n\nCOMMENT ON COLUMN humanresources.employeepayhistory.payfrequency IS '1 = Salary received monthly, 2 = Salary received biweekly';\n\n\n--\n-- Name: eph; Type: VIEW; Schema: hr; Owner: -\n--"}
{"input_text": "convert following DDL/DML code from MSSQL to Postgresql \nUSE [adventureworks]\nGO\n/****** Object:  Table [HumanResources].[JobCandidate]    Script Date: 2/3/24 12:02:54 AM ******/\nSET ANSI_NULLS ON\nGO\nSET QUOTED_IDENTIFIER ON\nGO\nCREATE TABLE [HumanResources].[JobCandidate](\n\t[JobCandidateID] [int] IDENTITY(1,1) NOT NULL,\n\t[BusinessEntityID] [int] NULL,\n\t[Resume] [xml](CONTENT [HumanResources].[HRResumeSchemaCollection]) NULL,\n\t[ModifiedDate] [datetime] NOT NULL,\n CONSTRAINT [PK_JobCandidate_JobCandidateID] PRIMARY KEY CLUSTERED \n(\n\t[JobCandidateID] ASC\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]\n) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]\nGO\n/****** Object:  Index [IX_JobCandidate_BusinessEntityID]    Script Date: 2/3/24 12:03:02 AM ******/\nCREATE NONCLUSTERED INDEX [IX_JobCandidate_BusinessEntityID] ON [HumanResources].[JobCandidate]\n(\n\t[BusinessEntityID] ASC\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]\nGO\n/****** Object:  FullTextIndex     Script Date: 2/3/24 12:03:03 AM ******/\nCREATE FULLTEXT INDEX ON [HumanResources].[JobCandidate](\n[Resume] LANGUAGE 'English')\nKEY INDEX [PK_JobCandidate_JobCandidateID]ON ([AW2016FullTextCatalog], FILEGROUP [PRIMARY])\nWITH (CHANGE_TRACKING = AUTO, STOPLIST = SYSTEM)\n\nGO\nALTER TABLE [HumanResources].[JobCandidate] ADD  CONSTRAINT [DF_JobCandidate_ModifiedDate]  DEFAULT (getdate()) FOR [ModifiedDate]\nGO\nALTER TABLE [HumanResources].[JobCandidate]  WITH CHECK ADD  CONSTRAINT [FK_JobCandidate_Employee_BusinessEntityID] FOREIGN KEY([BusinessEntityID])\nREFERENCES [HumanResources].[Employee] ([BusinessEntityID])\nGO\nALTER TABLE [HumanResources].[JobCandidate] CHECK CONSTRAINT [FK_JobCandidate_Employee_BusinessEntityID]\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key for JobCandidate records.' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'TABLE',@level1name=N'JobCandidate', @level2type=N'COLUMN',@level2name=N'JobCandidateID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Employee identification number if applicant was hired. Foreign key to Employee.BusinessEntityID.' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'TABLE',@level1name=N'JobCandidate', @level2type=N'COLUMN',@level2name=N'BusinessEntityID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'R\u00e9sum\u00e9 in XML format.' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'TABLE',@level1name=N'JobCandidate', @level2type=N'COLUMN',@level2name=N'Resume'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Date and time the record was last updated.' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'TABLE',@level1name=N'JobCandidate', @level2type=N'COLUMN',@level2name=N'ModifiedDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of GETDATE()' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'TABLE',@level1name=N'JobCandidate', @level2type=N'CONSTRAINT',@level2name=N'DF_JobCandidate_ModifiedDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key (clustered) constraint' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'TABLE',@level1name=N'JobCandidate', @level2type=N'CONSTRAINT',@level2name=N'PK_JobCandidate_JobCandidateID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Nonclustered index.' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'TABLE',@level1name=N'JobCandidate', @level2type=N'INDEX',@level2name=N'IX_JobCandidate_BusinessEntityID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'R\u00e9sum\u00e9s submitted to Human Resources by job applicants.' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'TABLE',@level1name=N'JobCandidate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key constraint referencing Employee.EmployeeID.' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'TABLE',@level1name=N'JobCandidate', @level2type=N'CONSTRAINT',@level2name=N'FK_JobCandidate_Employee_BusinessEntityID'\nGO", "output_text": "\nCREATE TABLE humanresources.jobcandidate (\n    jobcandidateid integer NOT NULL,\n    businessentityid integer,\n    resume xml,\n    modifieddate timestamp without time zone DEFAULT now() NOT NULL\n);\n\n\n--\n-- Name: TABLE jobcandidate; Type: COMMENT; Schema: humanresources; Owner: -\n--\n\nCOMMENT ON TABLE humanresources.jobcandidate IS 'R\u00c3\u00a9sum\u00c3\u00a9s submitted to Human Resources by job applicants.';\n\n\n--\n-- Name: COLUMN jobcandidate.jobcandidateid; Type: COMMENT; Schema: humanresources; Owner: -\n--\n\nCOMMENT ON COLUMN humanresources.jobcandidate.jobcandidateid IS 'Primary key for JobCandidate records.';\n\n\n--\n-- Name: COLUMN jobcandidate.businessentityid; Type: COMMENT; Schema: humanresources; Owner: -\n--\n\nCOMMENT ON COLUMN humanresources.jobcandidate.businessentityid IS 'Employee identification number if applicant was hired. Foreign key to Employee.BusinessEntityID.';\n\n\n--\n-- Name: COLUMN jobcandidate.resume; Type: COMMENT; Schema: humanresources; Owner: -\n--\n\nCOMMENT ON COLUMN humanresources.jobcandidate.resume IS 'R\u00c3\u00a9sum\u00c3\u00a9 in XML format.';\n"}
{"input_text": "convert following DDL/DML code from MSSQL to Postgresql \nUSE [adventureworks]\nGO\n/****** Object:  Schema [HumanResources]    Script Date: 2/3/24 12:02:51 AM ******/\nCREATE SCHEMA [HumanResources]\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Contains objects related to employees and departments.' , @level0type=N'SCHEMA',@level0name=N'HumanResources'\nGO", "output_text": "CREATE SCHEMA humanresources;\nCOMMENT ON SCHEMA humanresources IS 'Contains objects related to employees and departments.';"}
{"input_text": "convert following DDL/DML code from MSSQL to Postgresql \nUSE [adventureworks]\nGO\n/****** Object:  Table [HumanResources].[Shift]    Script Date: 2/3/24 12:02:53 AM ******/\nSET ANSI_NULLS ON\nGO\nSET QUOTED_IDENTIFIER ON\nGO\nCREATE TABLE [HumanResources].[Shift](\n\t[ShiftID] [tinyint] IDENTITY(1,1) NOT NULL,\n\t[Name] [dbo].[Name] NOT NULL,\n\t[StartTime] [time](7) NOT NULL,\n\t[EndTime] [time](7) NOT NULL,\n\t[ModifiedDate] [datetime] NOT NULL,\n CONSTRAINT [PK_Shift_ShiftID] PRIMARY KEY CLUSTERED \n(\n\t[ShiftID] ASC\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]\n) ON [PRIMARY]\nGO\nSET ANSI_PADDING ON\nGO\n/****** Object:  Index [AK_Shift_Name]    Script Date: 2/3/24 12:03:02 AM ******/\nCREATE UNIQUE NONCLUSTERED INDEX [AK_Shift_Name] ON [HumanResources].[Shift]\n(\n\t[Name] ASC\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]\nGO\n/****** Object:  Index [AK_Shift_StartTime_EndTime]    Script Date: 2/3/24 12:03:02 AM ******/\nCREATE UNIQUE NONCLUSTERED INDEX [AK_Shift_StartTime_EndTime] ON [HumanResources].[Shift]\n(\n\t[StartTime] ASC,\n\t[EndTime] ASC\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]\nGO\nALTER TABLE [HumanResources].[Shift] ADD  CONSTRAINT [DF_Shift_ModifiedDate]  DEFAULT (getdate()) FOR [ModifiedDate]\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key for Shift records.' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'TABLE',@level1name=N'Shift', @level2type=N'COLUMN',@level2name=N'ShiftID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Shift description.' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'TABLE',@level1name=N'Shift', @level2type=N'COLUMN',@level2name=N'Name'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Shift start time.' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'TABLE',@level1name=N'Shift', @level2type=N'COLUMN',@level2name=N'StartTime'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Shift end time.' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'TABLE',@level1name=N'Shift', @level2type=N'COLUMN',@level2name=N'EndTime'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Date and time the record was last updated.' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'TABLE',@level1name=N'Shift', @level2type=N'COLUMN',@level2name=N'ModifiedDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of GETDATE()' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'TABLE',@level1name=N'Shift', @level2type=N'CONSTRAINT',@level2name=N'DF_Shift_ModifiedDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key (clustered) constraint' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'TABLE',@level1name=N'Shift', @level2type=N'CONSTRAINT',@level2name=N'PK_Shift_ShiftID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Unique nonclustered index.' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'TABLE',@level1name=N'Shift', @level2type=N'INDEX',@level2name=N'AK_Shift_Name'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Unique nonclustered index.' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'TABLE',@level1name=N'Shift', @level2type=N'INDEX',@level2name=N'AK_Shift_StartTime_EndTime'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Work shift lookup table.' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'TABLE',@level1name=N'Shift'\nGO", "output_text": "CREATE TABLE humanresources.shift (\n    shiftid integer NOT NULL,\n    name public.\"Name\" NOT NULL,\n    starttime time without time zone NOT NULL,\n    endtime time without time zone NOT NULL,\n    modifieddate timestamp without time zone DEFAULT now() NOT NULL\n);\n\n\n--\n-- Name: TABLE shift; Type: COMMENT; Schema: humanresources; Owner: -\n--\n\nCOMMENT ON TABLE humanresources.shift IS 'Work shift lookup table.';\n\n\n--\n-- Name: COLUMN shift.shiftid; Type: COMMENT; Schema: humanresources; Owner: -\n--\n\nCOMMENT ON COLUMN humanresources.shift.shiftid IS 'Primary key for Shift records.';\n\n\n--\n-- Name: COLUMN shift.name; Type: COMMENT; Schema: humanresources; Owner: -\n--\n\nCOMMENT ON COLUMN humanresources.shift.name IS 'Shift description.';\n\n\n--\n-- Name: COLUMN shift.starttime; Type: COMMENT; Schema: humanresources; Owner: -\n--\n\nCOMMENT ON COLUMN humanresources.shift.starttime IS 'Shift start time.';\n\n\n--\n-- Name: COLUMN shift.endtime; Type: COMMENT; Schema: humanresources; Owner: -\n--\n\nCOMMENT ON COLUMN humanresources.shift.endtime IS 'Shift end time.';"}
{"input_text": "convert following DDL/DML code from MSSQL to Postgresql \nUSE [adventureworks]\nGO\n/****** Object:  View [HumanResources].[vJobCandidate]    Script Date: 2/3/24 12:02:54 AM ******/\nSET ANSI_NULLS ON\nGO\nSET QUOTED_IDENTIFIER ON\nGO\n\nCREATE VIEW [HumanResources].[vJobCandidate] \nAS \nSELECT \n    jc.[JobCandidateID] \n    ,jc.[BusinessEntityID] \n    ,[Resume].ref.value(N'declare default element namespace \"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/Resume\"; \n        (/Resume/Name/Name.Prefix)[1]', 'nvarchar(30)') AS [Name.Prefix] \n    ,[Resume].ref.value(N'declare default element namespace \"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/Resume\";\n        (/Resume/Name/Name.First)[1]', 'nvarchar(30)') AS [Name.First] \n    ,[Resume].ref.value(N'declare default element namespace \"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/Resume\"; \n        (/Resume/Name/Name.Middle)[1]', 'nvarchar(30)') AS [Name.Middle] \n    ,[Resume].ref.value(N'declare default element namespace \"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/Resume\"; \n        (/Resume/Name/Name.Last)[1]', 'nvarchar(30)') AS [Name.Last] \n    ,[Resume].ref.value(N'declare default element namespace \"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/Resume\"; \n        (/Resume/Name/Name.Suffix)[1]', 'nvarchar(30)') AS [Name.Suffix] \n    ,[Resume].ref.value(N'declare default element namespace \"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/Resume\"; \n        (/Resume/Skills)[1]', 'nvarchar(max)') AS [Skills] \n    ,[Resume].ref.value(N'declare default element namespace \"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/Resume\"; \n        (Address/Addr.Type)[1]', 'nvarchar(30)') AS [Addr.Type]\n    ,[Resume].ref.value(N'declare default element namespace \"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/Resume\"; \n        (Address/Addr.Location/Location/Loc.CountryRegion)[1]', 'nvarchar(100)') AS [Addr.Loc.CountryRegion]\n    ,[Resume].ref.value(N'declare default element namespace \"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/Resume\"; \n        (Address/Addr.Location/Location/Loc.State)[1]', 'nvarchar(100)') AS [Addr.Loc.State]\n    ,[Resume].ref.value(N'declare default element namespace \"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/Resume\"; \n        (Address/Addr.Location/Location/Loc.City)[1]', 'nvarchar(100)') AS [Addr.Loc.City]\n    ,[Resume].ref.value(N'declare default element namespace \"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/Resume\"; \n        (Address/Addr.PostalCode)[1]', 'nvarchar(20)') AS [Addr.PostalCode]\n    ,[Resume].ref.value(N'declare default element namespace \"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/Resume\"; \n        (/Resume/EMail)[1]', 'nvarchar(max)') AS [EMail] \n    ,[Resume].ref.value(N'declare default element namespace \"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/Resume\"; \n        (/Resume/WebSite)[1]', 'nvarchar(max)') AS [WebSite] \n    ,jc.[ModifiedDate] \nFROM [HumanResources].[JobCandidate] jc \nCROSS APPLY jc.[Resume].nodes(N'declare default element namespace \"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/Resume\"; \n    /Resume') AS Resume(ref);\n\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Job candidate names and resumes.' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'VIEW',@level1name=N'vJobCandidate'\nGO", "output_text": "--"}
{"input_text": "convert following DDL/DML code from MSSQL to Postgresql \nUSE [adventureworks]\nGO\n/****** Object:  View [HumanResources].[vJobCandidateEmployment]    Script Date: 2/3/24 12:02:54 AM ******/\nSET ANSI_NULLS ON\nGO\nSET QUOTED_IDENTIFIER ON\nGO\n\nCREATE VIEW [HumanResources].[vJobCandidateEmployment] \nAS \nSELECT \n    jc.[JobCandidateID] \n    ,CONVERT(datetime, REPLACE([Employment].ref.value(N'declare default element namespace \"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/Resume\"; \n        (Emp.StartDate)[1]', 'nvarchar(20)') ,'Z', ''), 101) AS [Emp.StartDate] \n    ,CONVERT(datetime, REPLACE([Employment].ref.value(N'declare default element namespace \"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/Resume\"; \n        (Emp.EndDate)[1]', 'nvarchar(20)') ,'Z', ''), 101) AS [Emp.EndDate] \n    ,[Employment].ref.value(N'declare default element namespace \"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/Resume\"; \n        (Emp.OrgName)[1]', 'nvarchar(100)') AS [Emp.OrgName]\n    ,[Employment].ref.value(N'declare default element namespace \"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/Resume\"; \n        (Emp.JobTitle)[1]', 'nvarchar(100)') AS [Emp.JobTitle]\n    ,[Employment].ref.value(N'declare default element namespace \"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/Resume\"; \n        (Emp.Responsibility)[1]', 'nvarchar(max)') AS [Emp.Responsibility]\n    ,[Employment].ref.value(N'declare default element namespace \"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/Resume\"; \n        (Emp.FunctionCategory)[1]', 'nvarchar(max)') AS [Emp.FunctionCategory]\n    ,[Employment].ref.value(N'declare default element namespace \"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/Resume\"; \n        (Emp.IndustryCategory)[1]', 'nvarchar(max)') AS [Emp.IndustryCategory]\n    ,[Employment].ref.value(N'declare default element namespace \"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/Resume\"; \n        (Emp.Location/Location/Loc.CountryRegion)[1]', 'nvarchar(max)') AS [Emp.Loc.CountryRegion]\n    ,[Employment].ref.value(N'declare default element namespace \"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/Resume\"; \n        (Emp.Location/Location/Loc.State)[1]', 'nvarchar(max)') AS [Emp.Loc.State]\n    ,[Employment].ref.value(N'declare default element namespace \"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/Resume\"; \n        (Emp.Location/Location/Loc.City)[1]', 'nvarchar(max)') AS [Emp.Loc.City]\nFROM [HumanResources].[JobCandidate] jc \nCROSS APPLY jc.[Resume].nodes(N'declare default element namespace \"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/Resume\"; \n    /Resume/Employment') AS Employment(ref);\n\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Displays the content from each employement history related element in the xml column Resume in the HumanResources.JobCandidate table. The content has been localized into French, Simplified Chinese and Thai. Some data may not display correctly unless supplemental language support is installed.' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'VIEW',@level1name=N'vJobCandidateEmployment'\nGO", "output_text": "--"}
{"input_text": "convert following DDL/DML code from MSSQL to Postgresql \nUSE [adventureworks]\nGO\n/****** Object:  Table [Person].[Address]    Script Date: 2/3/24 12:02:52 AM ******/\nSET ANSI_NULLS ON\nGO\nSET QUOTED_IDENTIFIER ON\nGO\nCREATE TABLE [Person].[Address](\n\t[AddressID] [int] IDENTITY(1,1) NOT FOR REPLICATION NOT NULL,\n\t[AddressLine1] [nvarchar](60) NOT NULL,\n\t[AddressLine2] [nvarchar](60) NULL,\n\t[City] [nvarchar](30) NOT NULL,\n\t[StateProvinceID] [int] NOT NULL,\n\t[PostalCode] [nvarchar](15) NOT NULL,\n\t[SpatialLocation] [geography] NULL,\n\t[rowguid] [uniqueidentifier] ROWGUIDCOL  NOT NULL,\n\t[ModifiedDate] [datetime] NOT NULL,\n CONSTRAINT [PK_Address_AddressID] PRIMARY KEY CLUSTERED \n(\n\t[AddressID] ASC\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]\n) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]\nGO\n/****** Object:  Index [AK_Address_rowguid]    Script Date: 2/3/24 12:03:02 AM ******/\nCREATE UNIQUE NONCLUSTERED INDEX [AK_Address_rowguid] ON [Person].[Address]\n(\n\t[rowguid] ASC\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]\nGO\nSET ANSI_PADDING ON\nGO\n/****** Object:  Index [IX_Address_AddressLine1_AddressLine2_City_StateProvinceID_PostalCode]    Script Date: 2/3/24 12:03:02 AM ******/\nCREATE UNIQUE NONCLUSTERED INDEX [IX_Address_AddressLine1_AddressLine2_City_StateProvinceID_PostalCode] ON [Person].[Address]\n(\n\t[AddressLine1] ASC,\n\t[AddressLine2] ASC,\n\t[City] ASC,\n\t[StateProvinceID] ASC,\n\t[PostalCode] ASC\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]\nGO\n/****** Object:  Index [IX_Address_StateProvinceID]    Script Date: 2/3/24 12:03:02 AM ******/\nCREATE NONCLUSTERED INDEX [IX_Address_StateProvinceID] ON [Person].[Address]\n(\n\t[StateProvinceID] ASC\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]\nGO\nALTER TABLE [Person].[Address] ADD  CONSTRAINT [DF_Address_rowguid]  DEFAULT (newid()) FOR [rowguid]\nGO\nALTER TABLE [Person].[Address] ADD  CONSTRAINT [DF_Address_ModifiedDate]  DEFAULT (getdate()) FOR [ModifiedDate]\nGO\nALTER TABLE [Person].[Address]  WITH CHECK ADD  CONSTRAINT [FK_Address_StateProvince_StateProvinceID] FOREIGN KEY([StateProvinceID])\nREFERENCES [Person].[StateProvince] ([StateProvinceID])\nGO\nALTER TABLE [Person].[Address] CHECK CONSTRAINT [FK_Address_StateProvince_StateProvinceID]\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key for Address records.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'Address', @level2type=N'COLUMN',@level2name=N'AddressID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'First street address line.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'Address', @level2type=N'COLUMN',@level2name=N'AddressLine1'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Second street address line.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'Address', @level2type=N'COLUMN',@level2name=N'AddressLine2'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Name of the city.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'Address', @level2type=N'COLUMN',@level2name=N'City'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Unique identification number for the state or province. Foreign key to StateProvince table.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'Address', @level2type=N'COLUMN',@level2name=N'StateProvinceID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Postal code for the street address.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'Address', @level2type=N'COLUMN',@level2name=N'PostalCode'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Latitude and longitude of this address.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'Address', @level2type=N'COLUMN',@level2name=N'SpatialLocation'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'Address', @level2type=N'COLUMN',@level2name=N'rowguid'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of NEWID()' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'Address', @level2type=N'CONSTRAINT',@level2name=N'DF_Address_rowguid'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Date and time the record was last updated.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'Address', @level2type=N'COLUMN',@level2name=N'ModifiedDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of GETDATE()' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'Address', @level2type=N'CONSTRAINT',@level2name=N'DF_Address_ModifiedDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key (clustered) constraint' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'Address', @level2type=N'CONSTRAINT',@level2name=N'PK_Address_AddressID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Unique nonclustered index. Used to support replication samples.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'Address', @level2type=N'INDEX',@level2name=N'AK_Address_rowguid'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Nonclustered index.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'Address', @level2type=N'INDEX',@level2name=N'IX_Address_AddressLine1_AddressLine2_City_StateProvinceID_PostalCode'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Nonclustered index.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'Address', @level2type=N'INDEX',@level2name=N'IX_Address_StateProvinceID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Street address information for customers, employees, and vendors.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'Address'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key constraint referencing StateProvince.StateProvinceID.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'Address', @level2type=N'CONSTRAINT',@level2name=N'FK_Address_StateProvince_StateProvinceID'\nGO\n", "output_text": "CREATE TABLE person.address (\n    addressid integer NOT NULL,\n    addressline1 character varying(60) NOT NULL,\n    addressline2 character varying(60),\n    city character varying(30) NOT NULL,\n    stateprovinceid integer NOT NULL,\n    postalcode character varying(15) NOT NULL,\n    spatiallocation bytea,\n    rowguid uuid DEFAULT public.uuid_generate_v1() NOT NULL,\n    modifieddate timestamp without time zone DEFAULT now() NOT NULL\n);\n\n\n--\n-- Name: TABLE address; Type: COMMENT; Schema: person; Owner: -\n--\n\nCOMMENT ON TABLE person.address IS 'Street address information for customers, employees, and vendors.';\n\n\n--\n-- Name: COLUMN address.addressid; Type: COMMENT; Schema: person; Owner: -\n--\n\nCOMMENT ON COLUMN person.address.addressid IS 'Primary key for Address records.';\n\n\n--\n-- Name: COLUMN address.addressline1; Type: COMMENT; Schema: person; Owner: -\n--\n\nCOMMENT ON COLUMN person.address.addressline1 IS 'First street address line.';\n\n\n--\n-- Name: COLUMN address.addressline2; Type: COMMENT; Schema: person; Owner: -\n--\n\nCOMMENT ON COLUMN person.address.addressline2 IS 'Second street address line.';\n\n\n--\n-- Name: COLUMN address.city; Type: COMMENT; Schema: person; Owner: -\n--\n\nCOMMENT ON COLUMN person.address.city IS 'Name of the city.';\n\n\n--\n-- Name: COLUMN address.stateprovinceid; Type: COMMENT; Schema: person; Owner: -\n--\n\nCOMMENT ON COLUMN person.address.stateprovinceid IS 'Unique identification number for the state or province. Foreign key to StateProvince table.';\n\n\n--\n-- Name: COLUMN address.postalcode; Type: COMMENT; Schema: person; Owner: -\n--\n\nCOMMENT ON COLUMN person.address.postalcode IS 'Postal code for the street address.';\n\n\n--\n-- Name: COLUMN address.spatiallocation; Type: COMMENT; Schema: person; Owner: -\n--\n\nCOMMENT ON COLUMN person.address.spatiallocation IS 'Latitude and longitude of this address.';"}
{"input_text": "convert following DDL/DML code from MSSQL to Postgresql \nUSE [adventureworks]\nGO\n/****** Object:  Table [Person].[AddressType]    Script Date: 2/3/24 12:02:53 AM ******/\nSET ANSI_NULLS ON\nGO\nSET QUOTED_IDENTIFIER ON\nGO\nCREATE TABLE [Person].[AddressType](\n\t[AddressTypeID] [int] IDENTITY(1,1) NOT NULL,\n\t[Name] [dbo].[Name] NOT NULL,\n\t[rowguid] [uniqueidentifier] ROWGUIDCOL  NOT NULL,\n\t[ModifiedDate] [datetime] NOT NULL,\n CONSTRAINT [PK_AddressType_AddressTypeID] PRIMARY KEY CLUSTERED \n(\n\t[AddressTypeID] ASC\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]\n) ON [PRIMARY]\nGO\nSET ANSI_PADDING ON\nGO\n/****** Object:  Index [AK_AddressType_Name]    Script Date: 2/3/24 12:03:02 AM ******/\nCREATE UNIQUE NONCLUSTERED INDEX [AK_AddressType_Name] ON [Person].[AddressType]\n(\n\t[Name] ASC\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]\nGO\n/****** Object:  Index [AK_AddressType_rowguid]    Script Date: 2/3/24 12:03:02 AM ******/\nCREATE UNIQUE NONCLUSTERED INDEX [AK_AddressType_rowguid] ON [Person].[AddressType]\n(\n\t[rowguid] ASC\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]\nGO\nALTER TABLE [Person].[AddressType] ADD  CONSTRAINT [DF_AddressType_rowguid]  DEFAULT (newid()) FOR [rowguid]\nGO\nALTER TABLE [Person].[AddressType] ADD  CONSTRAINT [DF_AddressType_ModifiedDate]  DEFAULT (getdate()) FOR [ModifiedDate]\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key for AddressType records.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'AddressType', @level2type=N'COLUMN',@level2name=N'AddressTypeID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Address type description. For example, Billing, Home, or Shipping.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'AddressType', @level2type=N'COLUMN',@level2name=N'Name'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'AddressType', @level2type=N'COLUMN',@level2name=N'rowguid'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of NEWID()' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'AddressType', @level2type=N'CONSTRAINT',@level2name=N'DF_AddressType_rowguid'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Date and time the record was last updated.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'AddressType', @level2type=N'COLUMN',@level2name=N'ModifiedDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of GETDATE()' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'AddressType', @level2type=N'CONSTRAINT',@level2name=N'DF_AddressType_ModifiedDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key (clustered) constraint' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'AddressType', @level2type=N'CONSTRAINT',@level2name=N'PK_AddressType_AddressTypeID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Unique nonclustered index.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'AddressType', @level2type=N'INDEX',@level2name=N'AK_AddressType_Name'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Unique nonclustered index. Used to support replication samples.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'AddressType', @level2type=N'INDEX',@level2name=N'AK_AddressType_rowguid'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Types of addresses stored in the Address table. ' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'AddressType'\nGO", "output_text": "\nCREATE TABLE person.addresstype (\n    addresstypeid integer NOT NULL,\n    name public.\"Name\" NOT NULL,\n    rowguid uuid DEFAULT public.uuid_generate_v1() NOT NULL,\n    modifieddate timestamp without time zone DEFAULT now() NOT NULL\n);\n\n\n--\n-- Name: TABLE addresstype; Type: COMMENT; Schema: person; Owner: -\n--\n\nCOMMENT ON TABLE person.addresstype IS 'Types of addresses stored in the Address table.';\n\n\n--\n-- Name: COLUMN addresstype.addresstypeid; Type: COMMENT; Schema: person; Owner: -\n--\n\nCOMMENT ON COLUMN person.addresstype.addresstypeid IS 'Primary key for AddressType records.';\n\n\n--\n-- Name: COLUMN addresstype.name; Type: COMMENT; Schema: person; Owner: -\n--\n\nCOMMENT ON COLUMN person.addresstype.name IS 'Address type description. For example, Billing, Home, or Shipping.';"}
{"input_text": "convert following DDL/DML code from MSSQL to Postgresql \nUSE [adventureworks]\nGO\n/****** Object:  Table [Person].[BusinessEntity]    Script Date: 2/3/24 12:02:56 AM ******/\nSET ANSI_NULLS ON\nGO\nSET QUOTED_IDENTIFIER ON\nGO\nCREATE TABLE [Person].[BusinessEntity](\n\t[BusinessEntityID] [int] IDENTITY(1,1) NOT FOR REPLICATION NOT NULL,\n\t[rowguid] [uniqueidentifier] ROWGUIDCOL  NOT NULL,\n\t[ModifiedDate] [datetime] NOT NULL,\n CONSTRAINT [PK_BusinessEntity_BusinessEntityID] PRIMARY KEY CLUSTERED \n(\n\t[BusinessEntityID] ASC\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]\n) ON [PRIMARY]\nGO\n/****** Object:  Index [AK_BusinessEntity_rowguid]    Script Date: 2/3/24 12:03:02 AM ******/\nCREATE UNIQUE NONCLUSTERED INDEX [AK_BusinessEntity_rowguid] ON [Person].[BusinessEntity]\n(\n\t[rowguid] ASC\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]\nGO\nALTER TABLE [Person].[BusinessEntity] ADD  CONSTRAINT [DF_BusinessEntity_rowguid]  DEFAULT (newid()) FOR [rowguid]\nGO\nALTER TABLE [Person].[BusinessEntity] ADD  CONSTRAINT [DF_BusinessEntity_ModifiedDate]  DEFAULT (getdate()) FOR [ModifiedDate]\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key for all customers, vendors, and employees.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'BusinessEntity', @level2type=N'COLUMN',@level2name=N'BusinessEntityID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'BusinessEntity', @level2type=N'COLUMN',@level2name=N'rowguid'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of NEWID()' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'BusinessEntity', @level2type=N'CONSTRAINT',@level2name=N'DF_BusinessEntity_rowguid'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Date and time the record was last updated.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'BusinessEntity', @level2type=N'COLUMN',@level2name=N'ModifiedDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of GETDATE()' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'BusinessEntity', @level2type=N'CONSTRAINT',@level2name=N'DF_BusinessEntity_ModifiedDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key (clustered) constraint' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'BusinessEntity', @level2type=N'CONSTRAINT',@level2name=N'PK_BusinessEntity_BusinessEntityID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Unique nonclustered index. Used to support replication samples.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'BusinessEntity', @level2type=N'INDEX',@level2name=N'AK_BusinessEntity_rowguid'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Source of the ID that connects vendors, customers, and employees with address and contact information.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'BusinessEntity'\nGO", "output_text": "\nCREATE TABLE person.businessentity (\n    businessentityid integer NOT NULL,\n    rowguid uuid DEFAULT public.uuid_generate_v1() NOT NULL,\n    modifieddate timestamp without time zone DEFAULT now() NOT NULL\n);\n\n\n--\n-- Name: TABLE businessentity; Type: COMMENT; Schema: person; Owner: -\n--\n\nCOMMENT ON TABLE person.businessentity IS 'Source of the ID that connects vendors, customers, and employees with address and contact information.';\n\n\n--\n-- Name: COLUMN businessentity.businessentityid; Type: COMMENT; Schema: person; Owner: -\n--\n\nCOMMENT ON COLUMN person.businessentity.businessentityid IS 'Primary key for all customers, vendors, and employees.';"}
{"input_text": "convert following DDL/DML code from MSSQL to Postgresql \nUSE [adventureworks]\nGO\n/****** Object:  Table [Person].[BusinessEntityAddress]    Script Date: 2/3/24 12:02:52 AM ******/\nSET ANSI_NULLS ON\nGO\nSET QUOTED_IDENTIFIER ON\nGO\nCREATE TABLE [Person].[BusinessEntityAddress](\n\t[BusinessEntityID] [int] NOT NULL,\n\t[AddressID] [int] NOT NULL,\n\t[AddressTypeID] [int] NOT NULL,\n\t[rowguid] [uniqueidentifier] ROWGUIDCOL  NOT NULL,\n\t[ModifiedDate] [datetime] NOT NULL,\n CONSTRAINT [PK_BusinessEntityAddress_BusinessEntityID_AddressID_AddressTypeID] PRIMARY KEY CLUSTERED \n(\n\t[BusinessEntityID] ASC,\n\t[AddressID] ASC,\n\t[AddressTypeID] ASC\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]\n) ON [PRIMARY]\nGO\n/****** Object:  Index [AK_BusinessEntityAddress_rowguid]    Script Date: 2/3/24 12:03:02 AM ******/\nCREATE UNIQUE NONCLUSTERED INDEX [AK_BusinessEntityAddress_rowguid] ON [Person].[BusinessEntityAddress]\n(\n\t[rowguid] ASC\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]\nGO\n/****** Object:  Index [IX_BusinessEntityAddress_AddressID]    Script Date: 2/3/24 12:03:02 AM ******/\nCREATE NONCLUSTERED INDEX [IX_BusinessEntityAddress_AddressID] ON [Person].[BusinessEntityAddress]\n(\n\t[AddressID] ASC\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]\nGO\n/****** Object:  Index [IX_BusinessEntityAddress_AddressTypeID]    Script Date: 2/3/24 12:03:02 AM ******/\nCREATE NONCLUSTERED INDEX [IX_BusinessEntityAddress_AddressTypeID] ON [Person].[BusinessEntityAddress]\n(\n\t[AddressTypeID] ASC\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]\nGO\nALTER TABLE [Person].[BusinessEntityAddress] ADD  CONSTRAINT [DF_BusinessEntityAddress_rowguid]  DEFAULT (newid()) FOR [rowguid]\nGO\nALTER TABLE [Person].[BusinessEntityAddress] ADD  CONSTRAINT [DF_BusinessEntityAddress_ModifiedDate]  DEFAULT (getdate()) FOR [ModifiedDate]\nGO\nALTER TABLE [Person].[BusinessEntityAddress]  WITH CHECK ADD  CONSTRAINT [FK_BusinessEntityAddress_Address_AddressID] FOREIGN KEY([AddressID])\nREFERENCES [Person].[Address] ([AddressID])\nGO\nALTER TABLE [Person].[BusinessEntityAddress] CHECK CONSTRAINT [FK_BusinessEntityAddress_Address_AddressID]\nGO\nALTER TABLE [Person].[BusinessEntityAddress]  WITH CHECK ADD  CONSTRAINT [FK_BusinessEntityAddress_AddressType_AddressTypeID] FOREIGN KEY([AddressTypeID])\nREFERENCES [Person].[AddressType] ([AddressTypeID])\nGO\nALTER TABLE [Person].[BusinessEntityAddress] CHECK CONSTRAINT [FK_BusinessEntityAddress_AddressType_AddressTypeID]\nGO\nALTER TABLE [Person].[BusinessEntityAddress]  WITH CHECK ADD  CONSTRAINT [FK_BusinessEntityAddress_BusinessEntity_BusinessEntityID] FOREIGN KEY([BusinessEntityID])\nREFERENCES [Person].[BusinessEntity] ([BusinessEntityID])\nGO\nALTER TABLE [Person].[BusinessEntityAddress] CHECK CONSTRAINT [FK_BusinessEntityAddress_BusinessEntity_BusinessEntityID]\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key. Foreign key to BusinessEntity.BusinessEntityID.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'BusinessEntityAddress', @level2type=N'COLUMN',@level2name=N'BusinessEntityID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key. Foreign key to Address.AddressID.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'BusinessEntityAddress', @level2type=N'COLUMN',@level2name=N'AddressID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key. Foreign key to AddressType.AddressTypeID.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'BusinessEntityAddress', @level2type=N'COLUMN',@level2name=N'AddressTypeID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'BusinessEntityAddress', @level2type=N'COLUMN',@level2name=N'rowguid'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of NEWID()' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'BusinessEntityAddress', @level2type=N'CONSTRAINT',@level2name=N'DF_BusinessEntityAddress_rowguid'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Date and time the record was last updated.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'BusinessEntityAddress', @level2type=N'COLUMN',@level2name=N'ModifiedDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of GETDATE()' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'BusinessEntityAddress', @level2type=N'CONSTRAINT',@level2name=N'DF_BusinessEntityAddress_ModifiedDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key (clustered) constraint' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'BusinessEntityAddress', @level2type=N'CONSTRAINT',@level2name=N'PK_BusinessEntityAddress_BusinessEntityID_AddressID_AddressTypeID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Unique nonclustered index. Used to support replication samples.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'BusinessEntityAddress', @level2type=N'INDEX',@level2name=N'AK_BusinessEntityAddress_rowguid'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Nonclustered index.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'BusinessEntityAddress', @level2type=N'INDEX',@level2name=N'IX_BusinessEntityAddress_AddressID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Nonclustered index.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'BusinessEntityAddress', @level2type=N'INDEX',@level2name=N'IX_BusinessEntityAddress_AddressTypeID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Cross-reference table mapping customers, vendors, and employees to their addresses.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'BusinessEntityAddress'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key constraint referencing Address.AddressID.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'BusinessEntityAddress', @level2type=N'CONSTRAINT',@level2name=N'FK_BusinessEntityAddress_Address_AddressID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key constraint referencing AddressType.AddressTypeID.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'BusinessEntityAddress', @level2type=N'CONSTRAINT',@level2name=N'FK_BusinessEntityAddress_AddressType_AddressTypeID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key constraint referencing BusinessEntity.BusinessEntityID.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'BusinessEntityAddress', @level2type=N'CONSTRAINT',@level2name=N'FK_BusinessEntityAddress_BusinessEntity_BusinessEntityID'\nGO", "output_text": "CREATE TABLE person.businessentityaddress (\n    businessentityid integer NOT NULL,\n    addressid integer NOT NULL,\n    addresstypeid integer NOT NULL,\n    rowguid uuid DEFAULT public.uuid_generate_v1() NOT NULL,\n    modifieddate timestamp without time zone DEFAULT now() NOT NULL\n);\n\n\n--\n-- Name: TABLE businessentityaddress; Type: COMMENT; Schema: person; Owner: -\n--\n\nCOMMENT ON TABLE person.businessentityaddress IS 'Cross-reference table mapping customers, vendors, and employees to their addresses.';\n\n\n--\n-- Name: COLUMN businessentityaddress.businessentityid; Type: COMMENT; Schema: person; Owner: -\n--\n\nCOMMENT ON COLUMN person.businessentityaddress.businessentityid IS 'Primary key. Foreign key to BusinessEntity.BusinessEntityID.';\n\n\n--\n-- Name: COLUMN businessentityaddress.addressid; Type: COMMENT; Schema: person; Owner: -\n--\n\nCOMMENT ON COLUMN person.businessentityaddress.addressid IS 'Primary key. Foreign key to Address.AddressID.';\n\n\n--\n-- Name: COLUMN businessentityaddress.addresstypeid; Type: COMMENT; Schema: person; Owner: -\n--\n\nCOMMENT ON COLUMN person.businessentityaddress.addresstypeid IS 'Primary key. Foreign key to AddressType.AddressTypeID.';"}
{"input_text": "convert following DDL/DML code from MSSQL to Postgresql \nUSE [adventureworks]\nGO\n/****** Object:  Table [Person].[BusinessEntityContact]    Script Date: 2/3/24 12:02:55 AM ******/\nSET ANSI_NULLS ON\nGO\nSET QUOTED_IDENTIFIER ON\nGO\nCREATE TABLE [Person].[BusinessEntityContact](\n\t[BusinessEntityID] [int] NOT NULL,\n\t[PersonID] [int] NOT NULL,\n\t[ContactTypeID] [int] NOT NULL,\n\t[rowguid] [uniqueidentifier] ROWGUIDCOL  NOT NULL,\n\t[ModifiedDate] [datetime] NOT NULL,\n CONSTRAINT [PK_BusinessEntityContact_BusinessEntityID_PersonID_ContactTypeID] PRIMARY KEY CLUSTERED \n(\n\t[BusinessEntityID] ASC,\n\t[PersonID] ASC,\n\t[ContactTypeID] ASC\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]\n) ON [PRIMARY]\nGO\n/****** Object:  Index [AK_BusinessEntityContact_rowguid]    Script Date: 2/3/24 12:03:02 AM ******/\nCREATE UNIQUE NONCLUSTERED INDEX [AK_BusinessEntityContact_rowguid] ON [Person].[BusinessEntityContact]\n(\n\t[rowguid] ASC\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]\nGO\n/****** Object:  Index [IX_BusinessEntityContact_ContactTypeID]    Script Date: 2/3/24 12:03:02 AM ******/\nCREATE NONCLUSTERED INDEX [IX_BusinessEntityContact_ContactTypeID] ON [Person].[BusinessEntityContact]\n(\n\t[ContactTypeID] ASC\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]\nGO\n/****** Object:  Index [IX_BusinessEntityContact_PersonID]    Script Date: 2/3/24 12:03:02 AM ******/\nCREATE NONCLUSTERED INDEX [IX_BusinessEntityContact_PersonID] ON [Person].[BusinessEntityContact]\n(\n\t[PersonID] ASC\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]\nGO\nALTER TABLE [Person].[BusinessEntityContact] ADD  CONSTRAINT [DF_BusinessEntityContact_rowguid]  DEFAULT (newid()) FOR [rowguid]\nGO\nALTER TABLE [Person].[BusinessEntityContact] ADD  CONSTRAINT [DF_BusinessEntityContact_ModifiedDate]  DEFAULT (getdate()) FOR [ModifiedDate]\nGO\nALTER TABLE [Person].[BusinessEntityContact]  WITH CHECK ADD  CONSTRAINT [FK_BusinessEntityContact_BusinessEntity_BusinessEntityID] FOREIGN KEY([BusinessEntityID])\nREFERENCES [Person].[BusinessEntity] ([BusinessEntityID])\nGO\nALTER TABLE [Person].[BusinessEntityContact] CHECK CONSTRAINT [FK_BusinessEntityContact_BusinessEntity_BusinessEntityID]\nGO\nALTER TABLE [Person].[BusinessEntityContact]  WITH CHECK ADD  CONSTRAINT [FK_BusinessEntityContact_ContactType_ContactTypeID] FOREIGN KEY([ContactTypeID])\nREFERENCES [Person].[ContactType] ([ContactTypeID])\nGO\nALTER TABLE [Person].[BusinessEntityContact] CHECK CONSTRAINT [FK_BusinessEntityContact_ContactType_ContactTypeID]\nGO\nALTER TABLE [Person].[BusinessEntityContact]  WITH CHECK ADD  CONSTRAINT [FK_BusinessEntityContact_Person_PersonID] FOREIGN KEY([PersonID])\nREFERENCES [Person].[Person] ([BusinessEntityID])\nGO\nALTER TABLE [Person].[BusinessEntityContact] CHECK CONSTRAINT [FK_BusinessEntityContact_Person_PersonID]\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key. Foreign key to BusinessEntity.BusinessEntityID.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'BusinessEntityContact', @level2type=N'COLUMN',@level2name=N'BusinessEntityID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key. Foreign key to Person.BusinessEntityID.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'BusinessEntityContact', @level2type=N'COLUMN',@level2name=N'PersonID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key.  Foreign key to ContactType.ContactTypeID.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'BusinessEntityContact', @level2type=N'COLUMN',@level2name=N'ContactTypeID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'BusinessEntityContact', @level2type=N'COLUMN',@level2name=N'rowguid'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of NEWID()' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'BusinessEntityContact', @level2type=N'CONSTRAINT',@level2name=N'DF_BusinessEntityContact_rowguid'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Date and time the record was last updated.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'BusinessEntityContact', @level2type=N'COLUMN',@level2name=N'ModifiedDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of GETDATE()' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'BusinessEntityContact', @level2type=N'CONSTRAINT',@level2name=N'DF_BusinessEntityContact_ModifiedDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key (clustered) constraint' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'BusinessEntityContact', @level2type=N'CONSTRAINT',@level2name=N'PK_BusinessEntityContact_BusinessEntityID_PersonID_ContactTypeID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Unique nonclustered index. Used to support replication samples.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'BusinessEntityContact', @level2type=N'INDEX',@level2name=N'AK_BusinessEntityContact_rowguid'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Nonclustered index.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'BusinessEntityContact', @level2type=N'INDEX',@level2name=N'IX_BusinessEntityContact_ContactTypeID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Nonclustered index.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'BusinessEntityContact', @level2type=N'INDEX',@level2name=N'IX_BusinessEntityContact_PersonID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Cross-reference table mapping stores, vendors, and employees to people' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'BusinessEntityContact'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key constraint referencing BusinessEntity.BusinessEntityID.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'BusinessEntityContact', @level2type=N'CONSTRAINT',@level2name=N'FK_BusinessEntityContact_BusinessEntity_BusinessEntityID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key constraint referencing ContactType.ContactTypeID.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'BusinessEntityContact', @level2type=N'CONSTRAINT',@level2name=N'FK_BusinessEntityContact_ContactType_ContactTypeID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key constraint referencing Person.BusinessEntityID.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'BusinessEntityContact', @level2type=N'CONSTRAINT',@level2name=N'FK_BusinessEntityContact_Person_PersonID'\nGO\n", "output_text": "\nCREATE TABLE person.businessentitycontact (\n    businessentityid integer NOT NULL,\n    personid integer NOT NULL,\n    contacttypeid integer NOT NULL,\n    rowguid uuid DEFAULT public.uuid_generate_v1() NOT NULL,\n    modifieddate timestamp without time zone DEFAULT now() NOT NULL\n);\n\n\n--\n-- Name: TABLE businessentitycontact; Type: COMMENT; Schema: person; Owner: -\n--\n\nCOMMENT ON TABLE person.businessentitycontact IS 'Cross-reference table mapping stores, vendors, and employees to people';\n\n\n--\n-- Name: COLUMN businessentitycontact.businessentityid; Type: COMMENT; Schema: person; Owner: -\n--\n\nCOMMENT ON COLUMN person.businessentitycontact.businessentityid IS 'Primary key. Foreign key to BusinessEntity.BusinessEntityID.';\n\n\n--\n-- Name: COLUMN businessentitycontact.personid; Type: COMMENT; Schema: person; Owner: -\n--\n\nCOMMENT ON COLUMN person.businessentitycontact.personid IS 'Primary key. Foreign key to Person.BusinessEntityID.';\n\n\n--\n-- Name: COLUMN businessentitycontact.contacttypeid; Type: COMMENT; Schema: person; Owner: -\n--\n\nCOMMENT ON COLUMN person.businessentitycontact.contacttypeid IS 'Primary key.  Foreign key to ContactType.ContactTypeID.';\n"}
{"input_text": "convert following DDL/DML code from MSSQL to Postgresql \nUSE [adventureworks]\nGO\n/****** Object:  Table [Person].[ContactType]    Script Date: 2/3/24 12:02:55 AM ******/\nSET ANSI_NULLS ON\nGO\nSET QUOTED_IDENTIFIER ON\nGO\nCREATE TABLE [Person].[ContactType](\n\t[ContactTypeID] [int] IDENTITY(1,1) NOT NULL,\n\t[Name] [dbo].[Name] NOT NULL,\n\t[ModifiedDate] [datetime] NOT NULL,\n CONSTRAINT [PK_ContactType_ContactTypeID] PRIMARY KEY CLUSTERED \n(\n\t[ContactTypeID] ASC\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]\n) ON [PRIMARY]\nGO\nSET ANSI_PADDING ON\nGO\n/****** Object:  Index [AK_ContactType_Name]    Script Date: 2/3/24 12:03:02 AM ******/\nCREATE UNIQUE NONCLUSTERED INDEX [AK_ContactType_Name] ON [Person].[ContactType]\n(\n\t[Name] ASC\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]\nGO\nALTER TABLE [Person].[ContactType] ADD  CONSTRAINT [DF_ContactType_ModifiedDate]  DEFAULT (getdate()) FOR [ModifiedDate]\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key for ContactType records.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'ContactType', @level2type=N'COLUMN',@level2name=N'ContactTypeID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Contact type description.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'ContactType', @level2type=N'COLUMN',@level2name=N'Name'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Date and time the record was last updated.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'ContactType', @level2type=N'COLUMN',@level2name=N'ModifiedDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of GETDATE()' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'ContactType', @level2type=N'CONSTRAINT',@level2name=N'DF_ContactType_ModifiedDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key (clustered) constraint' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'ContactType', @level2type=N'CONSTRAINT',@level2name=N'PK_ContactType_ContactTypeID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Unique nonclustered index.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'ContactType', @level2type=N'INDEX',@level2name=N'AK_ContactType_Name'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Lookup table containing the types of business entity contacts.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'ContactType'\nGO", "output_text": "\nCREATE TABLE person.contacttype (\n    contacttypeid integer NOT NULL,\n    name public.\"Name\" NOT NULL,\n    modifieddate timestamp without time zone DEFAULT now() NOT NULL\n);\n\n\n--\n-- Name: TABLE contacttype; Type: COMMENT; Schema: person; Owner: -\n--\n\nCOMMENT ON TABLE person.contacttype IS 'Lookup table containing the types of business entity contacts.';\n\n\n--\n-- Name: COLUMN contacttype.contacttypeid; Type: COMMENT; Schema: person; Owner: -\n--\n\nCOMMENT ON COLUMN person.contacttype.contacttypeid IS 'Primary key for ContactType records.';\n\n\n--\n-- Name: COLUMN contacttype.name; Type: COMMENT; Schema: person; Owner: -\n--\n\nCOMMENT ON COLUMN person.contacttype.name IS 'Contact type description.';"}
{"input_text": "convert following DDL/DML code from MSSQL to Postgresql \nUSE [adventureworks]\nGO\n/****** Object:  Table [Person].[CountryRegion]    Script Date: 2/3/24 12:02:53 AM ******/\nSET ANSI_NULLS ON\nGO\nSET QUOTED_IDENTIFIER ON\nGO\nCREATE TABLE [Person].[CountryRegion](\n\t[CountryRegionCode] [nvarchar](3) NOT NULL,\n\t[Name] [dbo].[Name] NOT NULL,\n\t[ModifiedDate] [datetime] NOT NULL,\n CONSTRAINT [PK_CountryRegion_CountryRegionCode] PRIMARY KEY CLUSTERED \n(\n\t[CountryRegionCode] ASC\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]\n) ON [PRIMARY]\nGO\nSET ANSI_PADDING ON\nGO\n/****** Object:  Index [AK_CountryRegion_Name]    Script Date: 2/3/24 12:03:02 AM ******/\nCREATE UNIQUE NONCLUSTERED INDEX [AK_CountryRegion_Name] ON [Person].[CountryRegion]\n(\n\t[Name] ASC\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]\nGO\nALTER TABLE [Person].[CountryRegion] ADD  CONSTRAINT [DF_CountryRegion_ModifiedDate]  DEFAULT (getdate()) FOR [ModifiedDate]\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'ISO standard code for countries and regions.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'CountryRegion', @level2type=N'COLUMN',@level2name=N'CountryRegionCode'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Country or region name.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'CountryRegion', @level2type=N'COLUMN',@level2name=N'Name'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Date and time the record was last updated.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'CountryRegion', @level2type=N'COLUMN',@level2name=N'ModifiedDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of GETDATE()' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'CountryRegion', @level2type=N'CONSTRAINT',@level2name=N'DF_CountryRegion_ModifiedDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key (clustered) constraint' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'CountryRegion', @level2type=N'CONSTRAINT',@level2name=N'PK_CountryRegion_CountryRegionCode'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Unique nonclustered index.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'CountryRegion', @level2type=N'INDEX',@level2name=N'AK_CountryRegion_Name'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Lookup table containing the ISO standard codes for countries and regions.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'CountryRegion'\nGO\n", "output_text": "--CREATE TABLE person.countryregion (\n    countryregioncode character varying(3) NOT NULL,\n    name public.\"Name\" NOT NULL,\n    modifieddate timestamp without time zone DEFAULT now() NOT NULL\n);\n\n\n--\n-- Name: TABLE countryregion; Type: COMMENT; Schema: person; Owner: -\n--\n\nCOMMENT ON TABLE person.countryregion IS 'Lookup table containing the ISO standard codes for countries and regions.';\n\n\n--\n-- Name: COLUMN countryregion.countryregioncode; Type: COMMENT; Schema: person; Owner: -\n--\n\nCOMMENT ON COLUMN person.countryregion.countryregioncode IS 'ISO standard code for countries and regions.';\n\n\n--\n-- Name: COLUMN countryregion.name; Type: COMMENT; Schema: person; Owner: -\n--\n\nCOMMENT ON COLUMN person.countryregion.name IS 'Country or region name.';\n"}
{"input_text": "convert following DDL/DML code from MSSQL to Postgresql \nUSE [adventureworks]\nGO\n/****** Object:  Table [Person].[EmailAddress]    Script Date: 2/3/24 12:02:53 AM ******/\nSET ANSI_NULLS ON\nGO\nSET QUOTED_IDENTIFIER ON\nGO\nCREATE TABLE [Person].[EmailAddress](\n\t[BusinessEntityID] [int] NOT NULL,\n\t[EmailAddressID] [int] IDENTITY(1,1) NOT NULL,\n\t[EmailAddress] [nvarchar](50) NULL,\n\t[rowguid] [uniqueidentifier] ROWGUIDCOL  NOT NULL,\n\t[ModifiedDate] [datetime] NOT NULL,\n CONSTRAINT [PK_EmailAddress_BusinessEntityID_EmailAddressID] PRIMARY KEY CLUSTERED \n(\n\t[BusinessEntityID] ASC,\n\t[EmailAddressID] ASC\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]\n) ON [PRIMARY]\nGO\nSET ANSI_PADDING ON\nGO\n/****** Object:  Index [IX_EmailAddress_EmailAddress]    Script Date: 2/3/24 12:03:02 AM ******/\nCREATE NONCLUSTERED INDEX [IX_EmailAddress_EmailAddress] ON [Person].[EmailAddress]\n(\n\t[EmailAddress] ASC\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]\nGO\nALTER TABLE [Person].[EmailAddress] ADD  CONSTRAINT [DF_EmailAddress_rowguid]  DEFAULT (newid()) FOR [rowguid]\nGO\nALTER TABLE [Person].[EmailAddress] ADD  CONSTRAINT [DF_EmailAddress_ModifiedDate]  DEFAULT (getdate()) FOR [ModifiedDate]\nGO\nALTER TABLE [Person].[EmailAddress]  WITH CHECK ADD  CONSTRAINT [FK_EmailAddress_Person_BusinessEntityID] FOREIGN KEY([BusinessEntityID])\nREFERENCES [Person].[Person] ([BusinessEntityID])\nGO\nALTER TABLE [Person].[EmailAddress] CHECK CONSTRAINT [FK_EmailAddress_Person_BusinessEntityID]\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key. Person associated with this email address.  Foreign key to Person.BusinessEntityID' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'EmailAddress', @level2type=N'COLUMN',@level2name=N'BusinessEntityID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key. ID of this email address.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'EmailAddress', @level2type=N'COLUMN',@level2name=N'EmailAddressID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'E-mail address for the person.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'EmailAddress', @level2type=N'COLUMN',@level2name=N'EmailAddress'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'EmailAddress', @level2type=N'COLUMN',@level2name=N'rowguid'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of NEWID()' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'EmailAddress', @level2type=N'CONSTRAINT',@level2name=N'DF_EmailAddress_rowguid'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Date and time the record was last updated.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'EmailAddress', @level2type=N'COLUMN',@level2name=N'ModifiedDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of GETDATE()' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'EmailAddress', @level2type=N'CONSTRAINT',@level2name=N'DF_EmailAddress_ModifiedDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key (clustered) constraint' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'EmailAddress', @level2type=N'CONSTRAINT',@level2name=N'PK_EmailAddress_BusinessEntityID_EmailAddressID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Nonclustered index.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'EmailAddress', @level2type=N'INDEX',@level2name=N'IX_EmailAddress_EmailAddress'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Where to send a person email.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'EmailAddress'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key constraint referencing Person.BusinessEntityID.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'EmailAddress', @level2type=N'CONSTRAINT',@level2name=N'FK_EmailAddress_Person_BusinessEntityID'\nGO", "output_text": "CREATE TABLE person.emailaddress (\n    businessentityid integer NOT NULL,\n    emailaddressid integer NOT NULL,\n    emailaddress character varying(50),\n    rowguid uuid DEFAULT public.uuid_generate_v1() NOT NULL,\n    modifieddate timestamp without time zone DEFAULT now() NOT NULL\n);\n\n\n--\n-- Name: TABLE emailaddress; Type: COMMENT; Schema: person; Owner: -\n--\n\nCOMMENT ON TABLE person.emailaddress IS 'Where to send a person email.';\n\n\n--\n-- Name: COLUMN emailaddress.businessentityid; Type: COMMENT; Schema: person; Owner: -\n--\n\nCOMMENT ON COLUMN person.emailaddress.businessentityid IS 'Primary key. Person associated with this email address.  Foreign key to Person.BusinessEntityID';\n\n\n--\n-- Name: COLUMN emailaddress.emailaddressid; Type: COMMENT; Schema: person; Owner: -\n--\n\nCOMMENT ON COLUMN person.emailaddress.emailaddressid IS 'Primary key. ID of this email address.';\n\n\n--\n-- Name: COLUMN emailaddress.emailaddress; Type: COMMENT; Schema: person; Owner: -\n--\n\nCOMMENT ON COLUMN person.emailaddress.emailaddress IS 'E-mail address for the person.';"}
{"input_text": "convert following DDL/DML code from MSSQL to Postgresql \nUSE [adventureworks]\nGO\n/****** Object:  Table [Person].[Password]    Script Date: 2/3/24 12:02:56 AM ******/\nSET ANSI_NULLS ON\nGO\nSET QUOTED_IDENTIFIER ON\nGO\nCREATE TABLE [Person].[Password](\n\t[BusinessEntityID] [int] NOT NULL,\n\t[PasswordHash] [varchar](128) NOT NULL,\n\t[PasswordSalt] [varchar](10) NOT NULL,\n\t[rowguid] [uniqueidentifier] ROWGUIDCOL  NOT NULL,\n\t[ModifiedDate] [datetime] NOT NULL,\n CONSTRAINT [PK_Password_BusinessEntityID] PRIMARY KEY CLUSTERED \n(\n\t[BusinessEntityID] ASC\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]\n) ON [PRIMARY]\nGO\nALTER TABLE [Person].[Password] ADD  CONSTRAINT [DF_Password_rowguid]  DEFAULT (newid()) FOR [rowguid]\nGO\nALTER TABLE [Person].[Password] ADD  CONSTRAINT [DF_Password_ModifiedDate]  DEFAULT (getdate()) FOR [ModifiedDate]\nGO\nALTER TABLE [Person].[Password]  WITH CHECK ADD  CONSTRAINT [FK_Password_Person_BusinessEntityID] FOREIGN KEY([BusinessEntityID])\nREFERENCES [Person].[Person] ([BusinessEntityID])\nGO\nALTER TABLE [Person].[Password] CHECK CONSTRAINT [FK_Password_Person_BusinessEntityID]\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Password for the e-mail account.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'Password', @level2type=N'COLUMN',@level2name=N'PasswordHash'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Random value concatenated with the password string before the password is hashed.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'Password', @level2type=N'COLUMN',@level2name=N'PasswordSalt'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'Password', @level2type=N'COLUMN',@level2name=N'rowguid'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of NEWID()' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'Password', @level2type=N'CONSTRAINT',@level2name=N'DF_Password_rowguid'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Date and time the record was last updated.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'Password', @level2type=N'COLUMN',@level2name=N'ModifiedDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of GETDATE()' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'Password', @level2type=N'CONSTRAINT',@level2name=N'DF_Password_ModifiedDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key (clustered) constraint' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'Password', @level2type=N'CONSTRAINT',@level2name=N'PK_Password_BusinessEntityID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'One way hashed authentication information' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'Password'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key constraint referencing Person.BusinessEntityID.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'Password', @level2type=N'CONSTRAINT',@level2name=N'FK_Password_Person_BusinessEntityID'\nGO\n", "output_text": "CREATE TABLE person.password (\n    businessentityid integer NOT NULL,\n    passwordhash character varying(128) NOT NULL,\n    passwordsalt character varying(10) NOT NULL,\n    rowguid uuid DEFAULT public.uuid_generate_v1() NOT NULL,\n    modifieddate timestamp without time zone DEFAULT now() NOT NULL\n);\n\n\n--\n-- Name: TABLE password; Type: COMMENT; Schema: person; Owner: -\n--\n\nCOMMENT ON TABLE person.password IS 'One way hashed authentication information';\n\n\n--\n-- Name: COLUMN password.passwordhash; Type: COMMENT; Schema: person; Owner: -\n--\n\nCOMMENT ON COLUMN person.password.passwordhash IS 'Password for the e-mail account.';\n\n\n--\n-- Name: COLUMN password.passwordsalt; Type: COMMENT; Schema: person; Owner: -\n--\n\nCOMMENT ON COLUMN person.password.passwordsalt IS 'Random value concatenated with the password string before the password is hashed.';"}
{"input_text": "convert following DDL/DML code from MSSQL to Postgresql \nUSE [adventureworks]\nGO\n/****** Object:  Table [Person].[Person]    Script Date: 2/3/24 12:02:52 AM ******/\nSET ANSI_NULLS ON\nGO\nSET QUOTED_IDENTIFIER ON\nGO\nCREATE TABLE [Person].[Person](\n\t[BusinessEntityID] [int] NOT NULL,\n\t[PersonType] [nchar](2) NOT NULL,\n\t[NameStyle] [dbo].[NameStyle] NOT NULL,\n\t[Title] [nvarchar](8) NULL,\n\t[FirstName] [dbo].[Name] NOT NULL,\n\t[MiddleName] [dbo].[Name] NULL,\n\t[LastName] [dbo].[Name] NOT NULL,\n\t[Suffix] [nvarchar](10) NULL,\n\t[EmailPromotion] [int] NOT NULL,\n\t[AdditionalContactInfo] [xml](CONTENT [Person].[AdditionalContactInfoSchemaCollection]) NULL,\n\t[Demographics] [xml](CONTENT [Person].[IndividualSurveySchemaCollection]) NULL,\n\t[rowguid] [uniqueidentifier] ROWGUIDCOL  NOT NULL,\n\t[ModifiedDate] [datetime] NOT NULL,\n CONSTRAINT [PK_Person_BusinessEntityID] PRIMARY KEY CLUSTERED \n(\n\t[BusinessEntityID] ASC\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]\n) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]\nGO\n/****** Object:  Index [AK_Person_rowguid]    Script Date: 2/3/24 12:03:02 AM ******/\nCREATE UNIQUE NONCLUSTERED INDEX [AK_Person_rowguid] ON [Person].[Person]\n(\n\t[rowguid] ASC\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]\nGO\nSET ANSI_PADDING ON\nGO\n/****** Object:  Index [IX_Person_LastName_FirstName_MiddleName]    Script Date: 2/3/24 12:03:02 AM ******/\nCREATE NONCLUSTERED INDEX [IX_Person_LastName_FirstName_MiddleName] ON [Person].[Person]\n(\n\t[LastName] ASC,\n\t[FirstName] ASC,\n\t[MiddleName] ASC\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]\nGO\nSET ARITHABORT ON\nSET CONCAT_NULL_YIELDS_NULL ON\nSET QUOTED_IDENTIFIER ON\nSET ANSI_NULLS ON\nSET ANSI_PADDING ON\nSET ANSI_WARNINGS ON\nSET NUMERIC_ROUNDABORT OFF\nGO\n/****** Object:  Index [PXML_Person_AddContact]    Script Date: 2/3/24 12:03:02 AM ******/\nCREATE PRIMARY XML INDEX [PXML_Person_AddContact] ON [Person].[Person]\n(\n\t[AdditionalContactInfo]\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)\nGO\nSET ARITHABORT ON\nSET CONCAT_NULL_YIELDS_NULL ON\nSET QUOTED_IDENTIFIER ON\nSET ANSI_NULLS ON\nSET ANSI_PADDING ON\nSET ANSI_WARNINGS ON\nSET NUMERIC_ROUNDABORT OFF\nGO\n/****** Object:  Index [PXML_Person_Demographics]    Script Date: 2/3/24 12:03:02 AM ******/\nCREATE PRIMARY XML INDEX [PXML_Person_Demographics] ON [Person].[Person]\n(\n\t[Demographics]\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)\nGO\nSET ARITHABORT ON\nSET CONCAT_NULL_YIELDS_NULL ON\nSET QUOTED_IDENTIFIER ON\nSET ANSI_NULLS ON\nSET ANSI_PADDING ON\nSET ANSI_WARNINGS ON\nSET NUMERIC_ROUNDABORT OFF\nGO\n/****** Object:  Index [XMLPATH_Person_Demographics]    Script Date: 2/3/24 12:03:03 AM ******/\nCREATE XML INDEX [XMLPATH_Person_Demographics] ON [Person].[Person]\n(\n\t[Demographics]\n)\nUSING XML INDEX [PXML_Person_Demographics] FOR PATH WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)\nGO\nSET ARITHABORT ON\nSET CONCAT_NULL_YIELDS_NULL ON\nSET QUOTED_IDENTIFIER ON\nSET ANSI_NULLS ON\nSET ANSI_PADDING ON\nSET ANSI_WARNINGS ON\nSET NUMERIC_ROUNDABORT OFF\nGO\n/****** Object:  Index [XMLPROPERTY_Person_Demographics]    Script Date: 2/3/24 12:03:03 AM ******/\nCREATE XML INDEX [XMLPROPERTY_Person_Demographics] ON [Person].[Person]\n(\n\t[Demographics]\n)\nUSING XML INDEX [PXML_Person_Demographics] FOR PROPERTY WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)\nGO\nSET ARITHABORT ON\nSET CONCAT_NULL_YIELDS_NULL ON\nSET QUOTED_IDENTIFIER ON\nSET ANSI_NULLS ON\nSET ANSI_PADDING ON\nSET ANSI_WARNINGS ON\nSET NUMERIC_ROUNDABORT OFF\nGO\n/****** Object:  Index [XMLVALUE_Person_Demographics]    Script Date: 2/3/24 12:03:03 AM ******/\nCREATE XML INDEX [XMLVALUE_Person_Demographics] ON [Person].[Person]\n(\n\t[Demographics]\n)\nUSING XML INDEX [PXML_Person_Demographics] FOR VALUE WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)\nGO\nALTER TABLE [Person].[Person] ADD  CONSTRAINT [DF_Person_NameStyle]  DEFAULT ((0)) FOR [NameStyle]\nGO\nALTER TABLE [Person].[Person] ADD  CONSTRAINT [DF_Person_EmailPromotion]  DEFAULT ((0)) FOR [EmailPromotion]\nGO\nALTER TABLE [Person].[Person] ADD  CONSTRAINT [DF_Person_rowguid]  DEFAULT (newid()) FOR [rowguid]\nGO\nALTER TABLE [Person].[Person] ADD  CONSTRAINT [DF_Person_ModifiedDate]  DEFAULT (getdate()) FOR [ModifiedDate]\nGO\nALTER TABLE [Person].[Person]  WITH CHECK ADD  CONSTRAINT [FK_Person_BusinessEntity_BusinessEntityID] FOREIGN KEY([BusinessEntityID])\nREFERENCES [Person].[BusinessEntity] ([BusinessEntityID])\nGO\nALTER TABLE [Person].[Person] CHECK CONSTRAINT [FK_Person_BusinessEntity_BusinessEntityID]\nGO\nALTER TABLE [Person].[Person]  WITH CHECK ADD  CONSTRAINT [CK_Person_EmailPromotion] CHECK  (([EmailPromotion]>=(0) AND [EmailPromotion]<=(2)))\nGO\nALTER TABLE [Person].[Person] CHECK CONSTRAINT [CK_Person_EmailPromotion]\nGO\nALTER TABLE [Person].[Person]  WITH CHECK ADD  CONSTRAINT [CK_Person_PersonType] CHECK  (([PersonType] IS NULL OR (upper([PersonType])='GC' OR upper([PersonType])='SP' OR upper([PersonType])='EM' OR upper([PersonType])='IN' OR upper([PersonType])='VC' OR upper([PersonType])='SC')))\nGO\nALTER TABLE [Person].[Person] CHECK CONSTRAINT [CK_Person_PersonType]\nGO\n/****** Object:  Trigger [Person].[iuPerson]    Script Date: 2/3/24 12:03:03 AM ******/\nSET ANSI_NULLS ON\nGO\nSET QUOTED_IDENTIFIER ON\nGO\n\nCREATE TRIGGER [Person].[iuPerson] ON [Person].[Person] \nAFTER INSERT, UPDATE NOT FOR REPLICATION AS \nBEGIN\n    DECLARE @Count int;\n\n    SET @Count = @@ROWCOUNT;\n    IF @Count = 0 \n        RETURN;\n\n    SET NOCOUNT ON;\n\n    IF UPDATE([BusinessEntityID]) OR UPDATE([Demographics]) \n    BEGIN\n        UPDATE [Person].[Person] \n        SET [Person].[Person].[Demographics] = N'<IndividualSurvey xmlns=\"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/IndividualSurvey\"> \n            <TotalPurchaseYTD>0.00</TotalPurchaseYTD> \n            </IndividualSurvey>' \n        FROM inserted \n        WHERE [Person].[Person].[BusinessEntityID] = inserted.[BusinessEntityID] \n            AND inserted.[Demographics] IS NULL;\n        \n        UPDATE [Person].[Person] \n        SET [Demographics].modify(N'declare default element namespace \"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/IndividualSurvey\"; \n            insert <TotalPurchaseYTD>0.00</TotalPurchaseYTD> \n            as first \n            into (/IndividualSurvey)[1]') \n        FROM inserted \n        WHERE [Person].[Person].[BusinessEntityID] = inserted.[BusinessEntityID] \n            AND inserted.[Demographics] IS NOT NULL \n            AND inserted.[Demographics].exist(N'declare default element namespace \n                \"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/IndividualSurvey\"; \n                /IndividualSurvey/TotalPurchaseYTD') <> 1;\n    END;\nEND;\n\nGO\nALTER TABLE [Person].[Person] ENABLE TRIGGER [iuPerson]\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key for Person records.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'Person', @level2type=N'COLUMN',@level2name=N'BusinessEntityID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary type of person: SC = Store Contact, IN = Individual (retail) customer, SP = Sales person, EM = Employee (non-sales), VC = Vendor contact, GC = General contact' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'Person', @level2type=N'COLUMN',@level2name=N'PersonType'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'0 = The data in FirstName and LastName are stored in western style (first name, last name) order.  1 = Eastern style (last name, first name) order.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'Person', @level2type=N'COLUMN',@level2name=N'NameStyle'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of 0' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'Person', @level2type=N'CONSTRAINT',@level2name=N'DF_Person_NameStyle'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A courtesy title. For example, Mr. or Ms.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'Person', @level2type=N'COLUMN',@level2name=N'Title'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'First name of the person.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'Person', @level2type=N'COLUMN',@level2name=N'FirstName'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Middle name or middle initial of the person.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'Person', @level2type=N'COLUMN',@level2name=N'MiddleName'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Last name of the person.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'Person', @level2type=N'COLUMN',@level2name=N'LastName'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Surname suffix. For example, Sr. or Jr.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'Person', @level2type=N'COLUMN',@level2name=N'Suffix'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'0 = Contact does not wish to receive e-mail promotions, 1 = Contact does wish to receive e-mail promotions from AdventureWorks, 2 = Contact does wish to receive e-mail promotions from AdventureWorks and selected partners. ' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'Person', @level2type=N'COLUMN',@level2name=N'EmailPromotion'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of 0' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'Person', @level2type=N'CONSTRAINT',@level2name=N'DF_Person_EmailPromotion'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Additional contact information about the person stored in xml format. ' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'Person', @level2type=N'COLUMN',@level2name=N'AdditionalContactInfo'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Personal information such as hobbies, and income collected from online shoppers. Used for sales analysis.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'Person', @level2type=N'COLUMN',@level2name=N'Demographics'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'Person', @level2type=N'COLUMN',@level2name=N'rowguid'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of NEWID()' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'Person', @level2type=N'CONSTRAINT',@level2name=N'DF_Person_rowguid'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Date and time the record was last updated.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'Person', @level2type=N'COLUMN',@level2name=N'ModifiedDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of GETDATE()' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'Person', @level2type=N'CONSTRAINT',@level2name=N'DF_Person_ModifiedDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key (clustered) constraint' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'Person', @level2type=N'CONSTRAINT',@level2name=N'PK_Person_BusinessEntityID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Unique nonclustered index. Used to support replication samples.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'Person', @level2type=N'INDEX',@level2name=N'AK_Person_rowguid'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary XML index.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'Person', @level2type=N'INDEX',@level2name=N'PXML_Person_AddContact'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary XML index.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'Person', @level2type=N'INDEX',@level2name=N'PXML_Person_Demographics'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Secondary XML index for path.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'Person', @level2type=N'INDEX',@level2name=N'XMLPATH_Person_Demographics'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Secondary XML index for property.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'Person', @level2type=N'INDEX',@level2name=N'XMLPROPERTY_Person_Demographics'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Secondary XML index for value.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'Person', @level2type=N'INDEX',@level2name=N'XMLVALUE_Person_Demographics'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Human beings involved with AdventureWorks: employees, customer contacts, and vendor contacts.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'Person'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'AFTER INSERT, UPDATE trigger inserting Individual only if the Customer does not exist in the Store table and setting the ModifiedDate column in the Person table to the current date.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'Person', @level2type=N'TRIGGER',@level2name=N'iuPerson'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key constraint referencing BusinessEntity.BusinessEntityID.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'Person', @level2type=N'CONSTRAINT',@level2name=N'FK_Person_BusinessEntity_BusinessEntityID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Check constraint [EmailPromotion] >= (0) AND [EmailPromotion] <= (2)' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'Person', @level2type=N'CONSTRAINT',@level2name=N'CK_Person_EmailPromotion'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Check constraint [PersonType] is one of SC, VC, IN, EM or SP.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'Person', @level2type=N'CONSTRAINT',@level2name=N'CK_Person_PersonType'\nGO\n", "output_text": "CREATE TABLE person.person (\n    businessentityid integer NOT NULL,\n    persontype character(2) NOT NULL,\n    namestyle public.\"NameStyle\" DEFAULT false NOT NULL,\n    title character varying(8),\n    firstname public.\"Name\" NOT NULL,\n    middlename public.\"Name\",\n    lastname public.\"Name\" NOT NULL,\n    suffix character varying(10),\n    emailpromotion integer DEFAULT 0 NOT NULL,\n    additionalcontactinfo xml,\n    demographics xml,\n    rowguid uuid DEFAULT public.uuid_generate_v1() NOT NULL,\n    modifieddate timestamp without time zone DEFAULT now() NOT NULL,\n    CONSTRAINT \"CK_Person_EmailPromotion\" CHECK (((emailpromotion >= 0) AND (emailpromotion <= 2))),\n    CONSTRAINT \"CK_Person_PersonType\" CHECK (((persontype IS NULL) OR (upper((persontype)::text) = ANY (ARRAY['SC'::text, 'VC'::text, 'IN'::text, 'EM'::text, 'SP'::text, 'GC'::text]))))\n);\n\n\n--\n-- Name: TABLE person; Type: COMMENT; Schema: person; Owner: -\n--\n\nCOMMENT ON TABLE person.person IS 'Human beings involved with AdventureWorks: employees, customer contacts, and vendor contacts.';\n\n\n--\n-- Name: COLUMN person.businessentityid; Type: COMMENT; Schema: person; Owner: -\n--\n\nCOMMENT ON COLUMN person.person.businessentityid IS 'Primary key for Person records.';\n\n\n--\n-- Name: COLUMN person.persontype; Type: COMMENT; Schema: person; Owner: -\n--\n\nCOMMENT ON COLUMN person.person.persontype IS 'Primary type of person: SC = Store Contact, IN = Individual (retail) customer, SP = Sales person, EM = Employee (non-sales), VC = Vendor contact, GC = General contact';\n\n\n--\n-- Name: COLUMN person.namestyle; Type: COMMENT; Schema: person; Owner: -\n--\n\nCOMMENT ON COLUMN person.person.namestyle IS '0 = The data in FirstName and LastName are stored in western style (first name, last name) order.  1 = Eastern style (last name, first name) order.';\n\n\n--\n-- Name: COLUMN person.title; Type: COMMENT; Schema: person; Owner: -\n--\n\nCOMMENT ON COLUMN person.person.title IS 'A courtesy title. For example, Mr. or Ms.';\n\n\n--\n-- Name: COLUMN person.firstname; Type: COMMENT; Schema: person; Owner: -\n--\n\nCOMMENT ON COLUMN person.person.firstname IS 'First name of the person.';\n\n\n--\n-- Name: COLUMN person.middlename; Type: COMMENT; Schema: person; Owner: -\n--\n\nCOMMENT ON COLUMN person.person.middlename IS 'Middle name or middle initial of the person.';\n\n\n--\n-- Name: COLUMN person.lastname; Type: COMMENT; Schema: person; Owner: -\n--\n\nCOMMENT ON COLUMN person.person.lastname IS 'Last name of the person.';\n\n\n--\n-- Name: COLUMN person.suffix; Type: COMMENT; Schema: person; Owner: -\n--\n\nCOMMENT ON COLUMN person.person.suffix IS 'Surname suffix. For example, Sr. or Jr.';\n\n\n--\n-- Name: COLUMN person.emailpromotion; Type: COMMENT; Schema: person; Owner: -\n--\n\nCOMMENT ON COLUMN person.person.emailpromotion IS '0 = Contact does not wish to receive e-mail promotions, 1 = Contact does wish to receive e-mail promotions from AdventureWorks, 2 = Contact does wish to receive e-mail promotions from AdventureWorks and selected partners.';\n\n\n--\n-- Name: COLUMN person.additionalcontactinfo; Type: COMMENT; Schema: person; Owner: -\n--\n\nCOMMENT ON COLUMN person.person.additionalcontactinfo IS 'Additional contact information about the person stored in xml format.';\n\n\n--\n-- Name: COLUMN person.demographics; Type: COMMENT; Schema: person; Owner: -\n--\n\nCOMMENT ON COLUMN person.person.demographics IS 'Personal information such as hobbies, and income collected from online shoppers. Used for sales analysis.';"}
{"input_text": "convert following DDL/DML code from MSSQL to Postgresql \nUSE [adventureworks]\nGO\n/****** Object:  Table [Person].[PersonPhone]    Script Date: 2/3/24 12:02:52 AM ******/\nSET ANSI_NULLS ON\nGO\nSET QUOTED_IDENTIFIER ON\nGO\nCREATE TABLE [Person].[PersonPhone](\n\t[BusinessEntityID] [int] NOT NULL,\n\t[PhoneNumber] [dbo].[Phone] NOT NULL,\n\t[PhoneNumberTypeID] [int] NOT NULL,\n\t[ModifiedDate] [datetime] NOT NULL,\n CONSTRAINT [PK_PersonPhone_BusinessEntityID_PhoneNumber_PhoneNumberTypeID] PRIMARY KEY CLUSTERED \n(\n\t[BusinessEntityID] ASC,\n\t[PhoneNumber] ASC,\n\t[PhoneNumberTypeID] ASC\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]\n) ON [PRIMARY]\nGO\nSET ANSI_PADDING ON\nGO\n/****** Object:  Index [IX_PersonPhone_PhoneNumber]    Script Date: 2/3/24 12:03:02 AM ******/\nCREATE NONCLUSTERED INDEX [IX_PersonPhone_PhoneNumber] ON [Person].[PersonPhone]\n(\n\t[PhoneNumber] ASC\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]\nGO\nALTER TABLE [Person].[PersonPhone] ADD  CONSTRAINT [DF_PersonPhone_ModifiedDate]  DEFAULT (getdate()) FOR [ModifiedDate]\nGO\nALTER TABLE [Person].[PersonPhone]  WITH CHECK ADD  CONSTRAINT [FK_PersonPhone_Person_BusinessEntityID] FOREIGN KEY([BusinessEntityID])\nREFERENCES [Person].[Person] ([BusinessEntityID])\nGO\nALTER TABLE [Person].[PersonPhone] CHECK CONSTRAINT [FK_PersonPhone_Person_BusinessEntityID]\nGO\nALTER TABLE [Person].[PersonPhone]  WITH CHECK ADD  CONSTRAINT [FK_PersonPhone_PhoneNumberType_PhoneNumberTypeID] FOREIGN KEY([PhoneNumberTypeID])\nREFERENCES [Person].[PhoneNumberType] ([PhoneNumberTypeID])\nGO\nALTER TABLE [Person].[PersonPhone] CHECK CONSTRAINT [FK_PersonPhone_PhoneNumberType_PhoneNumberTypeID]\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Business entity identification number. Foreign key to Person.BusinessEntityID.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'PersonPhone', @level2type=N'COLUMN',@level2name=N'BusinessEntityID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Telephone number identification number.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'PersonPhone', @level2type=N'COLUMN',@level2name=N'PhoneNumber'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Kind of phone number. Foreign key to PhoneNumberType.PhoneNumberTypeID.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'PersonPhone', @level2type=N'COLUMN',@level2name=N'PhoneNumberTypeID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Date and time the record was last updated.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'PersonPhone', @level2type=N'COLUMN',@level2name=N'ModifiedDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of GETDATE()' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'PersonPhone', @level2type=N'CONSTRAINT',@level2name=N'DF_PersonPhone_ModifiedDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key (clustered) constraint' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'PersonPhone', @level2type=N'CONSTRAINT',@level2name=N'PK_PersonPhone_BusinessEntityID_PhoneNumber_PhoneNumberTypeID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Nonclustered index.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'PersonPhone', @level2type=N'INDEX',@level2name=N'IX_PersonPhone_PhoneNumber'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Telephone number and type of a person.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'PersonPhone'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key constraint referencing Person.BusinessEntityID.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'PersonPhone', @level2type=N'CONSTRAINT',@level2name=N'FK_PersonPhone_Person_BusinessEntityID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key constraint referencing PhoneNumberType.PhoneNumberTypeID.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'PersonPhone', @level2type=N'CONSTRAINT',@level2name=N'FK_PersonPhone_PhoneNumberType_PhoneNumberTypeID'\nGO", "output_text": "CREATE TABLE person.personphone (\n    businessentityid integer NOT NULL,\n    phonenumber public.\"Phone\" NOT NULL,\n    phonenumbertypeid integer NOT NULL,\n    modifieddate timestamp without time zone DEFAULT now() NOT NULL\n);\n\n\n--\n-- Name: TABLE personphone; Type: COMMENT; Schema: person; Owner: -\n--\n\nCOMMENT ON TABLE person.personphone IS 'Telephone number and type of a person.';\n\n\n--\n-- Name: COLUMN personphone.businessentityid; Type: COMMENT; Schema: person; Owner: -\n--\n\nCOMMENT ON COLUMN person.personphone.businessentityid IS 'Business entity identification number. Foreign key to Person.BusinessEntityID.';\n\n\n--\n-- Name: COLUMN personphone.phonenumber; Type: COMMENT; Schema: person; Owner: -\n--\n\nCOMMENT ON COLUMN person.personphone.phonenumber IS 'Telephone number identification number.';\n\n\n--\n-- Name: COLUMN personphone.phonenumbertypeid; Type: COMMENT; Schema: person; Owner: -\n--\n\nCOMMENT ON COLUMN person.personphone.phonenumbertypeid IS 'Kind of phone number. Foreign key to PhoneNumberType.PhoneNumberTypeID.';"}
{"input_text": "convert following DDL/DML code from MSSQL to Postgresql \nUSE [adventureworks]\nGO\n/****** Object:  Table [Person].[PhoneNumberType]    Script Date: 2/3/24 12:02:52 AM ******/\nSET ANSI_NULLS ON\nGO\nSET QUOTED_IDENTIFIER ON\nGO\nCREATE TABLE [Person].[PhoneNumberType](\n\t[PhoneNumberTypeID] [int] IDENTITY(1,1) NOT NULL,\n\t[Name] [dbo].[Name] NOT NULL,\n\t[ModifiedDate] [datetime] NOT NULL,\n CONSTRAINT [PK_PhoneNumberType_PhoneNumberTypeID] PRIMARY KEY CLUSTERED \n(\n\t[PhoneNumberTypeID] ASC\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]\n) ON [PRIMARY]\nGO\nALTER TABLE [Person].[PhoneNumberType] ADD  CONSTRAINT [DF_PhoneNumberType_ModifiedDate]  DEFAULT (getdate()) FOR [ModifiedDate]\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key for telephone number type records.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'PhoneNumberType', @level2type=N'COLUMN',@level2name=N'PhoneNumberTypeID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Name of the telephone number type' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'PhoneNumberType', @level2type=N'COLUMN',@level2name=N'Name'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Date and time the record was last updated.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'PhoneNumberType', @level2type=N'COLUMN',@level2name=N'ModifiedDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of GETDATE()' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'PhoneNumberType', @level2type=N'CONSTRAINT',@level2name=N'DF_PhoneNumberType_ModifiedDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key (clustered) constraint' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'PhoneNumberType', @level2type=N'CONSTRAINT',@level2name=N'PK_PhoneNumberType_PhoneNumberTypeID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Type of phone number of a person.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'PhoneNumberType'\nGO", "output_text": "CREATE TABLE person.phonenumbertype (\n    phonenumbertypeid integer NOT NULL,\n    name public.\"Name\" NOT NULL,\n    modifieddate timestamp without time zone DEFAULT now() NOT NULL\n);\n\n\n--\n-- Name: TABLE phonenumbertype; Type: COMMENT; Schema: person; Owner: -\n--\n\nCOMMENT ON TABLE person.phonenumbertype IS 'Type of phone number of a person.';\n\n\n--\n-- Name: COLUMN phonenumbertype.phonenumbertypeid; Type: COMMENT; Schema: person; Owner: -\n--\n\nCOMMENT ON COLUMN person.phonenumbertype.phonenumbertypeid IS 'Primary key for telephone number type records.';\n\n\n--\n-- Name: COLUMN phonenumbertype.name; Type: COMMENT; Schema: person; Owner: -\n--\n\nCOMMENT ON COLUMN person.phonenumbertype.name IS 'Name of the telephone number type';"}
{"input_text": "convert following DDL/DML code from MSSQL to Postgresql \nUSE [adventureworks]\nGO\n/****** Object:  Schema [Person]    Script Date: 2/3/24 12:02:51 AM ******/\nCREATE SCHEMA [Person]\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Contains objects related to names and addresses of customers, vendors, and employees' , @level0type=N'SCHEMA',@level0name=N'Person'\nGO", "output_text": "CREATE SCHEMA person;\nCOMMENT ON SCHEMA person IS 'Contains objects related to names and addresses of customers, vendors, and employees';"}
{"input_text": "convert following DDL/DML code from MSSQL to Postgresql \nUSE [adventureworks]\nGO\n/****** Object:  Table [Person].[StateProvince]    Script Date: 2/3/24 12:02:52 AM ******/\nSET ANSI_NULLS ON\nGO\nSET QUOTED_IDENTIFIER ON\nGO\nCREATE TABLE [Person].[StateProvince](\n\t[StateProvinceID] [int] IDENTITY(1,1) NOT NULL,\n\t[StateProvinceCode] [nchar](3) NOT NULL,\n\t[CountryRegionCode] [nvarchar](3) NOT NULL,\n\t[IsOnlyStateProvinceFlag] [dbo].[Flag] NOT NULL,\n\t[Name] [dbo].[Name] NOT NULL,\n\t[TerritoryID] [int] NOT NULL,\n\t[rowguid] [uniqueidentifier] ROWGUIDCOL  NOT NULL,\n\t[ModifiedDate] [datetime] NOT NULL,\n CONSTRAINT [PK_StateProvince_StateProvinceID] PRIMARY KEY CLUSTERED \n(\n\t[StateProvinceID] ASC\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]\n) ON [PRIMARY]\nGO\nSET ANSI_PADDING ON\nGO\n/****** Object:  Index [AK_StateProvince_Name]    Script Date: 2/3/24 12:03:02 AM ******/\nCREATE UNIQUE NONCLUSTERED INDEX [AK_StateProvince_Name] ON [Person].[StateProvince]\n(\n\t[Name] ASC\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]\nGO\n/****** Object:  Index [AK_StateProvince_rowguid]    Script Date: 2/3/24 12:03:02 AM ******/\nCREATE UNIQUE NONCLUSTERED INDEX [AK_StateProvince_rowguid] ON [Person].[StateProvince]\n(\n\t[rowguid] ASC\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]\nGO\nSET ANSI_PADDING ON\nGO\n/****** Object:  Index [AK_StateProvince_StateProvinceCode_CountryRegionCode]    Script Date: 2/3/24 12:03:02 AM ******/\nCREATE UNIQUE NONCLUSTERED INDEX [AK_StateProvince_StateProvinceCode_CountryRegionCode] ON [Person].[StateProvince]\n(\n\t[StateProvinceCode] ASC,\n\t[CountryRegionCode] ASC\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]\nGO\nALTER TABLE [Person].[StateProvince] ADD  CONSTRAINT [DF_StateProvince_IsOnlyStateProvinceFlag]  DEFAULT ((1)) FOR [IsOnlyStateProvinceFlag]\nGO\nALTER TABLE [Person].[StateProvince] ADD  CONSTRAINT [DF_StateProvince_rowguid]  DEFAULT (newid()) FOR [rowguid]\nGO\nALTER TABLE [Person].[StateProvince] ADD  CONSTRAINT [DF_StateProvince_ModifiedDate]  DEFAULT (getdate()) FOR [ModifiedDate]\nGO\nALTER TABLE [Person].[StateProvince]  WITH CHECK ADD  CONSTRAINT [FK_StateProvince_CountryRegion_CountryRegionCode] FOREIGN KEY([CountryRegionCode])\nREFERENCES [Person].[CountryRegion] ([CountryRegionCode])\nGO\nALTER TABLE [Person].[StateProvince] CHECK CONSTRAINT [FK_StateProvince_CountryRegion_CountryRegionCode]\nGO\nALTER TABLE [Person].[StateProvince]  WITH CHECK ADD  CONSTRAINT [FK_StateProvince_SalesTerritory_TerritoryID] FOREIGN KEY([TerritoryID])\nREFERENCES [Sales].[SalesTerritory] ([TerritoryID])\nGO\nALTER TABLE [Person].[StateProvince] CHECK CONSTRAINT [FK_StateProvince_SalesTerritory_TerritoryID]\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key for StateProvince records.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'StateProvince', @level2type=N'COLUMN',@level2name=N'StateProvinceID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'ISO standard state or province code.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'StateProvince', @level2type=N'COLUMN',@level2name=N'StateProvinceCode'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'ISO standard country or region code. Foreign key to CountryRegion.CountryRegionCode. ' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'StateProvince', @level2type=N'COLUMN',@level2name=N'CountryRegionCode'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'0 = StateProvinceCode exists. 1 = StateProvinceCode unavailable, using CountryRegionCode.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'StateProvince', @level2type=N'COLUMN',@level2name=N'IsOnlyStateProvinceFlag'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of 1 (TRUE)' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'StateProvince', @level2type=N'CONSTRAINT',@level2name=N'DF_StateProvince_IsOnlyStateProvinceFlag'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'State or province description.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'StateProvince', @level2type=N'COLUMN',@level2name=N'Name'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'ID of the territory in which the state or province is located. Foreign key to SalesTerritory.SalesTerritoryID.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'StateProvince', @level2type=N'COLUMN',@level2name=N'TerritoryID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'StateProvince', @level2type=N'COLUMN',@level2name=N'rowguid'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of NEWID()' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'StateProvince', @level2type=N'CONSTRAINT',@level2name=N'DF_StateProvince_rowguid'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Date and time the record was last updated.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'StateProvince', @level2type=N'COLUMN',@level2name=N'ModifiedDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of GETDATE()' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'StateProvince', @level2type=N'CONSTRAINT',@level2name=N'DF_StateProvince_ModifiedDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key (clustered) constraint' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'StateProvince', @level2type=N'CONSTRAINT',@level2name=N'PK_StateProvince_StateProvinceID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Unique nonclustered index.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'StateProvince', @level2type=N'INDEX',@level2name=N'AK_StateProvince_Name'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Unique nonclustered index. Used to support replication samples.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'StateProvince', @level2type=N'INDEX',@level2name=N'AK_StateProvince_rowguid'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Unique nonclustered index.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'StateProvince', @level2type=N'INDEX',@level2name=N'AK_StateProvince_StateProvinceCode_CountryRegionCode'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'State and province lookup table.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'StateProvince'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key constraint referencing CountryRegion.CountryRegionCode.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'StateProvince', @level2type=N'CONSTRAINT',@level2name=N'FK_StateProvince_CountryRegion_CountryRegionCode'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key constraint referencing SalesTerritory.TerritoryID.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'StateProvince', @level2type=N'CONSTRAINT',@level2name=N'FK_StateProvince_SalesTerritory_TerritoryID'\nGO", "output_text": "\nCREATE TABLE person.stateprovince (\n    stateprovinceid integer NOT NULL,\n    stateprovincecode character(3) NOT NULL,\n    countryregioncode character varying(3) NOT NULL,\n    isonlystateprovinceflag public.\"Flag\" DEFAULT true NOT NULL,\n    name public.\"Name\" NOT NULL,\n    territoryid integer NOT NULL,\n    rowguid uuid DEFAULT public.uuid_generate_v1() NOT NULL,\n    modifieddate timestamp without time zone DEFAULT now() NOT NULL\n);\n\n\n--\n-- Name: TABLE stateprovince; Type: COMMENT; Schema: person; Owner: -\n--\n\nCOMMENT ON TABLE person.stateprovince IS 'State and province lookup table.';\n\n\n--\n-- Name: COLUMN stateprovince.stateprovinceid; Type: COMMENT; Schema: person; Owner: -\n--\n\nCOMMENT ON COLUMN person.stateprovince.stateprovinceid IS 'Primary key for StateProvince records.';\n\n\n--\n-- Name: COLUMN stateprovince.stateprovincecode; Type: COMMENT; Schema: person; Owner: -\n--\n\nCOMMENT ON COLUMN person.stateprovince.stateprovincecode IS 'ISO standard state or province code.';\n\n\n--\n-- Name: COLUMN stateprovince.countryregioncode; Type: COMMENT; Schema: person; Owner: -\n--\n\nCOMMENT ON COLUMN person.stateprovince.countryregioncode IS 'ISO standard country or region code. Foreign key to CountryRegion.CountryRegionCode.';\n\n\n--\n-- Name: COLUMN stateprovince.isonlystateprovinceflag; Type: COMMENT; Schema: person; Owner: -\n--\n\nCOMMENT ON COLUMN person.stateprovince.isonlystateprovinceflag IS '0 = StateProvinceCode exists. 1 = StateProvinceCode unavailable, using CountryRegionCode.';\n\n\n--\n-- Name: COLUMN stateprovince.name; Type: COMMENT; Schema: person; Owner: -\n--\n\nCOMMENT ON COLUMN person.stateprovince.name IS 'State or province description.';\n\n\n--\n-- Name: COLUMN stateprovince.territoryid; Type: COMMENT; Schema: person; Owner: -\n--\n\nCOMMENT ON COLUMN person.stateprovince.territoryid IS 'ID of the territory in which the state or province is located. Foreign key to SalesTerritory.SalesTerritoryID.';"}
{"input_text": "convert following DDL/DML code from MSSQL to Postgresql \nUSE [adventureworks]\nGO\n/****** Object:  View [Person].[vAdditionalContactInfo]    Script Date: 2/3/24 12:02:52 AM ******/\nSET ANSI_NULLS ON\nGO\nSET QUOTED_IDENTIFIER ON\nGO\n\nCREATE VIEW [Person].[vAdditionalContactInfo] \nAS \nSELECT \n    [BusinessEntityID] \n    ,[FirstName]\n    ,[MiddleName]\n    ,[LastName]\n    ,[ContactInfo].ref.value(N'declare namespace ci=\"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ContactInfo\"; \n        declare namespace act=\"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ContactTypes\"; \n        (act:telephoneNumber)[1]/act:number', 'nvarchar(50)') AS [TelephoneNumber] \n    ,LTRIM(RTRIM([ContactInfo].ref.value(N'declare namespace ci=\"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ContactInfo\"; \n        declare namespace act=\"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ContactTypes\"; \n        (act:telephoneNumber/act:SpecialInstructions/text())[1]', 'nvarchar(max)'))) AS [TelephoneSpecialInstructions] \n    ,[ContactInfo].ref.value(N'declare namespace ci=\"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ContactInfo\"; \n        declare namespace act=\"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ContactTypes\";\n        (act:homePostalAddress/act:Street)[1]', 'nvarchar(50)') AS [Street] \n    ,[ContactInfo].ref.value(N'declare namespace ci=\"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ContactInfo\"; \n        declare namespace act=\"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ContactTypes\"; \n        (act:homePostalAddress/act:City)[1]', 'nvarchar(50)') AS [City] \n    ,[ContactInfo].ref.value(N'declare namespace ci=\"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ContactInfo\"; \n        declare namespace act=\"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ContactTypes\"; \n        (act:homePostalAddress/act:StateProvince)[1]', 'nvarchar(50)') AS [StateProvince] \n    ,[ContactInfo].ref.value(N'declare namespace ci=\"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ContactInfo\"; \n        declare namespace act=\"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ContactTypes\"; \n        (act:homePostalAddress/act:PostalCode)[1]', 'nvarchar(50)') AS [PostalCode] \n    ,[ContactInfo].ref.value(N'declare namespace ci=\"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ContactInfo\"; \n        declare namespace act=\"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ContactTypes\"; \n        (act:homePostalAddress/act:CountryRegion)[1]', 'nvarchar(50)') AS [CountryRegion] \n    ,[ContactInfo].ref.value(N'declare namespace ci=\"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ContactInfo\"; \n        declare namespace act=\"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ContactTypes\"; \n        (act:homePostalAddress/act:SpecialInstructions/text())[1]', 'nvarchar(max)') AS [HomeAddressSpecialInstructions] \n    ,[ContactInfo].ref.value(N'declare namespace ci=\"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ContactInfo\"; \n        declare namespace act=\"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ContactTypes\"; \n        (act:eMail/act:eMailAddress)[1]', 'nvarchar(128)') AS [EMailAddress] \n    ,LTRIM(RTRIM([ContactInfo].ref.value(N'declare namespace ci=\"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ContactInfo\"; \n        declare namespace act=\"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ContactTypes\"; \n        (act:eMail/act:SpecialInstructions/text())[1]', 'nvarchar(max)'))) AS [EMailSpecialInstructions] \n    ,[ContactInfo].ref.value(N'declare namespace ci=\"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ContactInfo\"; \n        declare namespace act=\"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ContactTypes\"; \n        (act:eMail/act:SpecialInstructions/act:telephoneNumber/act:number)[1]', 'nvarchar(50)') AS [EMailTelephoneNumber] \n    ,[rowguid] \n    ,[ModifiedDate]\nFROM [Person].[Person]\nOUTER APPLY [AdditionalContactInfo].nodes(\n    'declare namespace ci=\"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ContactInfo\"; \n    /ci:AdditionalContactInfo') AS ContactInfo(ref) \nWHERE [AdditionalContactInfo] IS NOT NULL;\n\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Displays the contact name and content from each element in the xml column AdditionalContactInfo for that person.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'VIEW',@level1name=N'vAdditionalContactInfo'\nGO", "output_text": "--"}
{"input_text": "convert following DDL/DML code from MSSQL to Postgresql \nUSE [adventureworks]\nGO\n/****** Object:  Table [Production].[BillOfMaterials]    Script Date: 2/3/24 12:02:56 AM ******/\nSET ANSI_NULLS ON\nGO\nSET QUOTED_IDENTIFIER ON\nGO\nCREATE TABLE [Production].[BillOfMaterials](\n\t[BillOfMaterialsID] [int] IDENTITY(1,1) NOT NULL,\n\t[ProductAssemblyID] [int] NULL,\n\t[ComponentID] [int] NOT NULL,\n\t[StartDate] [datetime] NOT NULL,\n\t[EndDate] [datetime] NULL,\n\t[UnitMeasureCode] [nchar](3) NOT NULL,\n\t[BOMLevel] [smallint] NOT NULL,\n\t[PerAssemblyQty] [decimal](8, 2) NOT NULL,\n\t[ModifiedDate] [datetime] NOT NULL,\n CONSTRAINT [PK_BillOfMaterials_BillOfMaterialsID] PRIMARY KEY NONCLUSTERED \n(\n\t[BillOfMaterialsID] ASC\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]\n) ON [PRIMARY]\nGO\n/****** Object:  Index [AK_BillOfMaterials_ProductAssemblyID_ComponentID_StartDate]    Script Date: 2/3/24 12:02:56 AM ******/\nCREATE UNIQUE CLUSTERED INDEX [AK_BillOfMaterials_ProductAssemblyID_ComponentID_StartDate] ON [Production].[BillOfMaterials]\n(\n\t[ProductAssemblyID] ASC,\n\t[ComponentID] ASC,\n\t[StartDate] ASC\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]\nGO\nSET ANSI_PADDING ON\nGO\n/****** Object:  Index [IX_BillOfMaterials_UnitMeasureCode]    Script Date: 2/3/24 12:03:02 AM ******/\nCREATE NONCLUSTERED INDEX [IX_BillOfMaterials_UnitMeasureCode] ON [Production].[BillOfMaterials]\n(\n\t[UnitMeasureCode] ASC\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]\nGO\nALTER TABLE [Production].[BillOfMaterials] ADD  CONSTRAINT [DF_BillOfMaterials_StartDate]  DEFAULT (getdate()) FOR [StartDate]\nGO\nALTER TABLE [Production].[BillOfMaterials] ADD  CONSTRAINT [DF_BillOfMaterials_PerAssemblyQty]  DEFAULT ((1.00)) FOR [PerAssemblyQty]\nGO\nALTER TABLE [Production].[BillOfMaterials] ADD  CONSTRAINT [DF_BillOfMaterials_ModifiedDate]  DEFAULT (getdate()) FOR [ModifiedDate]\nGO\nALTER TABLE [Production].[BillOfMaterials]  WITH CHECK ADD  CONSTRAINT [FK_BillOfMaterials_Product_ComponentID] FOREIGN KEY([ComponentID])\nREFERENCES [Production].[Product] ([ProductID])\nGO\nALTER TABLE [Production].[BillOfMaterials] CHECK CONSTRAINT [FK_BillOfMaterials_Product_ComponentID]\nGO\nALTER TABLE [Production].[BillOfMaterials]  WITH CHECK ADD  CONSTRAINT [FK_BillOfMaterials_Product_ProductAssemblyID] FOREIGN KEY([ProductAssemblyID])\nREFERENCES [Production].[Product] ([ProductID])\nGO\nALTER TABLE [Production].[BillOfMaterials] CHECK CONSTRAINT [FK_BillOfMaterials_Product_ProductAssemblyID]\nGO\nALTER TABLE [Production].[BillOfMaterials]  WITH CHECK ADD  CONSTRAINT [FK_BillOfMaterials_UnitMeasure_UnitMeasureCode] FOREIGN KEY([UnitMeasureCode])\nREFERENCES [Production].[UnitMeasure] ([UnitMeasureCode])\nGO\nALTER TABLE [Production].[BillOfMaterials] CHECK CONSTRAINT [FK_BillOfMaterials_UnitMeasure_UnitMeasureCode]\nGO\nALTER TABLE [Production].[BillOfMaterials]  WITH CHECK ADD  CONSTRAINT [CK_BillOfMaterials_BOMLevel] CHECK  (([ProductAssemblyID] IS NULL AND [BOMLevel]=(0) AND [PerAssemblyQty]=(1.00) OR [ProductAssemblyID] IS NOT NULL AND [BOMLevel]>=(1)))\nGO\nALTER TABLE [Production].[BillOfMaterials] CHECK CONSTRAINT [CK_BillOfMaterials_BOMLevel]\nGO\nALTER TABLE [Production].[BillOfMaterials]  WITH CHECK ADD  CONSTRAINT [CK_BillOfMaterials_EndDate] CHECK  (([EndDate]>[StartDate] OR [EndDate] IS NULL))\nGO\nALTER TABLE [Production].[BillOfMaterials] CHECK CONSTRAINT [CK_BillOfMaterials_EndDate]\nGO\nALTER TABLE [Production].[BillOfMaterials]  WITH CHECK ADD  CONSTRAINT [CK_BillOfMaterials_PerAssemblyQty] CHECK  (([PerAssemblyQty]>=(1.00)))\nGO\nALTER TABLE [Production].[BillOfMaterials] CHECK CONSTRAINT [CK_BillOfMaterials_PerAssemblyQty]\nGO\nALTER TABLE [Production].[BillOfMaterials]  WITH CHECK ADD  CONSTRAINT [CK_BillOfMaterials_ProductAssemblyID] CHECK  (([ProductAssemblyID]<>[ComponentID]))\nGO\nALTER TABLE [Production].[BillOfMaterials] CHECK CONSTRAINT [CK_BillOfMaterials_ProductAssemblyID]\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key for BillOfMaterials records.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'BillOfMaterials', @level2type=N'COLUMN',@level2name=N'BillOfMaterialsID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Parent product identification number. Foreign key to Product.ProductID.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'BillOfMaterials', @level2type=N'COLUMN',@level2name=N'ProductAssemblyID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Component identification number. Foreign key to Product.ProductID.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'BillOfMaterials', @level2type=N'COLUMN',@level2name=N'ComponentID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Date the component started being used in the assembly item.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'BillOfMaterials', @level2type=N'COLUMN',@level2name=N'StartDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of GETDATE()' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'BillOfMaterials', @level2type=N'CONSTRAINT',@level2name=N'DF_BillOfMaterials_StartDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Date the component stopped being used in the assembly item.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'BillOfMaterials', @level2type=N'COLUMN',@level2name=N'EndDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Standard code identifying the unit of measure for the quantity.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'BillOfMaterials', @level2type=N'COLUMN',@level2name=N'UnitMeasureCode'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Indicates the depth the component is from its parent (AssemblyID).' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'BillOfMaterials', @level2type=N'COLUMN',@level2name=N'BOMLevel'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Quantity of the component needed to create the assembly.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'BillOfMaterials', @level2type=N'COLUMN',@level2name=N'PerAssemblyQty'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of 1.0' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'BillOfMaterials', @level2type=N'CONSTRAINT',@level2name=N'DF_BillOfMaterials_PerAssemblyQty'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Date and time the record was last updated.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'BillOfMaterials', @level2type=N'COLUMN',@level2name=N'ModifiedDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of GETDATE()' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'BillOfMaterials', @level2type=N'CONSTRAINT',@level2name=N'DF_BillOfMaterials_ModifiedDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key (clustered) constraint' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'BillOfMaterials', @level2type=N'CONSTRAINT',@level2name=N'PK_BillOfMaterials_BillOfMaterialsID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Clustered index.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'BillOfMaterials', @level2type=N'INDEX',@level2name=N'AK_BillOfMaterials_ProductAssemblyID_ComponentID_StartDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Nonclustered index.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'BillOfMaterials', @level2type=N'INDEX',@level2name=N'IX_BillOfMaterials_UnitMeasureCode'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Items required to make bicycles and bicycle subassemblies. It identifies the heirarchical relationship between a parent product and its components.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'BillOfMaterials'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key constraint referencing Product.ComponentID.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'BillOfMaterials', @level2type=N'CONSTRAINT',@level2name=N'FK_BillOfMaterials_Product_ComponentID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key constraint referencing Product.ProductAssemblyID.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'BillOfMaterials', @level2type=N'CONSTRAINT',@level2name=N'FK_BillOfMaterials_Product_ProductAssemblyID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key constraint referencing UnitMeasure.UnitMeasureCode.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'BillOfMaterials', @level2type=N'CONSTRAINT',@level2name=N'FK_BillOfMaterials_UnitMeasure_UnitMeasureCode'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Check constraint [ProductAssemblyID] IS NULL AND [BOMLevel] = (0) AND [PerAssemblyQty] = (1) OR [ProductAssemblyID] IS NOT NULL AND [BOMLevel] >= (1)' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'BillOfMaterials', @level2type=N'CONSTRAINT',@level2name=N'CK_BillOfMaterials_BOMLevel'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Check constraint EndDate] > [StartDate] OR [EndDate] IS NULL' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'BillOfMaterials', @level2type=N'CONSTRAINT',@level2name=N'CK_BillOfMaterials_EndDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Check constraint [PerAssemblyQty] >= (1.00)' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'BillOfMaterials', @level2type=N'CONSTRAINT',@level2name=N'CK_BillOfMaterials_PerAssemblyQty'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Check constraint [ProductAssemblyID] <> [ComponentID]' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'BillOfMaterials', @level2type=N'CONSTRAINT',@level2name=N'CK_BillOfMaterials_ProductAssemblyID'\nGO", "output_text": "CREATE TABLE production.billofmaterials (\n    billofmaterialsid integer NOT NULL,\n    productassemblyid integer,\n    componentid integer NOT NULL,\n    startdate timestamp without time zone DEFAULT now() NOT NULL,\n    enddate timestamp without time zone,\n    unitmeasurecode character(3) NOT NULL,\n    bomlevel smallint NOT NULL,\n    perassemblyqty numeric(8,2) DEFAULT 1.00 NOT NULL,\n    modifieddate timestamp without time zone DEFAULT now() NOT NULL,\n    CONSTRAINT \"CK_BillOfMaterials_BOMLevel\" CHECK ((((productassemblyid IS NULL) AND (bomlevel = 0) AND (perassemblyqty = 1.00)) OR ((productassemblyid IS NOT NULL) AND (bomlevel >= 1)))),\n    CONSTRAINT \"CK_BillOfMaterials_EndDate\" CHECK (((enddate > startdate) OR (enddate IS NULL))),\n    CONSTRAINT \"CK_BillOfMaterials_PerAssemblyQty\" CHECK ((perassemblyqty >= 1.00)),\n    CONSTRAINT \"CK_BillOfMaterials_ProductAssemblyID\" CHECK ((productassemblyid <> componentid))\n);\n\n\n--\n-- Name: TABLE billofmaterials; Type: COMMENT; Schema: production; Owner: -\n--\n\nCOMMENT ON TABLE production.billofmaterials IS 'Items required to make bicycles and bicycle subassemblies. It identifies the heirarchical relationship between a parent product and its components.';\n\n\n--\n-- Name: COLUMN billofmaterials.billofmaterialsid; Type: COMMENT; Schema: production; Owner: -\n--\n\nCOMMENT ON COLUMN production.billofmaterials.billofmaterialsid IS 'Primary key for BillOfMaterials records.';\n\n\n--\n-- Name: COLUMN billofmaterials.productassemblyid; Type: COMMENT; Schema: production; Owner: -\n--\n\nCOMMENT ON COLUMN production.billofmaterials.productassemblyid IS 'Parent product identification number. Foreign key to Product.ProductID.';\n\n\n--\n-- Name: COLUMN billofmaterials.componentid; Type: COMMENT; Schema: production; Owner: -\n--\n\nCOMMENT ON COLUMN production.billofmaterials.componentid IS 'Component identification number. Foreign key to Product.ProductID.';\n\n\n--\n-- Name: COLUMN billofmaterials.startdate; Type: COMMENT; Schema: production; Owner: -\n--\n\nCOMMENT ON COLUMN production.billofmaterials.startdate IS 'Date the component started being used in the assembly item.';\n\n\n--\n-- Name: COLUMN billofmaterials.enddate; Type: COMMENT; Schema: production; Owner: -\n--\n\nCOMMENT ON COLUMN production.billofmaterials.enddate IS 'Date the component stopped being used in the assembly item.';\n\n\n--\n-- Name: COLUMN billofmaterials.unitmeasurecode; Type: COMMENT; Schema: production; Owner: -\n--\n\nCOMMENT ON COLUMN production.billofmaterials.unitmeasurecode IS 'Standard code identifying the unit of measure for the quantity.';\n\n\n--\n-- Name: COLUMN billofmaterials.bomlevel; Type: COMMENT; Schema: production; Owner: -\n--\n\nCOMMENT ON COLUMN production.billofmaterials.bomlevel IS 'Indicates the depth the component is from its parent (AssemblyID).';\n\n\n--\n-- Name: COLUMN billofmaterials.perassemblyqty; Type: COMMENT; Schema: production; Owner: -\n--\n\nCOMMENT ON COLUMN production.billofmaterials.perassemblyqty IS 'Quantity of the component needed to create the assembly.';"}
{"input_text": "convert following DDL/DML code from MSSQL to Postgresql \nUSE [adventureworks]\nGO\n/****** Object:  Table [Production].[Culture]    Script Date: 2/3/24 12:02:56 AM ******/\nSET ANSI_NULLS ON\nGO\nSET QUOTED_IDENTIFIER ON\nGO\nCREATE TABLE [Production].[Culture](\n\t[CultureID] [nchar](6) NOT NULL,\n\t[Name] [dbo].[Name] NOT NULL,\n\t[ModifiedDate] [datetime] NOT NULL,\n CONSTRAINT [PK_Culture_CultureID] PRIMARY KEY CLUSTERED \n(\n\t[CultureID] ASC\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]\n) ON [PRIMARY]\nGO\nSET ANSI_PADDING ON\nGO\n/****** Object:  Index [AK_Culture_Name]    Script Date: 2/3/24 12:03:02 AM ******/\nCREATE UNIQUE NONCLUSTERED INDEX [AK_Culture_Name] ON [Production].[Culture]\n(\n\t[Name] ASC\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]\nGO\nALTER TABLE [Production].[Culture] ADD  CONSTRAINT [DF_Culture_ModifiedDate]  DEFAULT (getdate()) FOR [ModifiedDate]\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key for Culture records.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Culture', @level2type=N'COLUMN',@level2name=N'CultureID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Culture description.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Culture', @level2type=N'COLUMN',@level2name=N'Name'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Date and time the record was last updated.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Culture', @level2type=N'COLUMN',@level2name=N'ModifiedDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of GETDATE()' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Culture', @level2type=N'CONSTRAINT',@level2name=N'DF_Culture_ModifiedDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key (clustered) constraint' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Culture', @level2type=N'CONSTRAINT',@level2name=N'PK_Culture_CultureID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Unique nonclustered index.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Culture', @level2type=N'INDEX',@level2name=N'AK_Culture_Name'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Lookup table containing the languages in which some AdventureWorks data is stored.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Culture'\nGO\n", "output_text": "\nCREATE TABLE production.culture (\n    cultureid character(6) NOT NULL,\n    name public.\"Name\" NOT NULL,\n    modifieddate timestamp without time zone DEFAULT now() NOT NULL\n);\n\n\n--\n-- Name: TABLE culture; Type: COMMENT; Schema: production; Owner: -\n--\n\nCOMMENT ON TABLE production.culture IS 'Lookup table containing the languages in which some AdventureWorks data is stored.';\n\n\n--\n-- Name: COLUMN culture.cultureid; Type: COMMENT; Schema: production; Owner: -\n--\n\nCOMMENT ON COLUMN production.culture.cultureid IS 'Primary key for Culture records.';\n\n\n--\n-- Name: COLUMN culture.name; Type: COMMENT; Schema: production; Owner: -\n--\n\nCOMMENT ON COLUMN production.culture.name IS 'Culture description.';"}
{"input_text": "convert following DDL/DML code from MSSQL to Postgresql \nUSE [adventureworks]\nGO\n/****** Object:  Table [Production].[Document]    Script Date: 2/3/24 12:02:57 AM ******/\nSET ANSI_NULLS ON\nGO\nSET QUOTED_IDENTIFIER ON\nGO\nCREATE TABLE [Production].[Document](\n\t[DocumentNode] [hierarchyid] NOT NULL,\n\t[DocumentLevel]  AS ([DocumentNode].[GetLevel]()),\n\t[Title] [nvarchar](50) NOT NULL,\n\t[Owner] [int] NOT NULL,\n\t[FolderFlag] [bit] NOT NULL,\n\t[FileName] [nvarchar](400) NOT NULL,\n\t[FileExtension] [nvarchar](8) NOT NULL,\n\t[Revision] [nchar](5) NOT NULL,\n\t[ChangeNumber] [int] NOT NULL,\n\t[Status] [tinyint] NOT NULL,\n\t[DocumentSummary] [nvarchar](max) NULL,\n\t[Document] [varbinary](max) NULL,\n\t[rowguid] [uniqueidentifier] ROWGUIDCOL  NOT NULL,\n\t[ModifiedDate] [datetime] NOT NULL,\n CONSTRAINT [PK_Document_DocumentNode] PRIMARY KEY CLUSTERED \n(\n\t[DocumentNode] ASC\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY],\nUNIQUE NONCLUSTERED \n(\n\t[rowguid] ASC\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]\n) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]\nGO\nSET ARITHABORT ON\nSET CONCAT_NULL_YIELDS_NULL ON\nSET QUOTED_IDENTIFIER ON\nSET ANSI_NULLS ON\nSET ANSI_PADDING ON\nSET ANSI_WARNINGS ON\nSET NUMERIC_ROUNDABORT OFF\nGO\n/****** Object:  Index [AK_Document_DocumentLevel_DocumentNode]    Script Date: 2/3/24 12:03:02 AM ******/\nCREATE UNIQUE NONCLUSTERED INDEX [AK_Document_DocumentLevel_DocumentNode] ON [Production].[Document]\n(\n\t[DocumentLevel] ASC,\n\t[DocumentNode] ASC\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]\nGO\n/****** Object:  Index [AK_Document_rowguid]    Script Date: 2/3/24 12:03:02 AM ******/\nCREATE UNIQUE NONCLUSTERED INDEX [AK_Document_rowguid] ON [Production].[Document]\n(\n\t[rowguid] ASC\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]\nGO\nSET ANSI_PADDING ON\nGO\n/****** Object:  Index [IX_Document_FileName_Revision]    Script Date: 2/3/24 12:03:02 AM ******/\nCREATE NONCLUSTERED INDEX [IX_Document_FileName_Revision] ON [Production].[Document]\n(\n\t[FileName] ASC,\n\t[Revision] ASC\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]\nGO\n/****** Object:  FullTextIndex     Script Date: 2/3/24 12:03:03 AM ******/\nCREATE FULLTEXT INDEX ON [Production].[Document](\n[Document] TYPE COLUMN [FileExtension] LANGUAGE 'English', \n[DocumentSummary] LANGUAGE 'English')\nKEY INDEX [PK_Document_DocumentNode]ON ([AW2016FullTextCatalog], FILEGROUP [PRIMARY])\nWITH (CHANGE_TRACKING = AUTO, STOPLIST = SYSTEM)\n\nGO\nALTER TABLE [Production].[Document] ADD  CONSTRAINT [DF_Document_FolderFlag]  DEFAULT ((0)) FOR [FolderFlag]\nGO\nALTER TABLE [Production].[Document] ADD  CONSTRAINT [DF_Document_ChangeNumber]  DEFAULT ((0)) FOR [ChangeNumber]\nGO\nALTER TABLE [Production].[Document] ADD  CONSTRAINT [DF_Document_rowguid]  DEFAULT (newid()) FOR [rowguid]\nGO\nALTER TABLE [Production].[Document] ADD  CONSTRAINT [DF_Document_ModifiedDate]  DEFAULT (getdate()) FOR [ModifiedDate]\nGO\nALTER TABLE [Production].[Document]  WITH CHECK ADD  CONSTRAINT [FK_Document_Employee_Owner] FOREIGN KEY([Owner])\nREFERENCES [HumanResources].[Employee] ([BusinessEntityID])\nGO\nALTER TABLE [Production].[Document] CHECK CONSTRAINT [FK_Document_Employee_Owner]\nGO\nALTER TABLE [Production].[Document]  WITH CHECK ADD  CONSTRAINT [CK_Document_Status] CHECK  (([Status]>=(1) AND [Status]<=(3)))\nGO\nALTER TABLE [Production].[Document] CHECK CONSTRAINT [CK_Document_Status]\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key for Document records.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Document', @level2type=N'COLUMN',@level2name=N'DocumentNode'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Depth in the document hierarchy.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Document', @level2type=N'COLUMN',@level2name=N'DocumentLevel'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Title of the document.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Document', @level2type=N'COLUMN',@level2name=N'Title'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Employee who controls the document.  Foreign key to Employee.BusinessEntityID' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Document', @level2type=N'COLUMN',@level2name=N'Owner'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'0 = This is a folder, 1 = This is a document.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Document', @level2type=N'COLUMN',@level2name=N'FolderFlag'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'File name of the document' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Document', @level2type=N'COLUMN',@level2name=N'FileName'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'File extension indicating the document type. For example, .doc or .txt.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Document', @level2type=N'COLUMN',@level2name=N'FileExtension'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Revision number of the document. ' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Document', @level2type=N'COLUMN',@level2name=N'Revision'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Engineering change approval number.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Document', @level2type=N'COLUMN',@level2name=N'ChangeNumber'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of 0' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Document', @level2type=N'CONSTRAINT',@level2name=N'DF_Document_ChangeNumber'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'1 = Pending approval, 2 = Approved, 3 = Obsolete' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Document', @level2type=N'COLUMN',@level2name=N'Status'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Document abstract.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Document', @level2type=N'COLUMN',@level2name=N'DocumentSummary'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Complete document.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Document', @level2type=N'COLUMN',@level2name=N'Document'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'ROWGUIDCOL number uniquely identifying the record. Required for FileStream.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Document', @level2type=N'COLUMN',@level2name=N'rowguid'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of NEWID()' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Document', @level2type=N'CONSTRAINT',@level2name=N'DF_Document_rowguid'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Date and time the record was last updated.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Document', @level2type=N'COLUMN',@level2name=N'ModifiedDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of GETDATE()' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Document', @level2type=N'CONSTRAINT',@level2name=N'DF_Document_ModifiedDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key (clustered) constraint' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Document', @level2type=N'CONSTRAINT',@level2name=N'PK_Document_DocumentNode'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Unique nonclustered index.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Document', @level2type=N'INDEX',@level2name=N'AK_Document_DocumentLevel_DocumentNode'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Unique nonclustered index. Used to support FileStream.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Document', @level2type=N'INDEX',@level2name=N'AK_Document_rowguid'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Unique nonclustered index.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Document', @level2type=N'INDEX',@level2name=N'IX_Document_FileName_Revision'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Product maintenance documents.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Document'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key constraint referencing Employee.BusinessEntityID.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Document', @level2type=N'CONSTRAINT',@level2name=N'FK_Document_Employee_Owner'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Check constraint [Status] BETWEEN (1) AND (3)' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Document', @level2type=N'CONSTRAINT',@level2name=N'CK_Document_Status'\nGO\n", "output_text": "\nCREATE TABLE production.document (\n    title character varying(50) NOT NULL,\n    owner integer NOT NULL,\n    folderflag public.\"Flag\" DEFAULT false NOT NULL,\n    filename character varying(400) NOT NULL,\n    fileextension character varying(8),\n    revision character(5) NOT NULL,\n    changenumber integer DEFAULT 0 NOT NULL,\n    status smallint NOT NULL,\n    documentsummary text,\n    document bytea,\n    rowguid uuid DEFAULT public.uuid_generate_v1() NOT NULL,\n    modifieddate timestamp without time zone DEFAULT now() NOT NULL,\n    documentnode character varying DEFAULT '/'::character varying NOT NULL,\n    CONSTRAINT \"CK_Document_Status\" CHECK (((status >= 1) AND (status <= 3)))\n);\n\n\n--\n-- Name: TABLE document; Type: COMMENT; Schema: production; Owner: -\n--\n\nCOMMENT ON TABLE production.document IS 'Product maintenance documents.';\n\n\n--\n-- Name: COLUMN document.title; Type: COMMENT; Schema: production; Owner: -\n--\n\nCOMMENT ON COLUMN production.document.title IS 'Title of the document.';\n\n\n--\n-- Name: COLUMN document.owner; Type: COMMENT; Schema: production; Owner: -\n--\n\nCOMMENT ON COLUMN production.document.owner IS 'Employee who controls the document.  Foreign key to Employee.BusinessEntityID';\n\n\n--\n-- Name: COLUMN document.folderflag; Type: COMMENT; Schema: production; Owner: -\n--\n\nCOMMENT ON COLUMN production.document.folderflag IS '0 = This is a folder, 1 = This is a document.';\n\n\n--\n-- Name: COLUMN document.filename; Type: COMMENT; Schema: production; Owner: -\n--\n\nCOMMENT ON COLUMN production.document.filename IS 'File name of the document';\n\n\n--\n-- Name: COLUMN document.fileextension; Type: COMMENT; Schema: production; Owner: -\n--\n\nCOMMENT ON COLUMN production.document.fileextension IS 'File extension indicating the document type. For example, .doc or .txt.';\n\n\n--\n-- Name: COLUMN document.revision; Type: COMMENT; Schema: production; Owner: -\n--\n\nCOMMENT ON COLUMN production.document.revision IS 'Revision number of the document.';\n\n\n--\n-- Name: COLUMN document.changenumber; Type: COMMENT; Schema: production; Owner: -\n--\n\nCOMMENT ON COLUMN production.document.changenumber IS 'Engineering change approval number.';\n\n\n--\n-- Name: COLUMN document.status; Type: COMMENT; Schema: production; Owner: -\n--\n\nCOMMENT ON COLUMN production.document.status IS '1 = Pending approval, 2 = Approved, 3 = Obsolete';\n\n\n--\n-- Name: COLUMN document.documentsummary; Type: COMMENT; Schema: production; Owner: -\n--\n\nCOMMENT ON COLUMN production.document.documentsummary IS 'Document abstract.';\n\n\n--\n-- Name: COLUMN document.document; Type: COMMENT; Schema: production; Owner: -\n--\n\nCOMMENT ON COLUMN production.document.document IS 'Complete document.';\n\n\n--\n-- Name: COLUMN document.rowguid; Type: COMMENT; Schema: production; Owner: -\n--\n\nCOMMENT ON COLUMN production.document.rowguid IS 'ROWGUIDCOL number uniquely identifying the record. Required for FileStream.';\n\n\n--\n-- Name: COLUMN document.documentnode; Type: COMMENT; Schema: production; Owner: -\n--\n\nCOMMENT ON COLUMN production.document.documentnode IS 'Primary key for Document records.';"}
{"input_text": "convert following DDL/DML code from MSSQL to Postgresql \nUSE [adventureworks]\nGO\n/****** Object:  Table [Production].[Illustration]    Script Date: 2/3/24 12:02:57 AM ******/\nSET ANSI_NULLS ON\nGO\nSET QUOTED_IDENTIFIER ON\nGO\nCREATE TABLE [Production].[Illustration](\n\t[IllustrationID] [int] IDENTITY(1,1) NOT NULL,\n\t[Diagram] [xml] NULL,\n\t[ModifiedDate] [datetime] NOT NULL,\n CONSTRAINT [PK_Illustration_IllustrationID] PRIMARY KEY CLUSTERED \n(\n\t[IllustrationID] ASC\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]\n) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]\nGO\nALTER TABLE [Production].[Illustration] ADD  CONSTRAINT [DF_Illustration_ModifiedDate]  DEFAULT (getdate()) FOR [ModifiedDate]\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key for Illustration records.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Illustration', @level2type=N'COLUMN',@level2name=N'IllustrationID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Illustrations used in manufacturing instructions. Stored as XML.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Illustration', @level2type=N'COLUMN',@level2name=N'Diagram'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Date and time the record was last updated.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Illustration', @level2type=N'COLUMN',@level2name=N'ModifiedDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of GETDATE()' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Illustration', @level2type=N'CONSTRAINT',@level2name=N'DF_Illustration_ModifiedDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key (clustered) constraint' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Illustration', @level2type=N'CONSTRAINT',@level2name=N'PK_Illustration_IllustrationID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Bicycle assembly diagrams.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Illustration'\nGO\n", "output_text": "\nCREATE TABLE production.illustration (\n    illustrationid integer NOT NULL,\n    diagram xml,\n    modifieddate timestamp without time zone DEFAULT now() NOT NULL\n);\n\n\n--\n-- Name: TABLE illustration; Type: COMMENT; Schema: production; Owner: -\n--\n\nCOMMENT ON TABLE production.illustration IS 'Bicycle assembly diagrams.';\n\n\n--\n-- Name: COLUMN illustration.illustrationid; Type: COMMENT; Schema: production; Owner: -\n--\n\nCOMMENT ON COLUMN production.illustration.illustrationid IS 'Primary key for Illustration records.';\n\n\n--\n-- Name: COLUMN illustration.diagram; Type: COMMENT; Schema: production; Owner: -\n--\n\nCOMMENT ON COLUMN production.illustration.diagram IS 'Illustrations used in manufacturing instructions. Stored as XML.';"}
{"input_text": "convert following DDL/DML code from MSSQL to Postgresql \nUSE [adventureworks]\nGO\n/****** Object:  Table [Production].[Location]    Script Date: 2/3/24 12:02:57 AM ******/\nSET ANSI_NULLS ON\nGO\nSET QUOTED_IDENTIFIER ON\nGO\nCREATE TABLE [Production].[Location](\n\t[LocationID] [smallint] IDENTITY(1,1) NOT NULL,\n\t[Name] [dbo].[Name] NOT NULL,\n\t[CostRate] [smallmoney] NOT NULL,\n\t[Availability] [decimal](8, 2) NOT NULL,\n\t[ModifiedDate] [datetime] NOT NULL,\n CONSTRAINT [PK_Location_LocationID] PRIMARY KEY CLUSTERED \n(\n\t[LocationID] ASC\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]\n) ON [PRIMARY]\nGO\nSET ANSI_PADDING ON\nGO\n/****** Object:  Index [AK_Location_Name]    Script Date: 2/3/24 12:03:02 AM ******/\nCREATE UNIQUE NONCLUSTERED INDEX [AK_Location_Name] ON [Production].[Location]\n(\n\t[Name] ASC\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]\nGO\nALTER TABLE [Production].[Location] ADD  CONSTRAINT [DF_Location_CostRate]  DEFAULT ((0.00)) FOR [CostRate]\nGO\nALTER TABLE [Production].[Location] ADD  CONSTRAINT [DF_Location_Availability]  DEFAULT ((0.00)) FOR [Availability]\nGO\nALTER TABLE [Production].[Location] ADD  CONSTRAINT [DF_Location_ModifiedDate]  DEFAULT (getdate()) FOR [ModifiedDate]\nGO\nALTER TABLE [Production].[Location]  WITH CHECK ADD  CONSTRAINT [CK_Location_Availability] CHECK  (([Availability]>=(0.00)))\nGO\nALTER TABLE [Production].[Location] CHECK CONSTRAINT [CK_Location_Availability]\nGO\nALTER TABLE [Production].[Location]  WITH CHECK ADD  CONSTRAINT [CK_Location_CostRate] CHECK  (([CostRate]>=(0.00)))\nGO\nALTER TABLE [Production].[Location] CHECK CONSTRAINT [CK_Location_CostRate]\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key for Location records.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Location', @level2type=N'COLUMN',@level2name=N'LocationID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Location description.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Location', @level2type=N'COLUMN',@level2name=N'Name'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Standard hourly cost of the manufacturing location.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Location', @level2type=N'COLUMN',@level2name=N'CostRate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of 0.0' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Location', @level2type=N'CONSTRAINT',@level2name=N'DF_Location_CostRate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Work capacity (in hours) of the manufacturing location.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Location', @level2type=N'COLUMN',@level2name=N'Availability'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of 0.00' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Location', @level2type=N'CONSTRAINT',@level2name=N'DF_Location_Availability'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Date and time the record was last updated.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Location', @level2type=N'COLUMN',@level2name=N'ModifiedDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of GETDATE()' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Location', @level2type=N'CONSTRAINT',@level2name=N'DF_Location_ModifiedDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key (clustered) constraint' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Location', @level2type=N'CONSTRAINT',@level2name=N'PK_Location_LocationID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Unique nonclustered index.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Location', @level2type=N'INDEX',@level2name=N'AK_Location_Name'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Product inventory and manufacturing locations.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Location'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Check constraint [Availability] >= (0.00)' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Location', @level2type=N'CONSTRAINT',@level2name=N'CK_Location_Availability'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Check constraint [CostRate] >= (0.00)' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Location', @level2type=N'CONSTRAINT',@level2name=N'CK_Location_CostRate'\nGO", "output_text": "CREATE TABLE production.location (\n    locationid integer NOT NULL,\n    name public.\"Name\" NOT NULL,\n    costrate numeric DEFAULT 0.00 NOT NULL,\n    availability numeric(8,2) DEFAULT 0.00 NOT NULL,\n    modifieddate timestamp without time zone DEFAULT now() NOT NULL,\n    CONSTRAINT \"CK_Location_Availability\" CHECK ((availability >= 0.00)),\n    CONSTRAINT \"CK_Location_CostRate\" CHECK ((costrate >= 0.00))\n);\n\n\n--\n-- Name: TABLE location; Type: COMMENT; Schema: production; Owner: -\n--\n\nCOMMENT ON TABLE production.location IS 'Product inventory and manufacturing locations.';\n\n\n--\n-- Name: COLUMN location.locationid; Type: COMMENT; Schema: production; Owner: -\n--\n\nCOMMENT ON COLUMN production.location.locationid IS 'Primary key for Location records.';\n\n\n--\n-- Name: COLUMN location.name; Type: COMMENT; Schema: production; Owner: -\n--\n\nCOMMENT ON COLUMN production.location.name IS 'Location description.';\n\n\n--\n-- Name: COLUMN location.costrate; Type: COMMENT; Schema: production; Owner: -\n--\n\nCOMMENT ON COLUMN production.location.costrate IS 'Standard hourly cost of the manufacturing location.';\n\n\n--\n-- Name: COLUMN location.availability; Type: COMMENT; Schema: production; Owner: -\n--\n\nCOMMENT ON COLUMN production.location.availability IS 'Work capacity (in hours) of the manufacturing location.';"}
{"input_text": "convert following DDL/DML code from MSSQL to Postgresql \nUSE [adventureworks]\nGO\n/****** Object:  Table [Production].[Product]    Script Date: 2/3/24 12:02:54 AM ******/\nSET ANSI_NULLS ON\nGO\nSET QUOTED_IDENTIFIER ON\nGO\nCREATE TABLE [Production].[Product](\n\t[ProductID] [int] IDENTITY(1,1) NOT NULL,\n\t[Name] [dbo].[Name] NOT NULL,\n\t[ProductNumber] [nvarchar](25) NOT NULL,\n\t[MakeFlag] [dbo].[Flag] NOT NULL,\n\t[FinishedGoodsFlag] [dbo].[Flag] NOT NULL,\n\t[Color] [nvarchar](15) NULL,\n\t[SafetyStockLevel] [smallint] NOT NULL,\n\t[ReorderPoint] [smallint] NOT NULL,\n\t[StandardCost] [money] NOT NULL,\n\t[ListPrice] [money] NOT NULL,\n\t[Size] [nvarchar](5) NULL,\n\t[SizeUnitMeasureCode] [nchar](3) NULL,\n\t[WeightUnitMeasureCode] [nchar](3) NULL,\n\t[Weight] [decimal](8, 2) NULL,\n\t[DaysToManufacture] [int] NOT NULL,\n\t[ProductLine] [nchar](2) NULL,\n\t[Class] [nchar](2) NULL,\n\t[Style] [nchar](2) NULL,\n\t[ProductSubcategoryID] [int] NULL,\n\t[ProductModelID] [int] NULL,\n\t[SellStartDate] [datetime] NOT NULL,\n\t[SellEndDate] [datetime] NULL,\n\t[DiscontinuedDate] [datetime] NULL,\n\t[rowguid] [uniqueidentifier] ROWGUIDCOL  NOT NULL,\n\t[ModifiedDate] [datetime] NOT NULL,\n CONSTRAINT [PK_Product_ProductID] PRIMARY KEY CLUSTERED \n(\n\t[ProductID] ASC\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]\n) ON [PRIMARY]\nGO\nSET ANSI_PADDING ON\nGO\n/****** Object:  Index [AK_Product_Name]    Script Date: 2/3/24 12:03:02 AM ******/\nCREATE UNIQUE NONCLUSTERED INDEX [AK_Product_Name] ON [Production].[Product]\n(\n\t[Name] ASC\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]\nGO\nSET ANSI_PADDING ON\nGO\n/****** Object:  Index [AK_Product_ProductNumber]    Script Date: 2/3/24 12:03:02 AM ******/\nCREATE UNIQUE NONCLUSTERED INDEX [AK_Product_ProductNumber] ON [Production].[Product]\n(\n\t[ProductNumber] ASC\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]\nGO\n/****** Object:  Index [AK_Product_rowguid]    Script Date: 2/3/24 12:03:02 AM ******/\nCREATE UNIQUE NONCLUSTERED INDEX [AK_Product_rowguid] ON [Production].[Product]\n(\n\t[rowguid] ASC\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]\nGO\nALTER TABLE [Production].[Product] ADD  CONSTRAINT [DF_Product_MakeFlag]  DEFAULT ((1)) FOR [MakeFlag]\nGO\nALTER TABLE [Production].[Product] ADD  CONSTRAINT [DF_Product_FinishedGoodsFlag]  DEFAULT ((1)) FOR [FinishedGoodsFlag]\nGO\nALTER TABLE [Production].[Product] ADD  CONSTRAINT [DF_Product_rowguid]  DEFAULT (newid()) FOR [rowguid]\nGO\nALTER TABLE [Production].[Product] ADD  CONSTRAINT [DF_Product_ModifiedDate]  DEFAULT (getdate()) FOR [ModifiedDate]\nGO\nALTER TABLE [Production].[Product]  WITH CHECK ADD  CONSTRAINT [FK_Product_ProductModel_ProductModelID] FOREIGN KEY([ProductModelID])\nREFERENCES [Production].[ProductModel] ([ProductModelID])\nGO\nALTER TABLE [Production].[Product] CHECK CONSTRAINT [FK_Product_ProductModel_ProductModelID]\nGO\nALTER TABLE [Production].[Product]  WITH CHECK ADD  CONSTRAINT [FK_Product_ProductSubcategory_ProductSubcategoryID] FOREIGN KEY([ProductSubcategoryID])\nREFERENCES [Production].[ProductSubcategory] ([ProductSubcategoryID])\nGO\nALTER TABLE [Production].[Product] CHECK CONSTRAINT [FK_Product_ProductSubcategory_ProductSubcategoryID]\nGO\nALTER TABLE [Production].[Product]  WITH CHECK ADD  CONSTRAINT [FK_Product_UnitMeasure_SizeUnitMeasureCode] FOREIGN KEY([SizeUnitMeasureCode])\nREFERENCES [Production].[UnitMeasure] ([UnitMeasureCode])\nGO\nALTER TABLE [Production].[Product] CHECK CONSTRAINT [FK_Product_UnitMeasure_SizeUnitMeasureCode]\nGO\nALTER TABLE [Production].[Product]  WITH CHECK ADD  CONSTRAINT [FK_Product_UnitMeasure_WeightUnitMeasureCode] FOREIGN KEY([WeightUnitMeasureCode])\nREFERENCES [Production].[UnitMeasure] ([UnitMeasureCode])\nGO\nALTER TABLE [Production].[Product] CHECK CONSTRAINT [FK_Product_UnitMeasure_WeightUnitMeasureCode]\nGO\nALTER TABLE [Production].[Product]  WITH CHECK ADD  CONSTRAINT [CK_Product_Class] CHECK  ((upper([Class])='H' OR upper([Class])='M' OR upper([Class])='L' OR [Class] IS NULL))\nGO\nALTER TABLE [Production].[Product] CHECK CONSTRAINT [CK_Product_Class]\nGO\nALTER TABLE [Production].[Product]  WITH CHECK ADD  CONSTRAINT [CK_Product_DaysToManufacture] CHECK  (([DaysToManufacture]>=(0)))\nGO\nALTER TABLE [Production].[Product] CHECK CONSTRAINT [CK_Product_DaysToManufacture]\nGO\nALTER TABLE [Production].[Product]  WITH CHECK ADD  CONSTRAINT [CK_Product_ListPrice] CHECK  (([ListPrice]>=(0.00)))\nGO\nALTER TABLE [Production].[Product] CHECK CONSTRAINT [CK_Product_ListPrice]\nGO\nALTER TABLE [Production].[Product]  WITH CHECK ADD  CONSTRAINT [CK_Product_ProductLine] CHECK  ((upper([ProductLine])='R' OR upper([ProductLine])='M' OR upper([ProductLine])='T' OR upper([ProductLine])='S' OR [ProductLine] IS NULL))\nGO\nALTER TABLE [Production].[Product] CHECK CONSTRAINT [CK_Product_ProductLine]\nGO\nALTER TABLE [Production].[Product]  WITH CHECK ADD  CONSTRAINT [CK_Product_ReorderPoint] CHECK  (([ReorderPoint]>(0)))\nGO\nALTER TABLE [Production].[Product] CHECK CONSTRAINT [CK_Product_ReorderPoint]\nGO\nALTER TABLE [Production].[Product]  WITH CHECK ADD  CONSTRAINT [CK_Product_SafetyStockLevel] CHECK  (([SafetyStockLevel]>(0)))\nGO\nALTER TABLE [Production].[Product] CHECK CONSTRAINT [CK_Product_SafetyStockLevel]\nGO\nALTER TABLE [Production].[Product]  WITH CHECK ADD  CONSTRAINT [CK_Product_SellEndDate] CHECK  (([SellEndDate]>=[SellStartDate] OR [SellEndDate] IS NULL))\nGO\nALTER TABLE [Production].[Product] CHECK CONSTRAINT [CK_Product_SellEndDate]\nGO\nALTER TABLE [Production].[Product]  WITH CHECK ADD  CONSTRAINT [CK_Product_StandardCost] CHECK  (([StandardCost]>=(0.00)))\nGO\nALTER TABLE [Production].[Product] CHECK CONSTRAINT [CK_Product_StandardCost]\nGO\nALTER TABLE [Production].[Product]  WITH CHECK ADD  CONSTRAINT [CK_Product_Style] CHECK  ((upper([Style])='U' OR upper([Style])='M' OR upper([Style])='W' OR [Style] IS NULL))\nGO\nALTER TABLE [Production].[Product] CHECK CONSTRAINT [CK_Product_Style]\nGO\nALTER TABLE [Production].[Product]  WITH CHECK ADD  CONSTRAINT [CK_Product_Weight] CHECK  (([Weight]>(0.00)))\nGO\nALTER TABLE [Production].[Product] CHECK CONSTRAINT [CK_Product_Weight]\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key for Product records.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Product', @level2type=N'COLUMN',@level2name=N'ProductID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Name of the product.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Product', @level2type=N'COLUMN',@level2name=N'Name'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Unique product identification number.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Product', @level2type=N'COLUMN',@level2name=N'ProductNumber'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'0 = Product is purchased, 1 = Product is manufactured in-house.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Product', @level2type=N'COLUMN',@level2name=N'MakeFlag'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of  1' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Product', @level2type=N'CONSTRAINT',@level2name=N'DF_Product_MakeFlag'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'0 = Product is not a salable item. 1 = Product is salable.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Product', @level2type=N'COLUMN',@level2name=N'FinishedGoodsFlag'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of  1' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Product', @level2type=N'CONSTRAINT',@level2name=N'DF_Product_FinishedGoodsFlag'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Product color.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Product', @level2type=N'COLUMN',@level2name=N'Color'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Minimum inventory quantity. ' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Product', @level2type=N'COLUMN',@level2name=N'SafetyStockLevel'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Inventory level that triggers a purchase order or work order. ' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Product', @level2type=N'COLUMN',@level2name=N'ReorderPoint'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Standard cost of the product.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Product', @level2type=N'COLUMN',@level2name=N'StandardCost'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Selling price.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Product', @level2type=N'COLUMN',@level2name=N'ListPrice'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Product size.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Product', @level2type=N'COLUMN',@level2name=N'Size'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Unit of measure for Size column.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Product', @level2type=N'COLUMN',@level2name=N'SizeUnitMeasureCode'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Unit of measure for Weight column.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Product', @level2type=N'COLUMN',@level2name=N'WeightUnitMeasureCode'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Product weight.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Product', @level2type=N'COLUMN',@level2name=N'Weight'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Number of days required to manufacture the product.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Product', @level2type=N'COLUMN',@level2name=N'DaysToManufacture'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'R = Road, M = Mountain, T = Touring, S = Standard' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Product', @level2type=N'COLUMN',@level2name=N'ProductLine'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'H = High, M = Medium, L = Low' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Product', @level2type=N'COLUMN',@level2name=N'Class'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'W = Womens, M = Mens, U = Universal' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Product', @level2type=N'COLUMN',@level2name=N'Style'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Product is a member of this product subcategory. Foreign key to ProductSubCategory.ProductSubCategoryID. ' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Product', @level2type=N'COLUMN',@level2name=N'ProductSubcategoryID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Product is a member of this product model. Foreign key to ProductModel.ProductModelID.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Product', @level2type=N'COLUMN',@level2name=N'ProductModelID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Date the product was available for sale.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Product', @level2type=N'COLUMN',@level2name=N'SellStartDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Date the product was no longer available for sale.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Product', @level2type=N'COLUMN',@level2name=N'SellEndDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Date the product was discontinued.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Product', @level2type=N'COLUMN',@level2name=N'DiscontinuedDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Product', @level2type=N'COLUMN',@level2name=N'rowguid'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of NEWID()' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Product', @level2type=N'CONSTRAINT',@level2name=N'DF_Product_rowguid'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Date and time the record was last updated.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Product', @level2type=N'COLUMN',@level2name=N'ModifiedDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of GETDATE()' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Product', @level2type=N'CONSTRAINT',@level2name=N'DF_Product_ModifiedDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key (clustered) constraint' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Product', @level2type=N'CONSTRAINT',@level2name=N'PK_Product_ProductID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Unique nonclustered index.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Product', @level2type=N'INDEX',@level2name=N'AK_Product_Name'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Unique nonclustered index.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Product', @level2type=N'INDEX',@level2name=N'AK_Product_ProductNumber'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Unique nonclustered index. Used to support replication samples.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Product', @level2type=N'INDEX',@level2name=N'AK_Product_rowguid'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Products sold or used in the manfacturing of sold products.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Product'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key constraint referencing ProductModel.ProductModelID.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Product', @level2type=N'CONSTRAINT',@level2name=N'FK_Product_ProductModel_ProductModelID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key constraint referencing ProductSubcategory.ProductSubcategoryID.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Product', @level2type=N'CONSTRAINT',@level2name=N'FK_Product_ProductSubcategory_ProductSubcategoryID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key constraint referencing UnitMeasure.UnitMeasureCode.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Product', @level2type=N'CONSTRAINT',@level2name=N'FK_Product_UnitMeasure_SizeUnitMeasureCode'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key constraint referencing UnitMeasure.UnitMeasureCode.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Product', @level2type=N'CONSTRAINT',@level2name=N'FK_Product_UnitMeasure_WeightUnitMeasureCode'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Check constraint [Class]=''h'' OR [Class]=''m'' OR [Class]=''l'' OR [Class]=''H'' OR [Class]=''M'' OR [Class]=''L'' OR [Class] IS NULL' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Product', @level2type=N'CONSTRAINT',@level2name=N'CK_Product_Class'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Check constraint [DaysToManufacture] >= (0)' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Product', @level2type=N'CONSTRAINT',@level2name=N'CK_Product_DaysToManufacture'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Check constraint [ListPrice] >= (0.00)' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Product', @level2type=N'CONSTRAINT',@level2name=N'CK_Product_ListPrice'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Check constraint [ProductLine]=''r'' OR [ProductLine]=''m'' OR [ProductLine]=''t'' OR [ProductLine]=''s'' OR [ProductLine]=''R'' OR [ProductLine]=''M'' OR [ProductLine]=''T'' OR [ProductLine]=''S'' OR [ProductLine] IS NULL' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Product', @level2type=N'CONSTRAINT',@level2name=N'CK_Product_ProductLine'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Check constraint [ReorderPoint] > (0)' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Product', @level2type=N'CONSTRAINT',@level2name=N'CK_Product_ReorderPoint'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Check constraint [SafetyStockLevel] > (0)' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Product', @level2type=N'CONSTRAINT',@level2name=N'CK_Product_SafetyStockLevel'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Check constraint [SellEndDate] >= [SellStartDate] OR [SellEndDate] IS NULL' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Product', @level2type=N'CONSTRAINT',@level2name=N'CK_Product_SellEndDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Check constraint [SafetyStockLevel] > (0)' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Product', @level2type=N'CONSTRAINT',@level2name=N'CK_Product_StandardCost'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Check constraint [Style]=''u'' OR [Style]=''m'' OR [Style]=''w'' OR [Style]=''U'' OR [Style]=''M'' OR [Style]=''W'' OR [Style] IS NULL' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Product', @level2type=N'CONSTRAINT',@level2name=N'CK_Product_Style'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Check constraint [Weight] > (0.00)' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Product', @level2type=N'CONSTRAINT',@level2name=N'CK_Product_Weight'\nGO", "output_text": "CREATE TABLE production.product (\n    productid integer NOT NULL,\n    name public.\"Name\" NOT NULL,\n    productnumber character varying(25) NOT NULL,\n    makeflag public.\"Flag\" DEFAULT true NOT NULL,\n    finishedgoodsflag public.\"Flag\" DEFAULT true NOT NULL,\n    color character varying(15),\n    safetystocklevel smallint NOT NULL,\n    reorderpoint smallint NOT NULL,\n    standardcost numeric NOT NULL,\n    listprice numeric NOT NULL,\n    size character varying(5),\n    sizeunitmeasurecode character(3),\n    weightunitmeasurecode character(3),\n    weight numeric(8,2),\n    daystomanufacture integer NOT NULL,\n    productline character(2),\n    class character(2),\n    style character(2),\n    productsubcategoryid integer,\n    productmodelid integer,\n    sellstartdate timestamp without time zone NOT NULL,\n    sellenddate timestamp without time zone,\n    discontinueddate timestamp without time zone,\n    rowguid uuid DEFAULT public.uuid_generate_v1() NOT NULL,\n    modifieddate timestamp without time zone DEFAULT now() NOT NULL,\n    CONSTRAINT \"CK_Product_Class\" CHECK (((upper((class)::text) = ANY (ARRAY['L'::text, 'M'::text, 'H'::text])) OR (class IS NULL))),\n    CONSTRAINT \"CK_Product_DaysToManufacture\" CHECK ((daystomanufacture >= 0)),\n    CONSTRAINT \"CK_Product_ListPrice\" CHECK ((listprice >= 0.00)),\n    CONSTRAINT \"CK_Product_ProductLine\" CHECK (((upper((productline)::text) = ANY (ARRAY['S'::text, 'T'::text, 'M'::text, 'R'::text])) OR (productline IS NULL))),\n    CONSTRAINT \"CK_Product_ReorderPoint\" CHECK ((reorderpoint > 0)),\n    CONSTRAINT \"CK_Product_SafetyStockLevel\" CHECK ((safetystocklevel > 0)),\n    CONSTRAINT \"CK_Product_SellEndDate\" CHECK (((sellenddate >= sellstartdate) OR (sellenddate IS NULL))),\n    CONSTRAINT \"CK_Product_StandardCost\" CHECK ((standardcost >= 0.00)),\n    CONSTRAINT \"CK_Product_Style\" CHECK (((upper((style)::text) = ANY (ARRAY['W'::text, 'M'::text, 'U'::text])) OR (style IS NULL))),\n    CONSTRAINT \"CK_Product_Weight\" CHECK ((weight > 0.00))\n);\n\n\n--\n-- Name: TABLE product; Type: COMMENT; Schema: production; Owner: -\n--\n\nCOMMENT ON TABLE production.product IS 'Products sold or used in the manfacturing of sold products.';\n\n\n--\n-- Name: COLUMN product.productid; Type: COMMENT; Schema: production; Owner: -\n--\n\nCOMMENT ON COLUMN production.product.productid IS 'Primary key for Product records.';\n\n\n--\n-- Name: COLUMN product.name; Type: COMMENT; Schema: production; Owner: -\n--\n\nCOMMENT ON COLUMN production.product.name IS 'Name of the product.';\n\n\n--\n-- Name: COLUMN product.productnumber; Type: COMMENT; Schema: production; Owner: -\n--\n\nCOMMENT ON COLUMN production.product.productnumber IS 'Unique product identification number.';\n\n\n--\n-- Name: COLUMN product.makeflag; Type: COMMENT; Schema: production; Owner: -\n--\n\nCOMMENT ON COLUMN production.product.makeflag IS '0 = Product is purchased, 1 = Product is manufactured in-house.';\n\n\n--\n-- Name: COLUMN product.finishedgoodsflag; Type: COMMENT; Schema: production; Owner: -\n--\n\nCOMMENT ON COLUMN production.product.finishedgoodsflag IS '0 = Product is not a salable item. 1 = Product is salable.';\n\n\n--\n-- Name: COLUMN product.color; Type: COMMENT; Schema: production; Owner: -\n--\n\nCOMMENT ON COLUMN production.product.color IS 'Product color.';\n\n\n--\n-- Name: COLUMN product.safetystocklevel; Type: COMMENT; Schema: production; Owner: -\n--\n\nCOMMENT ON COLUMN production.product.safetystocklevel IS 'Minimum inventory quantity.';\n\n\n--\n-- Name: COLUMN product.reorderpoint; Type: COMMENT; Schema: production; Owner: -\n--\n\nCOMMENT ON COLUMN production.product.reorderpoint IS 'Inventory level that triggers a purchase order or work order.';\n\n\n--\n-- Name: COLUMN product.standardcost; Type: COMMENT; Schema: production; Owner: -\n--\n\nCOMMENT ON COLUMN production.product.standardcost IS 'Standard cost of the product.';\n\n\n--\n-- Name: COLUMN product.listprice; Type: COMMENT; Schema: production; Owner: -\n--\n\nCOMMENT ON COLUMN production.product.listprice IS 'Selling price.';\n\n\n--\n-- Name: COLUMN product.size; Type: COMMENT; Schema: production; Owner: -\n--\n\nCOMMENT ON COLUMN production.product.size IS 'Product size.';\n\n\n--\n-- Name: COLUMN product.sizeunitmeasurecode; Type: COMMENT; Schema: production; Owner: -\n--\n\nCOMMENT ON COLUMN production.product.sizeunitmeasurecode IS 'Unit of measure for Size column.';\n\n\n--\n-- Name: COLUMN product.weightunitmeasurecode; Type: COMMENT; Schema: production; Owner: -\n--\n\nCOMMENT ON COLUMN production.product.weightunitmeasurecode IS 'Unit of measure for Weight column.';\n\n\n--\n-- Name: COLUMN product.weight; Type: COMMENT; Schema: production; Owner: -\n--\n\nCOMMENT ON COLUMN production.product.weight IS 'Product weight.';\n\n\n--\n-- Name: COLUMN product.daystomanufacture; Type: COMMENT; Schema: production; Owner: -\n--\n\nCOMMENT ON COLUMN production.product.daystomanufacture IS 'Number of days required to manufacture the product.';\n\n\n--\n-- Name: COLUMN product.productline; Type: COMMENT; Schema: production; Owner: -\n--\n\nCOMMENT ON COLUMN production.product.productline IS 'R = Road, M = Mountain, T = Touring, S = Standard';\n\n\n--\n-- Name: COLUMN product.class; Type: COMMENT; Schema: production; Owner: -\n--\n\nCOMMENT ON COLUMN production.product.class IS 'H = High, M = Medium, L = Low';\n\n\n--\n-- Name: COLUMN product.style; Type: COMMENT; Schema: production; Owner: -\n--\n\nCOMMENT ON COLUMN production.product.style IS 'W = Womens, M = Mens, U = Universal';\n\n\n--\n-- Name: COLUMN product.productsubcategoryid; Type: COMMENT; Schema: production; Owner: -\n--\n\nCOMMENT ON COLUMN production.product.productsubcategoryid IS 'Product is a member of this product subcategory. Foreign key to ProductSubCategory.ProductSubCategoryID.';\n\n\n--\n-- Name: COLUMN product.productmodelid; Type: COMMENT; Schema: production; Owner: -\n--\n\nCOMMENT ON COLUMN production.product.productmodelid IS 'Product is a member of this product model. Foreign key to ProductModel.ProductModelID.';\n\n\n--\n-- Name: COLUMN product.sellstartdate; Type: COMMENT; Schema: production; Owner: -\n--\n\nCOMMENT ON COLUMN production.product.sellstartdate IS 'Date the product was available for sale.';\n\n\n--\n-- Name: COLUMN product.sellenddate; Type: COMMENT; Schema: production; Owner: -\n--\n\nCOMMENT ON COLUMN production.product.sellenddate IS 'Date the product was no longer available for sale.';\n\n\n--\n-- Name: COLUMN product.discontinueddate; Type: COMMENT; Schema: production; Owner: -\n--\n\nCOMMENT ON COLUMN production.product.discontinueddate IS 'Date the product was discontinued.';"}
{"input_text": "convert following DDL/DML code from MSSQL to Postgresql \nUSE [adventureworks]\nGO\n/****** Object:  Table [Production].[ProductCategory]    Script Date: 2/3/24 12:02:57 AM ******/\nSET ANSI_NULLS ON\nGO\nSET QUOTED_IDENTIFIER ON\nGO\nCREATE TABLE [Production].[ProductCategory](\n\t[ProductCategoryID] [int] IDENTITY(1,1) NOT NULL,\n\t[Name] [dbo].[Name] NOT NULL,\n\t[rowguid] [uniqueidentifier] ROWGUIDCOL  NOT NULL,\n\t[ModifiedDate] [datetime] NOT NULL,\n CONSTRAINT [PK_ProductCategory_ProductCategoryID] PRIMARY KEY CLUSTERED \n(\n\t[ProductCategoryID] ASC\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]\n) ON [PRIMARY]\nGO\nSET ANSI_PADDING ON\nGO\n/****** Object:  Index [AK_ProductCategory_Name]    Script Date: 2/3/24 12:03:02 AM ******/\nCREATE UNIQUE NONCLUSTERED INDEX [AK_ProductCategory_Name] ON [Production].[ProductCategory]\n(\n\t[Name] ASC\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]\nGO\n/****** Object:  Index [AK_ProductCategory_rowguid]    Script Date: 2/3/24 12:03:02 AM ******/\nCREATE UNIQUE NONCLUSTERED INDEX [AK_ProductCategory_rowguid] ON [Production].[ProductCategory]\n(\n\t[rowguid] ASC\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]\nGO\nALTER TABLE [Production].[ProductCategory] ADD  CONSTRAINT [DF_ProductCategory_rowguid]  DEFAULT (newid()) FOR [rowguid]\nGO\nALTER TABLE [Production].[ProductCategory] ADD  CONSTRAINT [DF_ProductCategory_ModifiedDate]  DEFAULT (getdate()) FOR [ModifiedDate]\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key for ProductCategory records.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductCategory', @level2type=N'COLUMN',@level2name=N'ProductCategoryID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Category description.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductCategory', @level2type=N'COLUMN',@level2name=N'Name'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductCategory', @level2type=N'COLUMN',@level2name=N'rowguid'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of NEWID()()' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductCategory', @level2type=N'CONSTRAINT',@level2name=N'DF_ProductCategory_rowguid'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Date and time the record was last updated.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductCategory', @level2type=N'COLUMN',@level2name=N'ModifiedDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of GETDATE()' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductCategory', @level2type=N'CONSTRAINT',@level2name=N'DF_ProductCategory_ModifiedDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key (clustered) constraint' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductCategory', @level2type=N'CONSTRAINT',@level2name=N'PK_ProductCategory_ProductCategoryID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Unique nonclustered index.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductCategory', @level2type=N'INDEX',@level2name=N'AK_ProductCategory_Name'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Unique nonclustered index. Used to support replication samples.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductCategory', @level2type=N'INDEX',@level2name=N'AK_ProductCategory_rowguid'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'High-level product categorization.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductCategory'\nGO", "output_text": "CREATE TABLE production.productcategory (\n    productcategoryid integer NOT NULL,\n    name public.\"Name\" NOT NULL,\n    rowguid uuid DEFAULT public.uuid_generate_v1() NOT NULL,\n    modifieddate timestamp without time zone DEFAULT now() NOT NULL\n);\n\n\n--\n-- Name: TABLE productcategory; Type: COMMENT; Schema: production; Owner: -\n--\n\nCOMMENT ON TABLE production.productcategory IS 'High-level product categorization.';\n\n\n--\n-- Name: COLUMN productcategory.productcategoryid; Type: COMMENT; Schema: production; Owner: -\n--\n\nCOMMENT ON COLUMN production.productcategory.productcategoryid IS 'Primary key for ProductCategory records.';\n\n\n--\n-- Name: COLUMN productcategory.name; Type: COMMENT; Schema: production; Owner: -\n--\n\nCOMMENT ON COLUMN production.productcategory.name IS 'Category description.';"}
{"input_text": "convert following DDL/DML code from MSSQL to Postgresql \nUSE [adventureworks]\nGO\n/****** Object:  Table [Production].[ProductCostHistory]    Script Date: 2/3/24 12:02:57 AM ******/\nSET ANSI_NULLS ON\nGO\nSET QUOTED_IDENTIFIER ON\nGO\nCREATE TABLE [Production].[ProductCostHistory](\n\t[ProductID] [int] NOT NULL,\n\t[StartDate] [datetime] NOT NULL,\n\t[EndDate] [datetime] NULL,\n\t[StandardCost] [money] NOT NULL,\n\t[ModifiedDate] [datetime] NOT NULL,\n CONSTRAINT [PK_ProductCostHistory_ProductID_StartDate] PRIMARY KEY CLUSTERED \n(\n\t[ProductID] ASC,\n\t[StartDate] ASC\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]\n) ON [PRIMARY]\nGO\nALTER TABLE [Production].[ProductCostHistory] ADD  CONSTRAINT [DF_ProductCostHistory_ModifiedDate]  DEFAULT (getdate()) FOR [ModifiedDate]\nGO\nALTER TABLE [Production].[ProductCostHistory]  WITH CHECK ADD  CONSTRAINT [FK_ProductCostHistory_Product_ProductID] FOREIGN KEY([ProductID])\nREFERENCES [Production].[Product] ([ProductID])\nGO\nALTER TABLE [Production].[ProductCostHistory] CHECK CONSTRAINT [FK_ProductCostHistory_Product_ProductID]\nGO\nALTER TABLE [Production].[ProductCostHistory]  WITH CHECK ADD  CONSTRAINT [CK_ProductCostHistory_EndDate] CHECK  (([EndDate]>=[StartDate] OR [EndDate] IS NULL))\nGO\nALTER TABLE [Production].[ProductCostHistory] CHECK CONSTRAINT [CK_ProductCostHistory_EndDate]\nGO\nALTER TABLE [Production].[ProductCostHistory]  WITH CHECK ADD  CONSTRAINT [CK_ProductCostHistory_StandardCost] CHECK  (([StandardCost]>=(0.00)))\nGO\nALTER TABLE [Production].[ProductCostHistory] CHECK CONSTRAINT [CK_ProductCostHistory_StandardCost]\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Product identification number. Foreign key to Product.ProductID' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductCostHistory', @level2type=N'COLUMN',@level2name=N'ProductID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Product cost start date.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductCostHistory', @level2type=N'COLUMN',@level2name=N'StartDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Product cost end date.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductCostHistory', @level2type=N'COLUMN',@level2name=N'EndDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Standard cost of the product.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductCostHistory', @level2type=N'COLUMN',@level2name=N'StandardCost'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Date and time the record was last updated.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductCostHistory', @level2type=N'COLUMN',@level2name=N'ModifiedDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of GETDATE()' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductCostHistory', @level2type=N'CONSTRAINT',@level2name=N'DF_ProductCostHistory_ModifiedDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key (clustered) constraint' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductCostHistory', @level2type=N'CONSTRAINT',@level2name=N'PK_ProductCostHistory_ProductID_StartDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Changes in the cost of a product over time.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductCostHistory'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key constraint referencing Product.ProductID.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductCostHistory', @level2type=N'CONSTRAINT',@level2name=N'FK_ProductCostHistory_Product_ProductID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Check constraint [EndDate] >= [StartDate] OR [EndDate] IS NULL' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductCostHistory', @level2type=N'CONSTRAINT',@level2name=N'CK_ProductCostHistory_EndDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Check constraint [StandardCost] >= (0.00)' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductCostHistory', @level2type=N'CONSTRAINT',@level2name=N'CK_ProductCostHistory_StandardCost'\nGO", "output_text": "CREATE TABLE production.productcosthistory (\n    productid integer NOT NULL,\n    startdate timestamp without time zone NOT NULL,\n    enddate timestamp without time zone,\n    standardcost numeric NOT NULL,\n    modifieddate timestamp without time zone DEFAULT now() NOT NULL,\n    CONSTRAINT \"CK_ProductCostHistory_EndDate\" CHECK (((enddate >= startdate) OR (enddate IS NULL))),\n    CONSTRAINT \"CK_ProductCostHistory_StandardCost\" CHECK ((standardcost >= 0.00))\n);\n\n\n--\n-- Name: TABLE productcosthistory; Type: COMMENT; Schema: production; Owner: -\n--\n\nCOMMENT ON TABLE production.productcosthistory IS 'Changes in the cost of a product over time.';\n\n\n--\n-- Name: COLUMN productcosthistory.productid; Type: COMMENT; Schema: production; Owner: -\n--\n\nCOMMENT ON COLUMN production.productcosthistory.productid IS 'Product identification number. Foreign key to Product.ProductID';\n\n\n--\n-- Name: COLUMN productcosthistory.startdate; Type: COMMENT; Schema: production; Owner: -\n--\n\nCOMMENT ON COLUMN production.productcosthistory.startdate IS 'Product cost start date.';\n\n\n--\n-- Name: COLUMN productcosthistory.enddate; Type: COMMENT; Schema: production; Owner: -\n--\n\nCOMMENT ON COLUMN production.productcosthistory.enddate IS 'Product cost end date.';\n\n\n--\n-- Name: COLUMN productcosthistory.standardcost; Type: COMMENT; Schema: production; Owner: -\n--\n\nCOMMENT ON COLUMN production.productcosthistory.standardcost IS 'Standard cost of the product.';"}
{"input_text": "convert following DDL/DML code from MSSQL to Postgresql \nUSE [adventureworks]\nGO\n/****** Object:  Table [Production].[ProductDescription]    Script Date: 2/3/24 12:02:54 AM ******/\nSET ANSI_NULLS ON\nGO\nSET QUOTED_IDENTIFIER ON\nGO\nCREATE TABLE [Production].[ProductDescription](\n\t[ProductDescriptionID] [int] IDENTITY(1,1) NOT NULL,\n\t[Description] [nvarchar](400) NOT NULL,\n\t[rowguid] [uniqueidentifier] ROWGUIDCOL  NOT NULL,\n\t[ModifiedDate] [datetime] NOT NULL,\n CONSTRAINT [PK_ProductDescription_ProductDescriptionID] PRIMARY KEY CLUSTERED \n(\n\t[ProductDescriptionID] ASC\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]\n) ON [PRIMARY]\nGO\n/****** Object:  Index [AK_ProductDescription_rowguid]    Script Date: 2/3/24 12:03:02 AM ******/\nCREATE UNIQUE NONCLUSTERED INDEX [AK_ProductDescription_rowguid] ON [Production].[ProductDescription]\n(\n\t[rowguid] ASC\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]\nGO\nALTER TABLE [Production].[ProductDescription] ADD  CONSTRAINT [DF_ProductDescription_rowguid]  DEFAULT (newid()) FOR [rowguid]\nGO\nALTER TABLE [Production].[ProductDescription] ADD  CONSTRAINT [DF_ProductDescription_ModifiedDate]  DEFAULT (getdate()) FOR [ModifiedDate]\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key for ProductDescription records.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductDescription', @level2type=N'COLUMN',@level2name=N'ProductDescriptionID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Description of the product.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductDescription', @level2type=N'COLUMN',@level2name=N'Description'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductDescription', @level2type=N'COLUMN',@level2name=N'rowguid'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of NEWID()' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductDescription', @level2type=N'CONSTRAINT',@level2name=N'DF_ProductDescription_rowguid'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Date and time the record was last updated.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductDescription', @level2type=N'COLUMN',@level2name=N'ModifiedDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of GETDATE()' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductDescription', @level2type=N'CONSTRAINT',@level2name=N'DF_ProductDescription_ModifiedDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key (clustered) constraint' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductDescription', @level2type=N'CONSTRAINT',@level2name=N'PK_ProductDescription_ProductDescriptionID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Unique nonclustered index. Used to support replication samples.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductDescription', @level2type=N'INDEX',@level2name=N'AK_ProductDescription_rowguid'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Product descriptions in several languages.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductDescription'\nGO", "output_text": "CREATE TABLE production.productdescription (\n    productdescriptionid integer NOT NULL,\n    description character varying(400) NOT NULL,\n    rowguid uuid DEFAULT public.uuid_generate_v1() NOT NULL,\n    modifieddate timestamp without time zone DEFAULT now() NOT NULL\n);\n\n\n--\n-- Name: TABLE productdescription; Type: COMMENT; Schema: production; Owner: -\n--\n\nCOMMENT ON TABLE production.productdescription IS 'Product descriptions in several languages.';\n\n\n--\n-- Name: COLUMN productdescription.productdescriptionid; Type: COMMENT; Schema: production; Owner: -\n--\n\nCOMMENT ON COLUMN production.productdescription.productdescriptionid IS 'Primary key for ProductDescription records.';\n\n\n--\n-- Name: COLUMN productdescription.description; Type: COMMENT; Schema: production; Owner: -\n--\n\nCOMMENT ON COLUMN production.productdescription.description IS 'Description of the product.';"}
{"input_text": "convert following DDL/DML code from MSSQL to Postgresql \nUSE [adventureworks]\nGO\n/****** Object:  Table [Production].[ProductDocument]    Script Date: 2/3/24 12:02:57 AM ******/\nSET ANSI_NULLS ON\nGO\nSET QUOTED_IDENTIFIER ON\nGO\nCREATE TABLE [Production].[ProductDocument](\n\t[ProductID] [int] NOT NULL,\n\t[DocumentNode] [hierarchyid] NOT NULL,\n\t[ModifiedDate] [datetime] NOT NULL,\n CONSTRAINT [PK_ProductDocument_ProductID_DocumentNode] PRIMARY KEY CLUSTERED \n(\n\t[ProductID] ASC,\n\t[DocumentNode] ASC\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]\n) ON [PRIMARY]\nGO\nALTER TABLE [Production].[ProductDocument] ADD  CONSTRAINT [DF_ProductDocument_ModifiedDate]  DEFAULT (getdate()) FOR [ModifiedDate]\nGO\nALTER TABLE [Production].[ProductDocument]  WITH CHECK ADD  CONSTRAINT [FK_ProductDocument_Document_DocumentNode] FOREIGN KEY([DocumentNode])\nREFERENCES [Production].[Document] ([DocumentNode])\nGO\nALTER TABLE [Production].[ProductDocument] CHECK CONSTRAINT [FK_ProductDocument_Document_DocumentNode]\nGO\nALTER TABLE [Production].[ProductDocument]  WITH CHECK ADD  CONSTRAINT [FK_ProductDocument_Product_ProductID] FOREIGN KEY([ProductID])\nREFERENCES [Production].[Product] ([ProductID])\nGO\nALTER TABLE [Production].[ProductDocument] CHECK CONSTRAINT [FK_ProductDocument_Product_ProductID]\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Product identification number. Foreign key to Product.ProductID.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductDocument', @level2type=N'COLUMN',@level2name=N'ProductID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Document identification number. Foreign key to Document.DocumentNode.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductDocument', @level2type=N'COLUMN',@level2name=N'DocumentNode'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Date and time the record was last updated.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductDocument', @level2type=N'COLUMN',@level2name=N'ModifiedDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of GETDATE()' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductDocument', @level2type=N'CONSTRAINT',@level2name=N'DF_ProductDocument_ModifiedDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key (clustered) constraint' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductDocument', @level2type=N'CONSTRAINT',@level2name=N'PK_ProductDocument_ProductID_DocumentNode'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Cross-reference table mapping products to related product documents.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductDocument'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key constraint referencing Document.DocumentNode.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductDocument', @level2type=N'CONSTRAINT',@level2name=N'FK_ProductDocument_Document_DocumentNode'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key constraint referencing Product.ProductID.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductDocument', @level2type=N'CONSTRAINT',@level2name=N'FK_ProductDocument_Product_ProductID'\nGO", "output_text": "CREATE TABLE production.productdocument (\n    productid integer NOT NULL,\n    modifieddate timestamp without time zone DEFAULT now() NOT NULL,\n    documentnode character varying DEFAULT '/'::character varying NOT NULL\n);\n\n\n--\n-- Name: TABLE productdocument; Type: COMMENT; Schema: production; Owner: -\n--\n\nCOMMENT ON TABLE production.productdocument IS 'Cross-reference table mapping products to related product documents.';\n\n\n--\n-- Name: COLUMN productdocument.productid; Type: COMMENT; Schema: production; Owner: -\n--\n\nCOMMENT ON COLUMN production.productdocument.productid IS 'Product identification number. Foreign key to Product.ProductID.';\n\n\n--\n-- Name: COLUMN productdocument.documentnode; Type: COMMENT; Schema: production; Owner: -\n--\n\nCOMMENT ON COLUMN production.productdocument.documentnode IS 'Document identification number. Foreign key to Document.DocumentNode.';"}
{"input_text": "convert following DDL/DML code from MSSQL to Postgresql \nUSE [adventureworks]\nGO\n/****** Object:  Table [Production].[ProductInventory]    Script Date: 2/3/24 12:02:57 AM ******/\nSET ANSI_NULLS ON\nGO\nSET QUOTED_IDENTIFIER ON\nGO\nCREATE TABLE [Production].[ProductInventory](\n        [ProductID] [int] NOT NULL,\n        [LocationID] [smallint] NOT NULL,\n        [Shelf] [nvarchar](10) NOT NULL,\n        [Bin] [tinyint] NOT NULL,\n        [Quantity] [smallint] NOT NULL,\n        [rowguid] [uniqueidentifier] ROWGUIDCOL  NOT NULL,\n        [ModifiedDate] [datetime] NOT NULL,\n CONSTRAINT [PK_ProductInventory_ProductID_LocationID] PRIMARY KEY CLUSTERED \n(\n        [ProductID] ASC,\n        [LocationID] ASC\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]\n) ON [PRIMARY]\nGO\nALTER TABLE [Production].[ProductInventory] ADD  CONSTRAINT [DF_ProductInventory_Quantity]  DEFAULT ((0)) FOR [Quantity]\nGO\nALTER TABLE [Production].[ProductInventory] ADD  CONSTRAINT [DF_ProductInventory_rowguid]  DEFAULT (newid()) FOR [rowguid]\nGO\nALTER TABLE [Production].[ProductInventory] ADD  CONSTRAINT [DF_ProductInventory_ModifiedDate]  DEFAULT (getdate()) FOR [ModifiedDate]\nGO\nALTER TABLE [Production].[ProductInventory]  WITH CHECK ADD  CONSTRAINT [FK_ProductInventory_Location_LocationID] FOREIGN KEY([LocationID])\nREFERENCES [Production].[Location] ([LocationID])\nGO\nALTER TABLE [Production].[ProductInventory] CHECK CONSTRAINT [FK_ProductInventory_Location_LocationID]\nGO\nALTER TABLE [Production].[ProductInventory]  WITH CHECK ADD  CONSTRAINT [FK_ProductInventory_Product_ProductID] FOREIGN KEY([ProductID])\nREFERENCES [Production].[Product] ([ProductID])\nGO\nALTER TABLE [Production].[ProductInventory] CHECK CONSTRAINT [FK_ProductInventory_Product_ProductID]\nGO\nALTER TABLE [Production].[ProductInventory]  WITH CHECK ADD  CONSTRAINT [CK_ProductInventory_Bin] CHECK  (([Bin]>=(0) AND [Bin]<=(100)))\nGO\nALTER TABLE [Production].[ProductInventory] CHECK CONSTRAINT [CK_ProductInventory_Bin]\nGO\nALTER TABLE [Production].[ProductInventory]  WITH CHECK ADD  CONSTRAINT [CK_ProductInventory_Shelf] CHECK  (([Shelf] like '[A-Za-z]' OR [Shelf]='N/A'))\nGO\nALTER TABLE [Production].[ProductInventory] CHECK CONSTRAINT [CK_ProductInventory_Shelf]\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Product identification number. Foreign key to Product.ProductID.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductInventory', @level2type=N'COLUMN',@level2name=N'ProductID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Inventory location identification number. Foreign key to Location.LocationID. ' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductInventory', @level2type=N'COLUMN',@level2name=N'LocationID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Storage compartment within an inventory location.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductInventory', @level2type=N'COLUMN',@level2name=N'Shelf'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Storage container on a shelf in an inventory location.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductInventory', @level2type=N'COLUMN',@level2name=N'Bin'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Quantity of products in the inventory location.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductInventory', @level2type=N'COLUMN',@level2name=N'Quantity'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of 0' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductInventory', @level2type=N'CONSTRAINT',@level2name=N'DF_ProductInventory_Quantity'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductInventory', @level2type=N'COLUMN',@level2name=N'rowguid'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of NEWID()' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductInventory', @level2type=N'CONSTRAINT',@level2name=N'DF_ProductInventory_rowguid'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Date and time the record was last updated.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductInventory', @level2type=N'COLUMN',@level2name=N'ModifiedDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of GETDATE()' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductInventory', @level2type=N'CONSTRAINT',@level2name=N'DF_ProductInventory_ModifiedDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key (clustered) constraint' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductInventory', @level2type=N'CONSTRAINT',@level2name=N'PK_ProductInventory_ProductID_LocationID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Product inventory information.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductInventory'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key constraint referencing Location.LocationID.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductInventory', @level2type=N'CONSTRAINT',@level2name=N'FK_ProductInventory_Location_LocationID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key constraint referencing Product.ProductID.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductInventory', @level2type=N'CONSTRAINT',@level2name=N'FK_ProductInventory_Product_ProductID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Check constraint [Bin] BETWEEN (0) AND (100)' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductInventory', @level2type=N'CONSTRAINT',@level2name=N'CK_ProductInventory_Bin'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Check constraint [Shelf] like ''[A-Za-z]'' OR [Shelf]=''N/A''' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductInventory', @level2type=N'CONSTRAINT',@level2name=N'CK_ProductInventory_Shelf'\nGO", "output_text": "CREATE TABLE production.productinventory (\n    productid integer NOT NULL,\n    locationid smallint NOT NULL,\n    shelf character varying(10) NOT NULL,\n    bin smallint NOT NULL,\n    quantity smallint DEFAULT 0 NOT NULL,\n    rowguid uuid DEFAULT public.uuid_generate_v1() NOT NULL,\n    modifieddate timestamp without time zone DEFAULT now() NOT NULL,\n    CONSTRAINT \"CK_ProductInventory_Bin\" CHECK (((bin >= 0) AND (bin <= 100)))\n);\n\n\n--\n-- Name: TABLE productinventory; Type: COMMENT; Schema: production; Owner: -\n--\n\nCOMMENT ON TABLE production.productinventory IS 'Product inventory information.';\n\n\n--\n-- Name: COLUMN productinventory.productid; Type: COMMENT; Schema: production; Owner: -\n--\n\nCOMMENT ON COLUMN production.productinventory.productid IS 'Product identification number. Foreign key to Product.ProductID.';\n\n\n--\n-- Name: COLUMN productinventory.locationid; Type: COMMENT; Schema: production; Owner: -\n--\n\nCOMMENT ON COLUMN production.productinventory.locationid IS 'Inventory location identification number. Foreign key to Location.LocationID.';\n\n\n--\n-- Name: COLUMN productinventory.shelf; Type: COMMENT; Schema: production; Owner: -\n--\n\nCOMMENT ON COLUMN production.productinventory.shelf IS 'Storage compartment within an inventory location.';\n\n\n--\n-- Name: COLUMN productinventory.bin; Type: COMMENT; Schema: production; Owner: -\n--\n\nCOMMENT ON COLUMN production.productinventory.bin IS 'Storage container on a shelf in an inventory location.';\n\n\n--\n-- Name: COLUMN productinventory.quantity; Type: COMMENT; Schema: production; Owner: -\n--\n\nCOMMENT ON COLUMN production.productinventory.quantity IS 'Quantity of products in the inventory location.';"}
{"input_text": "convert following DDL/DML code from MSSQL to Postgresql \nUSE [adventureworks]\nGO\n/****** Object:  Table [Production].[ProductListPriceHistory]    Script Date: 2/3/24 12:02:58 AM ******/\nSET ANSI_NULLS ON\nGO\nSET QUOTED_IDENTIFIER ON\nGO\nCREATE TABLE [Production].[ProductListPriceHistory](\n\t[ProductID] [int] NOT NULL,\n\t[StartDate] [datetime] NOT NULL,\n\t[EndDate] [datetime] NULL,\n\t[ListPrice] [money] NOT NULL,\n\t[ModifiedDate] [datetime] NOT NULL,\n CONSTRAINT [PK_ProductListPriceHistory_ProductID_StartDate] PRIMARY KEY CLUSTERED \n(\n\t[ProductID] ASC,\n\t[StartDate] ASC\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]\n) ON [PRIMARY]\nGO\nALTER TABLE [Production].[ProductListPriceHistory] ADD  CONSTRAINT [DF_ProductListPriceHistory_ModifiedDate]  DEFAULT (getdate()) FOR [ModifiedDate]\nGO\nALTER TABLE [Production].[ProductListPriceHistory]  WITH CHECK ADD  CONSTRAINT [FK_ProductListPriceHistory_Product_ProductID] FOREIGN KEY([ProductID])\nREFERENCES [Production].[Product] ([ProductID])\nGO\nALTER TABLE [Production].[ProductListPriceHistory] CHECK CONSTRAINT [FK_ProductListPriceHistory_Product_ProductID]\nGO\nALTER TABLE [Production].[ProductListPriceHistory]  WITH CHECK ADD  CONSTRAINT [CK_ProductListPriceHistory_EndDate] CHECK  (([EndDate]>=[StartDate] OR [EndDate] IS NULL))\nGO\nALTER TABLE [Production].[ProductListPriceHistory] CHECK CONSTRAINT [CK_ProductListPriceHistory_EndDate]\nGO\nALTER TABLE [Production].[ProductListPriceHistory]  WITH CHECK ADD  CONSTRAINT [CK_ProductListPriceHistory_ListPrice] CHECK  (([ListPrice]>(0.00)))\nGO\nALTER TABLE [Production].[ProductListPriceHistory] CHECK CONSTRAINT [CK_ProductListPriceHistory_ListPrice]\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Product identification number. Foreign key to Product.ProductID' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductListPriceHistory', @level2type=N'COLUMN',@level2name=N'ProductID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'List price start date.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductListPriceHistory', @level2type=N'COLUMN',@level2name=N'StartDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'List price end date' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductListPriceHistory', @level2type=N'COLUMN',@level2name=N'EndDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Product list price.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductListPriceHistory', @level2type=N'COLUMN',@level2name=N'ListPrice'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Date and time the record was last updated.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductListPriceHistory', @level2type=N'COLUMN',@level2name=N'ModifiedDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of GETDATE()' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductListPriceHistory', @level2type=N'CONSTRAINT',@level2name=N'DF_ProductListPriceHistory_ModifiedDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key (clustered) constraint' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductListPriceHistory', @level2type=N'CONSTRAINT',@level2name=N'PK_ProductListPriceHistory_ProductID_StartDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Changes in the list price of a product over time.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductListPriceHistory'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key constraint referencing Product.ProductID.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductListPriceHistory', @level2type=N'CONSTRAINT',@level2name=N'FK_ProductListPriceHistory_Product_ProductID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Check constraint [EndDate] >= [StartDate] OR [EndDate] IS NULL' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductListPriceHistory', @level2type=N'CONSTRAINT',@level2name=N'CK_ProductListPriceHistory_EndDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Check constraint [ListPrice] > (0.00)' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductListPriceHistory', @level2type=N'CONSTRAINT',@level2name=N'CK_ProductListPriceHistory_ListPrice'\nGO", "output_text": "CREATE TABLE production.productlistpricehistory (\n    productid integer NOT NULL,\n    startdate timestamp without time zone NOT NULL,\n    enddate timestamp without time zone,\n    listprice numeric NOT NULL,\n    modifieddate timestamp without time zone DEFAULT now() NOT NULL,\n    CONSTRAINT \"CK_ProductListPriceHistory_EndDate\" CHECK (((enddate >= startdate) OR (enddate IS NULL))),\n    CONSTRAINT \"CK_ProductListPriceHistory_ListPrice\" CHECK ((listprice > 0.00))\n);\n\n\n--\n-- Name: TABLE productlistpricehistory; Type: COMMENT; Schema: production; Owner: -\n--\n\nCOMMENT ON TABLE production.productlistpricehistory IS 'Changes in the list price of a product over time.';\n\n\n--\n-- Name: COLUMN productlistpricehistory.productid; Type: COMMENT; Schema: production; Owner: -\n--\n\nCOMMENT ON COLUMN production.productlistpricehistory.productid IS 'Product identification number. Foreign key to Product.ProductID';\n\n\n--\n-- Name: COLUMN productlistpricehistory.startdate; Type: COMMENT; Schema: production; Owner: -\n--\n\nCOMMENT ON COLUMN production.productlistpricehistory.startdate IS 'List price start date.';\n\n\n--\n-- Name: COLUMN productlistpricehistory.enddate; Type: COMMENT; Schema: production; Owner: -\n--\n\nCOMMENT ON COLUMN production.productlistpricehistory.enddate IS 'List price end date';\n\n\n--\n-- Name: COLUMN productlistpricehistory.listprice; Type: COMMENT; Schema: production; Owner: -\n--\n\nCOMMENT ON COLUMN production.productlistpricehistory.listprice IS 'Product list price.';"}
{"input_text": "convert following DDL/DML code from MSSQL to Postgresql \nUSE [adventureworks]\nGO\n/****** Object:  Table [Production].[ProductModel]    Script Date: 2/3/24 12:02:54 AM ******/\nSET ANSI_NULLS ON\nGO\nSET QUOTED_IDENTIFIER ON\nGO\nCREATE TABLE [Production].[ProductModel](\n\t[ProductModelID] [int] IDENTITY(1,1) NOT NULL,\n\t[Name] [dbo].[Name] NOT NULL,\n\t[CatalogDescription] [xml](CONTENT [Production].[ProductDescriptionSchemaCollection]) NULL,\n\t[Instructions] [xml](CONTENT [Production].[ManuInstructionsSchemaCollection]) NULL,\n\t[rowguid] [uniqueidentifier] ROWGUIDCOL  NOT NULL,\n\t[ModifiedDate] [datetime] NOT NULL,\n CONSTRAINT [PK_ProductModel_ProductModelID] PRIMARY KEY CLUSTERED \n(\n\t[ProductModelID] ASC\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]\n) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]\nGO\nSET ANSI_PADDING ON\nGO\n/****** Object:  Index [AK_ProductModel_Name]    Script Date: 2/3/24 12:03:02 AM ******/\nCREATE UNIQUE NONCLUSTERED INDEX [AK_ProductModel_Name] ON [Production].[ProductModel]\n(\n\t[Name] ASC\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]\nGO\n/****** Object:  Index [AK_ProductModel_rowguid]    Script Date: 2/3/24 12:03:02 AM ******/\nCREATE UNIQUE NONCLUSTERED INDEX [AK_ProductModel_rowguid] ON [Production].[ProductModel]\n(\n\t[rowguid] ASC\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]\nGO\nSET ARITHABORT ON\nSET CONCAT_NULL_YIELDS_NULL ON\nSET QUOTED_IDENTIFIER ON\nSET ANSI_NULLS ON\nSET ANSI_PADDING ON\nSET ANSI_WARNINGS ON\nSET NUMERIC_ROUNDABORT OFF\nGO\n/****** Object:  Index [PXML_ProductModel_CatalogDescription]    Script Date: 2/3/24 12:03:02 AM ******/\nCREATE PRIMARY XML INDEX [PXML_ProductModel_CatalogDescription] ON [Production].[ProductModel]\n(\n\t[CatalogDescription]\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)\nGO\nSET ARITHABORT ON\nSET CONCAT_NULL_YIELDS_NULL ON\nSET QUOTED_IDENTIFIER ON\nSET ANSI_NULLS ON\nSET ANSI_PADDING ON\nSET ANSI_WARNINGS ON\nSET NUMERIC_ROUNDABORT OFF\nGO\n/****** Object:  Index [PXML_ProductModel_Instructions]    Script Date: 2/3/24 12:03:02 AM ******/\nCREATE PRIMARY XML INDEX [PXML_ProductModel_Instructions] ON [Production].[ProductModel]\n(\n\t[Instructions]\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)\nGO\nALTER TABLE [Production].[ProductModel] ADD  CONSTRAINT [DF_ProductModel_rowguid]  DEFAULT (newid()) FOR [rowguid]\nGO\nALTER TABLE [Production].[ProductModel] ADD  CONSTRAINT [DF_ProductModel_ModifiedDate]  DEFAULT (getdate()) FOR [ModifiedDate]\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key for ProductModel records.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductModel', @level2type=N'COLUMN',@level2name=N'ProductModelID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Product model description.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductModel', @level2type=N'COLUMN',@level2name=N'Name'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Detailed product catalog information in xml format.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductModel', @level2type=N'COLUMN',@level2name=N'CatalogDescription'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Manufacturing instructions in xml format.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductModel', @level2type=N'COLUMN',@level2name=N'Instructions'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductModel', @level2type=N'COLUMN',@level2name=N'rowguid'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of NEWID()' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductModel', @level2type=N'CONSTRAINT',@level2name=N'DF_ProductModel_rowguid'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Date and time the record was last updated.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductModel', @level2type=N'COLUMN',@level2name=N'ModifiedDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of GETDATE()' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductModel', @level2type=N'CONSTRAINT',@level2name=N'DF_ProductModel_ModifiedDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key (clustered) constraint' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductModel', @level2type=N'CONSTRAINT',@level2name=N'PK_ProductModel_ProductModelID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Unique nonclustered index.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductModel', @level2type=N'INDEX',@level2name=N'AK_ProductModel_Name'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Unique nonclustered index. Used to support replication samples.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductModel', @level2type=N'INDEX',@level2name=N'AK_ProductModel_rowguid'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary XML index.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductModel', @level2type=N'INDEX',@level2name=N'PXML_ProductModel_CatalogDescription'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary XML index.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductModel', @level2type=N'INDEX',@level2name=N'PXML_ProductModel_Instructions'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Product model classification.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductModel'\nGO\n", "output_text": "CREATE TABLE production.productmodel (\n    productmodelid integer NOT NULL,\n    name public.\"Name\" NOT NULL,\n    catalogdescription xml,\n    instructions xml,\n    rowguid uuid DEFAULT public.uuid_generate_v1() NOT NULL,\n    modifieddate timestamp without time zone DEFAULT now() NOT NULL\n);\n\n\n--\n-- Name: TABLE productmodel; Type: COMMENT; Schema: production; Owner: -\n--\n\nCOMMENT ON TABLE production.productmodel IS 'Product model classification.';\n\n\n--\n-- Name: COLUMN productmodel.productmodelid; Type: COMMENT; Schema: production; Owner: -\n--\n\nCOMMENT ON COLUMN production.productmodel.productmodelid IS 'Primary key for ProductModel records.';\n\n\n--\n-- Name: COLUMN productmodel.name; Type: COMMENT; Schema: production; Owner: -\n--\n\nCOMMENT ON COLUMN production.productmodel.name IS 'Product model description.';\n\n\n--\n-- Name: COLUMN productmodel.catalogdescription; Type: COMMENT; Schema: production; Owner: -\n--\n\nCOMMENT ON COLUMN production.productmodel.catalogdescription IS 'Detailed product catalog information in xml format.';\n\n\n--\n-- Name: COLUMN productmodel.instructions; Type: COMMENT; Schema: production; Owner: -\n--\n\nCOMMENT ON COLUMN production.productmodel.instructions IS 'Manufacturing instructions in xml format.';"}
{"input_text": "convert following DDL/DML code from MSSQL to Postgresql \nUSE [adventureworks]\nGO\n/****** Object:  Table [Production].[ProductModelIllustration]    Script Date: 2/3/24 12:02:58 AM ******/\nSET ANSI_NULLS ON\nGO\nSET QUOTED_IDENTIFIER ON\nGO\nCREATE TABLE [Production].[ProductModelIllustration](\n\t[ProductModelID] [int] NOT NULL,\n\t[IllustrationID] [int] NOT NULL,\n\t[ModifiedDate] [datetime] NOT NULL,\n CONSTRAINT [PK_ProductModelIllustration_ProductModelID_IllustrationID] PRIMARY KEY CLUSTERED \n(\n\t[ProductModelID] ASC,\n\t[IllustrationID] ASC\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]\n) ON [PRIMARY]\nGO\nALTER TABLE [Production].[ProductModelIllustration] ADD  CONSTRAINT [DF_ProductModelIllustration_ModifiedDate]  DEFAULT (getdate()) FOR [ModifiedDate]\nGO\nALTER TABLE [Production].[ProductModelIllustration]  WITH CHECK ADD  CONSTRAINT [FK_ProductModelIllustration_Illustration_IllustrationID] FOREIGN KEY([IllustrationID])\nREFERENCES [Production].[Illustration] ([IllustrationID])\nGO\nALTER TABLE [Production].[ProductModelIllustration] CHECK CONSTRAINT [FK_ProductModelIllustration_Illustration_IllustrationID]\nGO\nALTER TABLE [Production].[ProductModelIllustration]  WITH CHECK ADD  CONSTRAINT [FK_ProductModelIllustration_ProductModel_ProductModelID] FOREIGN KEY([ProductModelID])\nREFERENCES [Production].[ProductModel] ([ProductModelID])\nGO\nALTER TABLE [Production].[ProductModelIllustration] CHECK CONSTRAINT [FK_ProductModelIllustration_ProductModel_ProductModelID]\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key. Foreign key to ProductModel.ProductModelID.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductModelIllustration', @level2type=N'COLUMN',@level2name=N'ProductModelID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key. Foreign key to Illustration.IllustrationID.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductModelIllustration', @level2type=N'COLUMN',@level2name=N'IllustrationID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Date and time the record was last updated.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductModelIllustration', @level2type=N'COLUMN',@level2name=N'ModifiedDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of GETDATE()' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductModelIllustration', @level2type=N'CONSTRAINT',@level2name=N'DF_ProductModelIllustration_ModifiedDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key (clustered) constraint' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductModelIllustration', @level2type=N'CONSTRAINT',@level2name=N'PK_ProductModelIllustration_ProductModelID_IllustrationID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Cross-reference table mapping product models and illustrations.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductModelIllustration'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key constraint referencing Illustration.IllustrationID.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductModelIllustration', @level2type=N'CONSTRAINT',@level2name=N'FK_ProductModelIllustration_Illustration_IllustrationID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key constraint referencing ProductModel.ProductModelID.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductModelIllustration', @level2type=N'CONSTRAINT',@level2name=N'FK_ProductModelIllustration_ProductModel_ProductModelID'\nGO", "output_text": "CREATE TABLE production.productmodelillustration (\n    productmodelid integer NOT NULL,\n    illustrationid integer NOT NULL,\n    modifieddate timestamp without time zone DEFAULT now() NOT NULL\n);\n\n\n--\n-- Name: TABLE productmodelillustration; Type: COMMENT; Schema: production; Owner: -\n--\n\nCOMMENT ON TABLE production.productmodelillustration IS 'Cross-reference table mapping product models and illustrations.';\n\n\n--\n-- Name: COLUMN productmodelillustration.productmodelid; Type: COMMENT; Schema: production; Owner: -\n--\n\nCOMMENT ON COLUMN production.productmodelillustration.productmodelid IS 'Primary key. Foreign key to ProductModel.ProductModelID.';\n\n\n--\n-- Name: COLUMN productmodelillustration.illustrationid; Type: COMMENT; Schema: production; Owner: -\n--\n\nCOMMENT ON COLUMN production.productmodelillustration.illustrationid IS 'Primary key. Foreign key to Illustration.IllustrationID.';"}
{"input_text": "convert following DDL/DML code from MSSQL to Postgresql \nUSE [adventureworks]\nGO\n/****** Object:  Table [Production].[ProductModelProductDescriptionCulture]    Script Date: 2/3/24 12:02:54 AM ******/\nSET ANSI_NULLS ON\nGO\nSET QUOTED_IDENTIFIER ON\nGO\nCREATE TABLE [Production].[ProductModelProductDescriptionCulture](\n\t[ProductModelID] [int] NOT NULL,\n\t[ProductDescriptionID] [int] NOT NULL,\n\t[CultureID] [nchar](6) NOT NULL,\n\t[ModifiedDate] [datetime] NOT NULL,\n CONSTRAINT [PK_ProductModelProductDescriptionCulture_ProductModelID_ProductDescriptionID_CultureID] PRIMARY KEY CLUSTERED \n(\n\t[ProductModelID] ASC,\n\t[ProductDescriptionID] ASC,\n\t[CultureID] ASC\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]\n) ON [PRIMARY]\nGO\nALTER TABLE [Production].[ProductModelProductDescriptionCulture] ADD  CONSTRAINT [DF_ProductModelProductDescriptionCulture_ModifiedDate]  DEFAULT (getdate()) FOR [ModifiedDate]\nGO\nALTER TABLE [Production].[ProductModelProductDescriptionCulture]  WITH CHECK ADD  CONSTRAINT [FK_ProductModelProductDescriptionCulture_Culture_CultureID] FOREIGN KEY([CultureID])\nREFERENCES [Production].[Culture] ([CultureID])\nGO\nALTER TABLE [Production].[ProductModelProductDescriptionCulture] CHECK CONSTRAINT [FK_ProductModelProductDescriptionCulture_Culture_CultureID]\nGO\nALTER TABLE [Production].[ProductModelProductDescriptionCulture]  WITH CHECK ADD  CONSTRAINT [FK_ProductModelProductDescriptionCulture_ProductDescription_ProductDescriptionID] FOREIGN KEY([ProductDescriptionID])\nREFERENCES [Production].[ProductDescription] ([ProductDescriptionID])\nGO\nALTER TABLE [Production].[ProductModelProductDescriptionCulture] CHECK CONSTRAINT [FK_ProductModelProductDescriptionCulture_ProductDescription_ProductDescriptionID]\nGO\nALTER TABLE [Production].[ProductModelProductDescriptionCulture]  WITH CHECK ADD  CONSTRAINT [FK_ProductModelProductDescriptionCulture_ProductModel_ProductModelID] FOREIGN KEY([ProductModelID])\nREFERENCES [Production].[ProductModel] ([ProductModelID])\nGO\nALTER TABLE [Production].[ProductModelProductDescriptionCulture] CHECK CONSTRAINT [FK_ProductModelProductDescriptionCulture_ProductModel_ProductModelID]\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key. Foreign key to ProductModel.ProductModelID.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductModelProductDescriptionCulture', @level2type=N'COLUMN',@level2name=N'ProductModelID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key. Foreign key to ProductDescription.ProductDescriptionID.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductModelProductDescriptionCulture', @level2type=N'COLUMN',@level2name=N'ProductDescriptionID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Culture identification number. Foreign key to Culture.CultureID.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductModelProductDescriptionCulture', @level2type=N'COLUMN',@level2name=N'CultureID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Date and time the record was last updated.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductModelProductDescriptionCulture', @level2type=N'COLUMN',@level2name=N'ModifiedDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of GETDATE()' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductModelProductDescriptionCulture', @level2type=N'CONSTRAINT',@level2name=N'DF_ProductModelProductDescriptionCulture_ModifiedDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key (clustered) constraint' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductModelProductDescriptionCulture', @level2type=N'CONSTRAINT',@level2name=N'PK_ProductModelProductDescriptionCulture_ProductModelID_ProductDescriptionID_CultureID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Cross-reference table mapping product descriptions and the language the description is written in.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductModelProductDescriptionCulture'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key constraint referencing Culture.CultureID.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductModelProductDescriptionCulture', @level2type=N'CONSTRAINT',@level2name=N'FK_ProductModelProductDescriptionCulture_Culture_CultureID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key constraint referencing ProductDescription.ProductDescriptionID.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductModelProductDescriptionCulture', @level2type=N'CONSTRAINT',@level2name=N'FK_ProductModelProductDescriptionCulture_ProductDescription_ProductDescriptionID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key constraint referencing ProductModel.ProductModelID.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductModelProductDescriptionCulture', @level2type=N'CONSTRAINT',@level2name=N'FK_ProductModelProductDescriptionCulture_ProductModel_ProductModelID'\nGO\n", "output_text": "CREATE TABLE production.productmodelproductdescriptionculture (\n    productmodelid integer NOT NULL,\n    productdescriptionid integer NOT NULL,\n    cultureid character(6) NOT NULL,\n    modifieddate timestamp without time zone DEFAULT now() NOT NULL\n);\n\n\n--\n-- Name: TABLE productmodelproductdescriptionculture; Type: COMMENT; Schema: production; Owner: -\n--\n\nCOMMENT ON TABLE production.productmodelproductdescriptionculture IS 'Cross-reference table mapping product descriptions and the language the description is written in.';\n\n\n--\n-- Name: COLUMN productmodelproductdescriptionculture.productmodelid; Type: COMMENT; Schema: production; Owner: -\n--\n\nCOMMENT ON COLUMN production.productmodelproductdescriptionculture.productmodelid IS 'Primary key. Foreign key to ProductModel.ProductModelID.';\n\n\n--\n-- Name: COLUMN productmodelproductdescriptionculture.productdescriptionid; Type: COMMENT; Schema: production; Owner: -\n--\n\nCOMMENT ON COLUMN production.productmodelproductdescriptionculture.productdescriptionid IS 'Primary key. Foreign key to ProductDescription.ProductDescriptionID.';\n\n\n--\n-- Name: COLUMN productmodelproductdescriptionculture.cultureid; Type: COMMENT; Schema: production; Owner: -\n--\n\nCOMMENT ON COLUMN production.productmodelproductdescriptionculture.cultureid IS 'Culture identification number. Foreign key to Culture.CultureID.';"}
{"input_text": "convert following DDL/DML code from MSSQL to Postgresql \nUSE [adventureworks]\nGO\n/****** Object:  Table [Production].[ProductPhoto]    Script Date: 2/3/24 12:02:58 AM ******/\nSET ANSI_NULLS ON\nGO\nSET QUOTED_IDENTIFIER ON\nGO\nCREATE TABLE [Production].[ProductPhoto](\n\t[ProductPhotoID] [int] IDENTITY(1,1) NOT NULL,\n\t[ThumbNailPhoto] [varbinary](max) NULL,\n\t[ThumbnailPhotoFileName] [nvarchar](50) NULL,\n\t[LargePhoto] [varbinary](max) NULL,\n\t[LargePhotoFileName] [nvarchar](50) NULL,\n\t[ModifiedDate] [datetime] NOT NULL,\n CONSTRAINT [PK_ProductPhoto_ProductPhotoID] PRIMARY KEY CLUSTERED \n(\n\t[ProductPhotoID] ASC\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]\n) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]\nGO\nALTER TABLE [Production].[ProductPhoto] ADD  CONSTRAINT [DF_ProductPhoto_ModifiedDate]  DEFAULT (getdate()) FOR [ModifiedDate]\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key for ProductPhoto records.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductPhoto', @level2type=N'COLUMN',@level2name=N'ProductPhotoID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Small image of the product.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductPhoto', @level2type=N'COLUMN',@level2name=N'ThumbNailPhoto'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Small image file name.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductPhoto', @level2type=N'COLUMN',@level2name=N'ThumbnailPhotoFileName'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Large image of the product.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductPhoto', @level2type=N'COLUMN',@level2name=N'LargePhoto'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Large image file name.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductPhoto', @level2type=N'COLUMN',@level2name=N'LargePhotoFileName'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Date and time the record was last updated.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductPhoto', @level2type=N'COLUMN',@level2name=N'ModifiedDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of GETDATE()' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductPhoto', @level2type=N'CONSTRAINT',@level2name=N'DF_ProductPhoto_ModifiedDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key (clustered) constraint' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductPhoto', @level2type=N'CONSTRAINT',@level2name=N'PK_ProductPhoto_ProductPhotoID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Product images.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductPhoto'\nGO", "output_text": "CREATE TABLE production.productphoto (\n    productphotoid integer NOT NULL,\n    thumbnailphoto bytea,\n    thumbnailphotofilename character varying(50),\n    largephoto bytea,\n    largephotofilename character varying(50),\n    modifieddate timestamp without time zone DEFAULT now() NOT NULL\n);\n\n\n--\n-- Name: TABLE productphoto; Type: COMMENT; Schema: production; Owner: -\n--\n\nCOMMENT ON TABLE production.productphoto IS 'Product images.';\n\n\n--\n-- Name: COLUMN productphoto.productphotoid; Type: COMMENT; Schema: production; Owner: -\n--\n\nCOMMENT ON COLUMN production.productphoto.productphotoid IS 'Primary key for ProductPhoto records.';\n\n\n--\n-- Name: COLUMN productphoto.thumbnailphoto; Type: COMMENT; Schema: production; Owner: -\n--\n\nCOMMENT ON COLUMN production.productphoto.thumbnailphoto IS 'Small image of the product.';\n\n\n--\n-- Name: COLUMN productphoto.thumbnailphotofilename; Type: COMMENT; Schema: production; Owner: -\n--\n\nCOMMENT ON COLUMN production.productphoto.thumbnailphotofilename IS 'Small image file name.';\n\n\n--\n-- Name: COLUMN productphoto.largephoto; Type: COMMENT; Schema: production; Owner: -\n--\n\nCOMMENT ON COLUMN production.productphoto.largephoto IS 'Large image of the product.';\n\n\n--\n-- Name: COLUMN productphoto.largephotofilename; Type: COMMENT; Schema: production; Owner: -\n--\n\nCOMMENT ON COLUMN production.productphoto.largephotofilename IS 'Large image file name.';"}
{"input_text": "convert following DDL/DML code from MSSQL to Postgresql \nUSE [adventureworks]\nGO\n/****** Object:  Table [Production].[ProductProductPhoto]    Script Date: 2/3/24 12:02:58 AM ******/\nSET ANSI_NULLS ON\nGO\nSET QUOTED_IDENTIFIER ON\nGO\nCREATE TABLE [Production].[ProductProductPhoto](\n\t[ProductID] [int] NOT NULL,\n\t[ProductPhotoID] [int] NOT NULL,\n\t[Primary] [dbo].[Flag] NOT NULL,\n\t[ModifiedDate] [datetime] NOT NULL,\n CONSTRAINT [PK_ProductProductPhoto_ProductID_ProductPhotoID] PRIMARY KEY NONCLUSTERED \n(\n\t[ProductID] ASC,\n\t[ProductPhotoID] ASC\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]\n) ON [PRIMARY]\nGO\nALTER TABLE [Production].[ProductProductPhoto] ADD  CONSTRAINT [DF_ProductProductPhoto_Primary]  DEFAULT ((0)) FOR [Primary]\nGO\nALTER TABLE [Production].[ProductProductPhoto] ADD  CONSTRAINT [DF_ProductProductPhoto_ModifiedDate]  DEFAULT (getdate()) FOR [ModifiedDate]\nGO\nALTER TABLE [Production].[ProductProductPhoto]  WITH CHECK ADD  CONSTRAINT [FK_ProductProductPhoto_Product_ProductID] FOREIGN KEY([ProductID])\nREFERENCES [Production].[Product] ([ProductID])\nGO\nALTER TABLE [Production].[ProductProductPhoto] CHECK CONSTRAINT [FK_ProductProductPhoto_Product_ProductID]\nGO\nALTER TABLE [Production].[ProductProductPhoto]  WITH CHECK ADD  CONSTRAINT [FK_ProductProductPhoto_ProductPhoto_ProductPhotoID] FOREIGN KEY([ProductPhotoID])\nREFERENCES [Production].[ProductPhoto] ([ProductPhotoID])\nGO\nALTER TABLE [Production].[ProductProductPhoto] CHECK CONSTRAINT [FK_ProductProductPhoto_ProductPhoto_ProductPhotoID]\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Product identification number. Foreign key to Product.ProductID.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductProductPhoto', @level2type=N'COLUMN',@level2name=N'ProductID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Product photo identification number. Foreign key to ProductPhoto.ProductPhotoID.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductProductPhoto', @level2type=N'COLUMN',@level2name=N'ProductPhotoID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'0 = Photo is not the principal image. 1 = Photo is the principal image.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductProductPhoto', @level2type=N'COLUMN',@level2name=N'Primary'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of 0 (FALSE)' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductProductPhoto', @level2type=N'CONSTRAINT',@level2name=N'DF_ProductProductPhoto_Primary'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Date and time the record was last updated.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductProductPhoto', @level2type=N'COLUMN',@level2name=N'ModifiedDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of GETDATE()' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductProductPhoto', @level2type=N'CONSTRAINT',@level2name=N'DF_ProductProductPhoto_ModifiedDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key (clustered) constraint' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductProductPhoto', @level2type=N'CONSTRAINT',@level2name=N'PK_ProductProductPhoto_ProductID_ProductPhotoID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Cross-reference table mapping products and product photos.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductProductPhoto'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key constraint referencing Product.ProductID.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductProductPhoto', @level2type=N'CONSTRAINT',@level2name=N'FK_ProductProductPhoto_Product_ProductID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key constraint referencing ProductPhoto.ProductPhotoID.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductProductPhoto', @level2type=N'CONSTRAINT',@level2name=N'FK_ProductProductPhoto_ProductPhoto_ProductPhotoID'\nGO\n", "output_text": "CREATE TABLE production.productproductphoto (\n    productid integer NOT NULL,\n    productphotoid integer NOT NULL,\n    \"primary\" public.\"Flag\" DEFAULT false NOT NULL,\n    modifieddate timestamp without time zone DEFAULT now() NOT NULL\n);\n\n\n--\n-- Name: TABLE productproductphoto; Type: COMMENT; Schema: production; Owner: -\n--\n\nCOMMENT ON TABLE production.productproductphoto IS 'Cross-reference table mapping products and product photos.';\n\n\n--\n-- Name: COLUMN productproductphoto.productid; Type: COMMENT; Schema: production; Owner: -\n--\n\nCOMMENT ON COLUMN production.productproductphoto.productid IS 'Product identification number. Foreign key to Product.ProductID.';\n\n\n--\n-- Name: COLUMN productproductphoto.productphotoid; Type: COMMENT; Schema: production; Owner: -\n--\n\nCOMMENT ON COLUMN production.productproductphoto.productphotoid IS 'Product photo identification number. Foreign key to ProductPhoto.ProductPhotoID.';\n\n\n--\n-- Name: COLUMN productproductphoto.\"primary\"; Type: COMMENT; Schema: production; Owner: -\n--\n\nCOMMENT ON COLUMN production.productproductphoto.\"primary\" IS '0 = Photo is not the principal image. 1 = Photo is the principal image.';"}
{"input_text": "convert following DDL/DML code from MSSQL to Postgresql \nUSE [adventureworks]\nGO\n/****** Object:  Table [Production].[ProductReview]    Script Date: 2/3/24 12:02:58 AM ******/\nSET ANSI_NULLS ON\nGO\nSET QUOTED_IDENTIFIER ON\nGO\nCREATE TABLE [Production].[ProductReview](\n\t[ProductReviewID] [int] IDENTITY(1,1) NOT NULL,\n\t[ProductID] [int] NOT NULL,\n\t[ReviewerName] [dbo].[Name] NOT NULL,\n\t[ReviewDate] [datetime] NOT NULL,\n\t[EmailAddress] [nvarchar](50) NOT NULL,\n\t[Rating] [int] NOT NULL,\n\t[Comments] [nvarchar](3850) NULL,\n\t[ModifiedDate] [datetime] NOT NULL,\n CONSTRAINT [PK_ProductReview_ProductReviewID] PRIMARY KEY CLUSTERED \n(\n\t[ProductReviewID] ASC\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]\n) ON [PRIMARY]\nGO\nSET ANSI_PADDING ON\nGO\n/****** Object:  Index [IX_ProductReview_ProductID_Name]    Script Date: 2/3/24 12:03:02 AM ******/\nCREATE NONCLUSTERED INDEX [IX_ProductReview_ProductID_Name] ON [Production].[ProductReview]\n(\n\t[ProductID] ASC,\n\t[ReviewerName] ASC\n)\nINCLUDE ( \t[Comments]) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]\nGO\n/****** Object:  FullTextIndex     Script Date: 2/3/24 12:03:03 AM ******/\nCREATE FULLTEXT INDEX ON [Production].[ProductReview](\n[Comments] LANGUAGE 'English')\nKEY INDEX [PK_ProductReview_ProductReviewID]ON ([AW2016FullTextCatalog], FILEGROUP [PRIMARY])\nWITH (CHANGE_TRACKING = AUTO, STOPLIST = SYSTEM)\n\nGO\nALTER TABLE [Production].[ProductReview] ADD  CONSTRAINT [DF_ProductReview_ReviewDate]  DEFAULT (getdate()) FOR [ReviewDate]\nGO\nALTER TABLE [Production].[ProductReview] ADD  CONSTRAINT [DF_ProductReview_ModifiedDate]  DEFAULT (getdate()) FOR [ModifiedDate]\nGO\nALTER TABLE [Production].[ProductReview]  WITH CHECK ADD  CONSTRAINT [FK_ProductReview_Product_ProductID] FOREIGN KEY([ProductID])\nREFERENCES [Production].[Product] ([ProductID])\nGO\nALTER TABLE [Production].[ProductReview] CHECK CONSTRAINT [FK_ProductReview_Product_ProductID]\nGO\nALTER TABLE [Production].[ProductReview]  WITH CHECK ADD  CONSTRAINT [CK_ProductReview_Rating] CHECK  (([Rating]>=(1) AND [Rating]<=(5)))\nGO\nALTER TABLE [Production].[ProductReview] CHECK CONSTRAINT [CK_ProductReview_Rating]\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key for ProductReview records.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductReview', @level2type=N'COLUMN',@level2name=N'ProductReviewID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Product identification number. Foreign key to Product.ProductID.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductReview', @level2type=N'COLUMN',@level2name=N'ProductID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Name of the reviewer.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductReview', @level2type=N'COLUMN',@level2name=N'ReviewerName'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Date review was submitted.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductReview', @level2type=N'COLUMN',@level2name=N'ReviewDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of GETDATE()' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductReview', @level2type=N'CONSTRAINT',@level2name=N'DF_ProductReview_ReviewDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Reviewer''s e-mail address.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductReview', @level2type=N'COLUMN',@level2name=N'EmailAddress'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Product rating given by the reviewer. Scale is 1 to 5 with 5 as the highest rating.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductReview', @level2type=N'COLUMN',@level2name=N'Rating'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Reviewer''s comments' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductReview', @level2type=N'COLUMN',@level2name=N'Comments'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Date and time the record was last updated.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductReview', @level2type=N'COLUMN',@level2name=N'ModifiedDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of GETDATE()' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductReview', @level2type=N'CONSTRAINT',@level2name=N'DF_ProductReview_ModifiedDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key (clustered) constraint' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductReview', @level2type=N'CONSTRAINT',@level2name=N'PK_ProductReview_ProductReviewID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Nonclustered index.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductReview', @level2type=N'INDEX',@level2name=N'IX_ProductReview_ProductID_Name'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Customer reviews of products they have purchased.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductReview'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key constraint referencing Product.ProductID.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductReview', @level2type=N'CONSTRAINT',@level2name=N'FK_ProductReview_Product_ProductID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Check constraint [Rating] BETWEEN (1) AND (5)' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductReview', @level2type=N'CONSTRAINT',@level2name=N'CK_ProductReview_Rating'\nGO", "output_text": "CREATE TABLE production.productreview (\n    productreviewid integer NOT NULL,\n    productid integer NOT NULL,\n    reviewername public.\"Name\" NOT NULL,\n    reviewdate timestamp without time zone DEFAULT now() NOT NULL,\n    emailaddress character varying(50) NOT NULL,\n    rating integer NOT NULL,\n    comments character varying(3850),\n    modifieddate timestamp without time zone DEFAULT now() NOT NULL,\n    CONSTRAINT \"CK_ProductReview_Rating\" CHECK (((rating >= 1) AND (rating <= 5)))\n);\n\n\n--\n-- Name: TABLE productreview; Type: COMMENT; Schema: production; Owner: -\n--\n\nCOMMENT ON TABLE production.productreview IS 'Customer reviews of products they have purchased.';\n\n\n--\n-- Name: COLUMN productreview.productreviewid; Type: COMMENT; Schema: production; Owner: -\n--\n\nCOMMENT ON COLUMN production.productreview.productreviewid IS 'Primary key for ProductReview records.';\n\n\n--\n-- Name: COLUMN productreview.productid; Type: COMMENT; Schema: production; Owner: -\n--\n\nCOMMENT ON COLUMN production.productreview.productid IS 'Product identification number. Foreign key to Product.ProductID.';\n\n\n--\n-- Name: COLUMN productreview.reviewername; Type: COMMENT; Schema: production; Owner: -\n--\n\nCOMMENT ON COLUMN production.productreview.reviewername IS 'Name of the reviewer.';\n\n\n--\n-- Name: COLUMN productreview.reviewdate; Type: COMMENT; Schema: production; Owner: -\n--\n\nCOMMENT ON COLUMN production.productreview.reviewdate IS 'Date review was submitted.';\n\n\n--\n-- Name: COLUMN productreview.emailaddress; Type: COMMENT; Schema: production; Owner: -\n--\n\nCOMMENT ON COLUMN production.productreview.emailaddress IS 'Reviewer''s e-mail address.';\n\n\n--\n-- Name: COLUMN productreview.rating; Type: COMMENT; Schema: production; Owner: -\n--\n\nCOMMENT ON COLUMN production.productreview.rating IS 'Product rating given by the reviewer. Scale is 1 to 5 with 5 as the highest rating.';\n\n\n--\n-- Name: COLUMN productreview.comments; Type: COMMENT; Schema: production; Owner: -\n--\n\nCOMMENT ON COLUMN production.productreview.comments IS 'Reviewer''s comments';"}
{"input_text": "convert following DDL/DML code from MSSQL to Postgresql \nUSE [adventureworks]\nGO\n/****** Object:  Table [Production].[ProductSubcategory]    Script Date: 2/3/24 12:02:58 AM ******/\nSET ANSI_NULLS ON\nGO\nSET QUOTED_IDENTIFIER ON\nGO\nCREATE TABLE [Production].[ProductSubcategory](\n\t[ProductSubcategoryID] [int] IDENTITY(1,1) NOT NULL,\n\t[ProductCategoryID] [int] NOT NULL,\n\t[Name] [dbo].[Name] NOT NULL,\n\t[rowguid] [uniqueidentifier] ROWGUIDCOL  NOT NULL,\n\t[ModifiedDate] [datetime] NOT NULL,\n CONSTRAINT [PK_ProductSubcategory_ProductSubcategoryID] PRIMARY KEY CLUSTERED \n(\n\t[ProductSubcategoryID] ASC\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]\n) ON [PRIMARY]\nGO\nSET ANSI_PADDING ON\nGO\n/****** Object:  Index [AK_ProductSubcategory_Name]    Script Date: 2/3/24 12:03:02 AM ******/\nCREATE UNIQUE NONCLUSTERED INDEX [AK_ProductSubcategory_Name] ON [Production].[ProductSubcategory]\n(\n\t[Name] ASC\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]\nGO\n/****** Object:  Index [AK_ProductSubcategory_rowguid]    Script Date: 2/3/24 12:03:02 AM ******/\nCREATE UNIQUE NONCLUSTERED INDEX [AK_ProductSubcategory_rowguid] ON [Production].[ProductSubcategory]\n(\n\t[rowguid] ASC\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]\nGO\nALTER TABLE [Production].[ProductSubcategory] ADD  CONSTRAINT [DF_ProductSubcategory_rowguid]  DEFAULT (newid()) FOR [rowguid]\nGO\nALTER TABLE [Production].[ProductSubcategory] ADD  CONSTRAINT [DF_ProductSubcategory_ModifiedDate]  DEFAULT (getdate()) FOR [ModifiedDate]\nGO\nALTER TABLE [Production].[ProductSubcategory]  WITH CHECK ADD  CONSTRAINT [FK_ProductSubcategory_ProductCategory_ProductCategoryID] FOREIGN KEY([ProductCategoryID])\nREFERENCES [Production].[ProductCategory] ([ProductCategoryID])\nGO\nALTER TABLE [Production].[ProductSubcategory] CHECK CONSTRAINT [FK_ProductSubcategory_ProductCategory_ProductCategoryID]\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key for ProductSubcategory records.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductSubcategory', @level2type=N'COLUMN',@level2name=N'ProductSubcategoryID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Product category identification number. Foreign key to ProductCategory.ProductCategoryID.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductSubcategory', @level2type=N'COLUMN',@level2name=N'ProductCategoryID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Subcategory description.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductSubcategory', @level2type=N'COLUMN',@level2name=N'Name'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductSubcategory', @level2type=N'COLUMN',@level2name=N'rowguid'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of NEWID()' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductSubcategory', @level2type=N'CONSTRAINT',@level2name=N'DF_ProductSubcategory_rowguid'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Date and time the record was last updated.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductSubcategory', @level2type=N'COLUMN',@level2name=N'ModifiedDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of GETDATE()' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductSubcategory', @level2type=N'CONSTRAINT',@level2name=N'DF_ProductSubcategory_ModifiedDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key (clustered) constraint' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductSubcategory', @level2type=N'CONSTRAINT',@level2name=N'PK_ProductSubcategory_ProductSubcategoryID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Unique nonclustered index.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductSubcategory', @level2type=N'INDEX',@level2name=N'AK_ProductSubcategory_Name'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Unique nonclustered index. Used to support replication samples.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductSubcategory', @level2type=N'INDEX',@level2name=N'AK_ProductSubcategory_rowguid'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Product subcategories. See ProductCategory table.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductSubcategory'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key constraint referencing ProductCategory.ProductCategoryID.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductSubcategory', @level2type=N'CONSTRAINT',@level2name=N'FK_ProductSubcategory_ProductCategory_ProductCategoryID'\nGO", "output_text": "CREATE TABLE production.productsubcategory (\n    productsubcategoryid integer NOT NULL,\n    productcategoryid integer NOT NULL,\n    name public.\"Name\" NOT NULL,\n    rowguid uuid DEFAULT public.uuid_generate_v1() NOT NULL,\n    modifieddate timestamp without time zone DEFAULT now() NOT NULL\n);\n\n\n--\n-- Name: TABLE productsubcategory; Type: COMMENT; Schema: production; Owner: -\n--\n\nCOMMENT ON TABLE production.productsubcategory IS 'Product subcategories. See ProductCategory table.';\n\n\n--\n-- Name: COLUMN productsubcategory.productsubcategoryid; Type: COMMENT; Schema: production; Owner: -\n--\n\nCOMMENT ON COLUMN production.productsubcategory.productsubcategoryid IS 'Primary key for ProductSubcategory records.';\n\n\n--\n-- Name: COLUMN productsubcategory.productcategoryid; Type: COMMENT; Schema: production; Owner: -\n--\n\nCOMMENT ON COLUMN production.productsubcategory.productcategoryid IS 'Product category identification number. Foreign key to ProductCategory.ProductCategoryID.';\n\n\n--\n-- Name: COLUMN productsubcategory.name; Type: COMMENT; Schema: production; Owner: -\n--\n\nCOMMENT ON COLUMN production.productsubcategory.name IS 'Subcategory description.';"}
{"input_text": "convert following DDL/DML code from MSSQL to Postgresql \nUSE [adventureworks]\nGO\n/****** Object:  Schema [Production]    Script Date: 2/3/24 12:02:51 AM ******/\nCREATE SCHEMA [Production]\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Contains objects related to products, inventory, and manufacturing.' , @level0type=N'SCHEMA',@level0name=N'Production'\nGO", "output_text": "CREATE SCHEMA production;\nCOMMENT ON SCHEMA purchasing IS 'Contains objects related to products, inventory, and manufacturing.';"}
{"input_text": "convert following DDL/DML code from MSSQL to Postgresql \nUSE [adventureworks]\nGO\n/****** Object:  Table [Production].[ScrapReason]    Script Date: 2/3/24 12:02:58 AM ******/\nSET ANSI_NULLS ON\nGO\nSET QUOTED_IDENTIFIER ON\nGO\nCREATE TABLE [Production].[ScrapReason](\n\t[ScrapReasonID] [smallint] IDENTITY(1,1) NOT NULL,\n\t[Name] [dbo].[Name] NOT NULL,\n\t[ModifiedDate] [datetime] NOT NULL,\n CONSTRAINT [PK_ScrapReason_ScrapReasonID] PRIMARY KEY CLUSTERED \n(\n\t[ScrapReasonID] ASC\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]\n) ON [PRIMARY]\nGO\nSET ANSI_PADDING ON\nGO\n/****** Object:  Index [AK_ScrapReason_Name]    Script Date: 2/3/24 12:03:02 AM ******/\nCREATE UNIQUE NONCLUSTERED INDEX [AK_ScrapReason_Name] ON [Production].[ScrapReason]\n(\n\t[Name] ASC\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]\nGO\nALTER TABLE [Production].[ScrapReason] ADD  CONSTRAINT [DF_ScrapReason_ModifiedDate]  DEFAULT (getdate()) FOR [ModifiedDate]\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key for ScrapReason records.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ScrapReason', @level2type=N'COLUMN',@level2name=N'ScrapReasonID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Failure description.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ScrapReason', @level2type=N'COLUMN',@level2name=N'Name'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Date and time the record was last updated.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ScrapReason', @level2type=N'COLUMN',@level2name=N'ModifiedDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of GETDATE()' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ScrapReason', @level2type=N'CONSTRAINT',@level2name=N'DF_ScrapReason_ModifiedDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key (clustered) constraint' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ScrapReason', @level2type=N'CONSTRAINT',@level2name=N'PK_ScrapReason_ScrapReasonID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Unique nonclustered index.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ScrapReason', @level2type=N'INDEX',@level2name=N'AK_ScrapReason_Name'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Manufacturing failure reasons lookup table.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ScrapReason'\nGO\n", "output_text": "CREATE TABLE production.scrapreason (\n    scrapreasonid integer NOT NULL,\n    name public.\"Name\" NOT NULL,\n    modifieddate timestamp without time zone DEFAULT now() NOT NULL\n);\n\n\n--\n-- Name: TABLE scrapreason; Type: COMMENT; Schema: production; Owner: -\n--\n\nCOMMENT ON TABLE production.scrapreason IS 'Manufacturing failure reasons lookup table.';\n\n\n--\n-- Name: COLUMN scrapreason.scrapreasonid; Type: COMMENT; Schema: production; Owner: -\n--\n\nCOMMENT ON COLUMN production.scrapreason.scrapreasonid IS 'Primary key for ScrapReason records.';\n\n\n--\n-- Name: COLUMN scrapreason.name; Type: COMMENT; Schema: production; Owner: -\n--\n\nCOMMENT ON COLUMN production.scrapreason.name IS 'Failure description.';"}
{"input_text": "convert following DDL/DML code from MSSQL to Postgresql \nUSE [adventureworks]\nGO\n/****** Object:  Table [Production].[TransactionHistory]    Script Date: 2/3/24 12:02:59 AM ******/\nSET ANSI_NULLS ON\nGO\nSET QUOTED_IDENTIFIER ON\nGO\nCREATE TABLE [Production].[TransactionHistory](\n\t[TransactionID] [int] IDENTITY(100000,1) NOT NULL,\n\t[ProductID] [int] NOT NULL,\n\t[ReferenceOrderID] [int] NOT NULL,\n\t[ReferenceOrderLineID] [int] NOT NULL,\n\t[TransactionDate] [datetime] NOT NULL,\n\t[TransactionType] [nchar](1) NOT NULL,\n\t[Quantity] [int] NOT NULL,\n\t[ActualCost] [money] NOT NULL,\n\t[ModifiedDate] [datetime] NOT NULL,\n CONSTRAINT [PK_TransactionHistory_TransactionID] PRIMARY KEY CLUSTERED \n(\n\t[TransactionID] ASC\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]\n) ON [PRIMARY]\nGO\n/****** Object:  Index [IX_TransactionHistory_ProductID]    Script Date: 2/3/24 12:03:02 AM ******/\nCREATE NONCLUSTERED INDEX [IX_TransactionHistory_ProductID] ON [Production].[TransactionHistory]\n(\n\t[ProductID] ASC\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]\nGO\n/****** Object:  Index [IX_TransactionHistory_ReferenceOrderID_ReferenceOrderLineID]    Script Date: 2/3/24 12:03:02 AM ******/\nCREATE NONCLUSTERED INDEX [IX_TransactionHistory_ReferenceOrderID_ReferenceOrderLineID] ON [Production].[TransactionHistory]\n(\n\t[ReferenceOrderID] ASC,\n\t[ReferenceOrderLineID] ASC\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]\nGO\nALTER TABLE [Production].[TransactionHistory] ADD  CONSTRAINT [DF_TransactionHistory_ReferenceOrderLineID]  DEFAULT ((0)) FOR [ReferenceOrderLineID]\nGO\nALTER TABLE [Production].[TransactionHistory] ADD  CONSTRAINT [DF_TransactionHistory_TransactionDate]  DEFAULT (getdate()) FOR [TransactionDate]\nGO\nALTER TABLE [Production].[TransactionHistory] ADD  CONSTRAINT [DF_TransactionHistory_ModifiedDate]  DEFAULT (getdate()) FOR [ModifiedDate]\nGO\nALTER TABLE [Production].[TransactionHistory]  WITH CHECK ADD  CONSTRAINT [FK_TransactionHistory_Product_ProductID] FOREIGN KEY([ProductID])\nREFERENCES [Production].[Product] ([ProductID])\nGO\nALTER TABLE [Production].[TransactionHistory] CHECK CONSTRAINT [FK_TransactionHistory_Product_ProductID]\nGO\nALTER TABLE [Production].[TransactionHistory]  WITH CHECK ADD  CONSTRAINT [CK_TransactionHistory_TransactionType] CHECK  ((upper([TransactionType])='P' OR upper([TransactionType])='S' OR upper([TransactionType])='W'))\nGO\nALTER TABLE [Production].[TransactionHistory] CHECK CONSTRAINT [CK_TransactionHistory_TransactionType]\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key for TransactionHistory records.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'TransactionHistory', @level2type=N'COLUMN',@level2name=N'TransactionID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Product identification number. Foreign key to Product.ProductID.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'TransactionHistory', @level2type=N'COLUMN',@level2name=N'ProductID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Purchase order, sales order, or work order identification number.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'TransactionHistory', @level2type=N'COLUMN',@level2name=N'ReferenceOrderID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Line number associated with the purchase order, sales order, or work order.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'TransactionHistory', @level2type=N'COLUMN',@level2name=N'ReferenceOrderLineID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of 0' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'TransactionHistory', @level2type=N'CONSTRAINT',@level2name=N'DF_TransactionHistory_ReferenceOrderLineID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Date and time of the transaction.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'TransactionHistory', @level2type=N'COLUMN',@level2name=N'TransactionDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of GETDATE()' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'TransactionHistory', @level2type=N'CONSTRAINT',@level2name=N'DF_TransactionHistory_TransactionDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'W = WorkOrder, S = SalesOrder, P = PurchaseOrder' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'TransactionHistory', @level2type=N'COLUMN',@level2name=N'TransactionType'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Product quantity.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'TransactionHistory', @level2type=N'COLUMN',@level2name=N'Quantity'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Product cost.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'TransactionHistory', @level2type=N'COLUMN',@level2name=N'ActualCost'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Date and time the record was last updated.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'TransactionHistory', @level2type=N'COLUMN',@level2name=N'ModifiedDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of GETDATE()' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'TransactionHistory', @level2type=N'CONSTRAINT',@level2name=N'DF_TransactionHistory_ModifiedDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key (clustered) constraint' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'TransactionHistory', @level2type=N'CONSTRAINT',@level2name=N'PK_TransactionHistory_TransactionID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Nonclustered index.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'TransactionHistory', @level2type=N'INDEX',@level2name=N'IX_TransactionHistory_ProductID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Nonclustered index.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'TransactionHistory', @level2type=N'INDEX',@level2name=N'IX_TransactionHistory_ReferenceOrderID_ReferenceOrderLineID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Record of each purchase order, sales order, or work order transaction year to date.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'TransactionHistory'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key constraint referencing Product.ProductID.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'TransactionHistory', @level2type=N'CONSTRAINT',@level2name=N'FK_TransactionHistory_Product_ProductID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Check constraint [TransactionType]=''p'' OR [TransactionType]=''s'' OR [TransactionType]=''w'' OR [TransactionType]=''P'' OR [TransactionType]=''S'' OR [TransactionType]=''W'')' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'TransactionHistory', @level2type=N'CONSTRAINT',@level2name=N'CK_TransactionHistory_TransactionType'\nGO", "output_text": "CREATE TABLE production.transactionhistory (\n    transactionid integer NOT NULL,\n    productid integer NOT NULL,\n    referenceorderid integer NOT NULL,\n    referenceorderlineid integer DEFAULT 0 NOT NULL,\n    transactiondate timestamp without time zone DEFAULT now() NOT NULL,\n    transactiontype character(1) NOT NULL,\n    quantity integer NOT NULL,\n    actualcost numeric NOT NULL,\n    modifieddate timestamp without time zone DEFAULT now() NOT NULL,\n    CONSTRAINT \"CK_TransactionHistory_TransactionType\" CHECK ((upper((transactiontype)::text) = ANY (ARRAY['W'::text, 'S'::text, 'P'::text])))\n);\n\n\n--\n-- Name: TABLE transactionhistory; Type: COMMENT; Schema: production; Owner: -\n--\n\nCOMMENT ON TABLE production.transactionhistory IS 'Record of each purchase order, sales order, or work order transaction year to date.';\n\n\n--\n-- Name: COLUMN transactionhistory.transactionid; Type: COMMENT; Schema: production; Owner: -\n--\n\nCOMMENT ON COLUMN production.transactionhistory.transactionid IS 'Primary key for TransactionHistory records.';\n\n\n--\n-- Name: COLUMN transactionhistory.productid; Type: COMMENT; Schema: production; Owner: -\n--\n\nCOMMENT ON COLUMN production.transactionhistory.productid IS 'Product identification number. Foreign key to Product.ProductID.';\n\n\n--\n-- Name: COLUMN transactionhistory.referenceorderid; Type: COMMENT; Schema: production; Owner: -\n--\n\nCOMMENT ON COLUMN production.transactionhistory.referenceorderid IS 'Purchase order, sales order, or work order identification number.';\n\n\n--\n-- Name: COLUMN transactionhistory.referenceorderlineid; Type: COMMENT; Schema: production; Owner: -\n--\n\nCOMMENT ON COLUMN production.transactionhistory.referenceorderlineid IS 'Line number associated with the purchase order, sales order, or work order.';\n\n\n--\n-- Name: COLUMN transactionhistory.transactiondate; Type: COMMENT; Schema: production; Owner: -\n--\n\nCOMMENT ON COLUMN production.transactionhistory.transactiondate IS 'Date and time of the transaction.';\n\n\n--\n-- Name: COLUMN transactionhistory.transactiontype; Type: COMMENT; Schema: production; Owner: -\n--\n\nCOMMENT ON COLUMN production.transactionhistory.transactiontype IS 'W = WorkOrder, S = SalesOrder, P = PurchaseOrder';\n\n\n--\n-- Name: COLUMN transactionhistory.quantity; Type: COMMENT; Schema: production; Owner: -\n--\n\nCOMMENT ON COLUMN production.transactionhistory.quantity IS 'Product quantity.';\n\n\n--\n-- Name: COLUMN transactionhistory.actualcost; Type: COMMENT; Schema: production; Owner: -\n--\n\nCOMMENT ON COLUMN production.transactionhistory.actualcost IS 'Product cost.';"}
{"input_text": "convert following DDL/DML code from MSSQL to Postgresql \nUSE [adventureworks]\nGO\n/****** Object:  Table [Production].[TransactionHistoryArchive]    Script Date: 2/3/24 12:02:59 AM ******/\nSET ANSI_NULLS ON\nGO\nSET QUOTED_IDENTIFIER ON\nGO\nCREATE TABLE [Production].[TransactionHistoryArchive](\n\t[TransactionID] [int] NOT NULL,\n\t[ProductID] [int] NOT NULL,\n\t[ReferenceOrderID] [int] NOT NULL,\n\t[ReferenceOrderLineID] [int] NOT NULL,\n\t[TransactionDate] [datetime] NOT NULL,\n\t[TransactionType] [nchar](1) NOT NULL,\n\t[Quantity] [int] NOT NULL,\n\t[ActualCost] [money] NOT NULL,\n\t[ModifiedDate] [datetime] NOT NULL,\n CONSTRAINT [PK_TransactionHistoryArchive_TransactionID] PRIMARY KEY CLUSTERED \n(\n\t[TransactionID] ASC\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]\n) ON [PRIMARY]\nGO\n/****** Object:  Index [IX_TransactionHistoryArchive_ProductID]    Script Date: 2/3/24 12:03:02 AM ******/\nCREATE NONCLUSTERED INDEX [IX_TransactionHistoryArchive_ProductID] ON [Production].[TransactionHistoryArchive]\n(\n\t[ProductID] ASC\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]\nGO\n/****** Object:  Index [IX_TransactionHistoryArchive_ReferenceOrderID_ReferenceOrderLineID]    Script Date: 2/3/24 12:03:02 AM ******/\nCREATE NONCLUSTERED INDEX [IX_TransactionHistoryArchive_ReferenceOrderID_ReferenceOrderLineID] ON [Production].[TransactionHistoryArchive]\n(\n\t[ReferenceOrderID] ASC,\n\t[ReferenceOrderLineID] ASC\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]\nGO\nALTER TABLE [Production].[TransactionHistoryArchive] ADD  CONSTRAINT [DF_TransactionHistoryArchive_ReferenceOrderLineID]  DEFAULT ((0)) FOR [ReferenceOrderLineID]\nGO\nALTER TABLE [Production].[TransactionHistoryArchive] ADD  CONSTRAINT [DF_TransactionHistoryArchive_TransactionDate]  DEFAULT (getdate()) FOR [TransactionDate]\nGO\nALTER TABLE [Production].[TransactionHistoryArchive] ADD  CONSTRAINT [DF_TransactionHistoryArchive_ModifiedDate]  DEFAULT (getdate()) FOR [ModifiedDate]\nGO\nALTER TABLE [Production].[TransactionHistoryArchive]  WITH CHECK ADD  CONSTRAINT [CK_TransactionHistoryArchive_TransactionType] CHECK  ((upper([TransactionType])='P' OR upper([TransactionType])='S' OR upper([TransactionType])='W'))\nGO\nALTER TABLE [Production].[TransactionHistoryArchive] CHECK CONSTRAINT [CK_TransactionHistoryArchive_TransactionType]\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key for TransactionHistoryArchive records.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'TransactionHistoryArchive', @level2type=N'COLUMN',@level2name=N'TransactionID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Product identification number. Foreign key to Product.ProductID.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'TransactionHistoryArchive', @level2type=N'COLUMN',@level2name=N'ProductID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Purchase order, sales order, or work order identification number.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'TransactionHistoryArchive', @level2type=N'COLUMN',@level2name=N'ReferenceOrderID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Line number associated with the purchase order, sales order, or work order.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'TransactionHistoryArchive', @level2type=N'COLUMN',@level2name=N'ReferenceOrderLineID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of 0' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'TransactionHistoryArchive', @level2type=N'CONSTRAINT',@level2name=N'DF_TransactionHistoryArchive_ReferenceOrderLineID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Date and time of the transaction.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'TransactionHistoryArchive', @level2type=N'COLUMN',@level2name=N'TransactionDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of GETDATE()' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'TransactionHistoryArchive', @level2type=N'CONSTRAINT',@level2name=N'DF_TransactionHistoryArchive_TransactionDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'W = Work Order, S = Sales Order, P = Purchase Order' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'TransactionHistoryArchive', @level2type=N'COLUMN',@level2name=N'TransactionType'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Product quantity.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'TransactionHistoryArchive', @level2type=N'COLUMN',@level2name=N'Quantity'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Product cost.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'TransactionHistoryArchive', @level2type=N'COLUMN',@level2name=N'ActualCost'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Date and time the record was last updated.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'TransactionHistoryArchive', @level2type=N'COLUMN',@level2name=N'ModifiedDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of GETDATE()' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'TransactionHistoryArchive', @level2type=N'CONSTRAINT',@level2name=N'DF_TransactionHistoryArchive_ModifiedDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key (clustered) constraint' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'TransactionHistoryArchive', @level2type=N'CONSTRAINT',@level2name=N'PK_TransactionHistoryArchive_TransactionID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Nonclustered index.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'TransactionHistoryArchive', @level2type=N'INDEX',@level2name=N'IX_TransactionHistoryArchive_ProductID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Nonclustered index.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'TransactionHistoryArchive', @level2type=N'INDEX',@level2name=N'IX_TransactionHistoryArchive_ReferenceOrderID_ReferenceOrderLineID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Transactions for previous years.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'TransactionHistoryArchive'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Check constraint [TransactionType]=''p'' OR [TransactionType]=''s'' OR [TransactionType]=''w'' OR [TransactionType]=''P'' OR [TransactionType]=''S'' OR [TransactionType]=''W''' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'TransactionHistoryArchive', @level2type=N'CONSTRAINT',@level2name=N'CK_TransactionHistoryArchive_TransactionType'\nGO\n", "output_text": "CREATE TABLE production.transactionhistoryarchive (\n    transactionid integer NOT NULL,\n    productid integer NOT NULL,\n    referenceorderid integer NOT NULL,\n    referenceorderlineid integer DEFAULT 0 NOT NULL,\n    transactiondate timestamp without time zone DEFAULT now() NOT NULL,\n    transactiontype character(1) NOT NULL,\n    quantity integer NOT NULL,\n    actualcost numeric NOT NULL,\n    modifieddate timestamp without time zone DEFAULT now() NOT NULL,\n    CONSTRAINT \"CK_TransactionHistoryArchive_TransactionType\" CHECK ((upper((transactiontype)::text) = ANY (ARRAY['W'::text, 'S'::text, 'P'::text])))\n);\n\n\n--\n-- Name: TABLE transactionhistoryarchive; Type: COMMENT; Schema: production; Owner: -\n--\n\nCOMMENT ON TABLE production.transactionhistoryarchive IS 'Transactions for previous years.';\n\n\n--\n-- Name: COLUMN transactionhistoryarchive.transactionid; Type: COMMENT; Schema: production; Owner: -\n--\n\nCOMMENT ON COLUMN production.transactionhistoryarchive.transactionid IS 'Primary key for TransactionHistoryArchive records.';\n\n\n--\n-- Name: COLUMN transactionhistoryarchive.productid; Type: COMMENT; Schema: production; Owner: -\n--\n\nCOMMENT ON COLUMN production.transactionhistoryarchive.productid IS 'Product identification number. Foreign key to Product.ProductID.';\n\n\n--\n-- Name: COLUMN transactionhistoryarchive.referenceorderid; Type: COMMENT; Schema: production; Owner: -\n--\n\nCOMMENT ON COLUMN production.transactionhistoryarchive.referenceorderid IS 'Purchase order, sales order, or work order identification number.';\n\n\n--\n-- Name: COLUMN transactionhistoryarchive.referenceorderlineid; Type: COMMENT; Schema: production; Owner: -\n--\n\nCOMMENT ON COLUMN production.transactionhistoryarchive.referenceorderlineid IS 'Line number associated with the purchase order, sales order, or work order.';\n\n\n--\n-- Name: COLUMN transactionhistoryarchive.transactiondate; Type: COMMENT; Schema: production; Owner: -\n--\n\nCOMMENT ON COLUMN production.transactionhistoryarchive.transactiondate IS 'Date and time of the transaction.';\n\n\n--\n-- Name: COLUMN transactionhistoryarchive.transactiontype; Type: COMMENT; Schema: production; Owner: -\n--\n\nCOMMENT ON COLUMN production.transactionhistoryarchive.transactiontype IS 'W = Work Order, S = Sales Order, P = Purchase Order';\n\n\n--\n-- Name: COLUMN transactionhistoryarchive.quantity; Type: COMMENT; Schema: production; Owner: -\n--\n\nCOMMENT ON COLUMN production.transactionhistoryarchive.quantity IS 'Product quantity.';\n\n\n--\n-- Name: COLUMN transactionhistoryarchive.actualcost; Type: COMMENT; Schema: production; Owner: -\n--\n\nCOMMENT ON COLUMN production.transactionhistoryarchive.actualcost IS 'Product cost.';"}
{"input_text": "convert following DDL/DML code from MSSQL to Postgresql \nUSE [adventureworks]\nGO\n/****** Object:  Table [Production].[UnitMeasure]    Script Date: 2/3/24 12:02:59 AM ******/\nSET ANSI_NULLS ON\nGO\nSET QUOTED_IDENTIFIER ON\nGO\nCREATE TABLE [Production].[UnitMeasure](\n\t[UnitMeasureCode] [nchar](3) NOT NULL,\n\t[Name] [dbo].[Name] NOT NULL,\n\t[ModifiedDate] [datetime] NOT NULL,\n CONSTRAINT [PK_UnitMeasure_UnitMeasureCode] PRIMARY KEY CLUSTERED \n(\n\t[UnitMeasureCode] ASC\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]\n) ON [PRIMARY]\nGO\nSET ANSI_PADDING ON\nGO\n/****** Object:  Index [AK_UnitMeasure_Name]    Script Date: 2/3/24 12:03:02 AM ******/\nCREATE UNIQUE NONCLUSTERED INDEX [AK_UnitMeasure_Name] ON [Production].[UnitMeasure]\n(\n\t[Name] ASC\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]\nGO\nALTER TABLE [Production].[UnitMeasure] ADD  CONSTRAINT [DF_UnitMeasure_ModifiedDate]  DEFAULT (getdate()) FOR [ModifiedDate]\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'UnitMeasure', @level2type=N'COLUMN',@level2name=N'UnitMeasureCode'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Unit of measure description.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'UnitMeasure', @level2type=N'COLUMN',@level2name=N'Name'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Date and time the record was last updated.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'UnitMeasure', @level2type=N'COLUMN',@level2name=N'ModifiedDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of GETDATE()' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'UnitMeasure', @level2type=N'CONSTRAINT',@level2name=N'DF_UnitMeasure_ModifiedDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key (clustered) constraint' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'UnitMeasure', @level2type=N'CONSTRAINT',@level2name=N'PK_UnitMeasure_UnitMeasureCode'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Unique nonclustered index.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'UnitMeasure', @level2type=N'INDEX',@level2name=N'AK_UnitMeasure_Name'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Unit of measure lookup table.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'UnitMeasure'\nGO\n", "output_text": "CREATE TABLE production.unitmeasure (\n    unitmeasurecode character(3) NOT NULL,\n    name public.\"Name\" NOT NULL,\n    modifieddate timestamp without time zone DEFAULT now() NOT NULL\n);\n\n\n--\n-- Name: TABLE unitmeasure; Type: COMMENT; Schema: production; Owner: -\n--\n\nCOMMENT ON TABLE production.unitmeasure IS 'Unit of measure lookup table.';\n\n\n--\n-- Name: COLUMN unitmeasure.unitmeasurecode; Type: COMMENT; Schema: production; Owner: -\n--\n\nCOMMENT ON COLUMN production.unitmeasure.unitmeasurecode IS 'Primary key.';\n\n\n--\n-- Name: COLUMN unitmeasure.name; Type: COMMENT; Schema: production; Owner: -\n--\n\nCOMMENT ON COLUMN production.unitmeasure.name IS 'Unit of measure description.';"}
{"input_text": "convert following DDL/DML code from MSSQL to Postgresql \nUSE [adventureworks]\nGO\n/****** Object:  Table [Production].[WorkOrder]    Script Date: 2/3/24 12:02:59 AM ******/\nSET ANSI_NULLS ON\nGO\nSET QUOTED_IDENTIFIER ON\nGO\nCREATE TABLE [Production].[WorkOrder](\n\t[WorkOrderID] [int] IDENTITY(1,1) NOT NULL,\n\t[ProductID] [int] NOT NULL,\n\t[OrderQty] [int] NOT NULL,\n\t[StockedQty]  AS (isnull([OrderQty]-[ScrappedQty],(0))),\n\t[ScrappedQty] [smallint] NOT NULL,\n\t[StartDate] [datetime] NOT NULL,\n\t[EndDate] [datetime] NULL,\n\t[DueDate] [datetime] NOT NULL,\n\t[ScrapReasonID] [smallint] NULL,\n\t[ModifiedDate] [datetime] NOT NULL,\n CONSTRAINT [PK_WorkOrder_WorkOrderID] PRIMARY KEY CLUSTERED \n(\n\t[WorkOrderID] ASC\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]\n) ON [PRIMARY]\nGO\n/****** Object:  Index [IX_WorkOrder_ProductID]    Script Date: 2/3/24 12:03:02 AM ******/\nCREATE NONCLUSTERED INDEX [IX_WorkOrder_ProductID] ON [Production].[WorkOrder]\n(\n\t[ProductID] ASC\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]\nGO\n/****** Object:  Index [IX_WorkOrder_ScrapReasonID]    Script Date: 2/3/24 12:03:02 AM ******/\nCREATE NONCLUSTERED INDEX [IX_WorkOrder_ScrapReasonID] ON [Production].[WorkOrder]\n(\n\t[ScrapReasonID] ASC\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]\nGO\nALTER TABLE [Production].[WorkOrder] ADD  CONSTRAINT [DF_WorkOrder_ModifiedDate]  DEFAULT (getdate()) FOR [ModifiedDate]\nGO\nALTER TABLE [Production].[WorkOrder]  WITH CHECK ADD  CONSTRAINT [FK_WorkOrder_Product_ProductID] FOREIGN KEY([ProductID])\nREFERENCES [Production].[Product] ([ProductID])\nGO\nALTER TABLE [Production].[WorkOrder] CHECK CONSTRAINT [FK_WorkOrder_Product_ProductID]\nGO\nALTER TABLE [Production].[WorkOrder]  WITH CHECK ADD  CONSTRAINT [FK_WorkOrder_ScrapReason_ScrapReasonID] FOREIGN KEY([ScrapReasonID])\nREFERENCES [Production].[ScrapReason] ([ScrapReasonID])\nGO\nALTER TABLE [Production].[WorkOrder] CHECK CONSTRAINT [FK_WorkOrder_ScrapReason_ScrapReasonID]\nGO\nALTER TABLE [Production].[WorkOrder]  WITH CHECK ADD  CONSTRAINT [CK_WorkOrder_EndDate] CHECK  (([EndDate]>=[StartDate] OR [EndDate] IS NULL))\nGO\nALTER TABLE [Production].[WorkOrder] CHECK CONSTRAINT [CK_WorkOrder_EndDate]\nGO\nALTER TABLE [Production].[WorkOrder]  WITH CHECK ADD  CONSTRAINT [CK_WorkOrder_OrderQty] CHECK  (([OrderQty]>(0)))\nGO\nALTER TABLE [Production].[WorkOrder] CHECK CONSTRAINT [CK_WorkOrder_OrderQty]\nGO\nALTER TABLE [Production].[WorkOrder]  WITH CHECK ADD  CONSTRAINT [CK_WorkOrder_ScrappedQty] CHECK  (([ScrappedQty]>=(0)))\nGO\nALTER TABLE [Production].[WorkOrder] CHECK CONSTRAINT [CK_WorkOrder_ScrappedQty]\nGO\n/****** Object:  Trigger [Production].[iWorkOrder]    Script Date: 2/3/24 12:03:04 AM ******/\nSET ANSI_NULLS ON\nGO\nSET QUOTED_IDENTIFIER ON\nGO\n\nCREATE TRIGGER [Production].[iWorkOrder] ON [Production].[WorkOrder] \nAFTER INSERT AS \nBEGIN\n    DECLARE @Count int;\n\n    SET @Count = @@ROWCOUNT;\n    IF @Count = 0 \n        RETURN;\n\n    SET NOCOUNT ON;\n\n    BEGIN TRY\n        INSERT INTO [Production].[TransactionHistory](\n            [ProductID]\n            ,[ReferenceOrderID]\n            ,[TransactionType]\n            ,[TransactionDate]\n            ,[Quantity]\n            ,[ActualCost])\n        SELECT \n            inserted.[ProductID]\n            ,inserted.[WorkOrderID]\n            ,'W'\n            ,GETDATE()\n            ,inserted.[OrderQty]\n            ,0\n        FROM inserted;\n    END TRY\n    BEGIN CATCH\n        EXECUTE [dbo].[uspPrintError];\n\n        -- Rollback any active or uncommittable transactions before\n        -- inserting information in the ErrorLog\n        IF @@TRANCOUNT > 0\n        BEGIN\n            ROLLBACK TRANSACTION;\n        END\n\n        EXECUTE [dbo].[uspLogError];\n    END CATCH;\nEND;\n\nGO\nALTER TABLE [Production].[WorkOrder] ENABLE TRIGGER [iWorkOrder]\nGO\n/****** Object:  Trigger [Production].[uWorkOrder]    Script Date: 2/3/24 12:03:04 AM ******/\nSET ANSI_NULLS ON\nGO\nSET QUOTED_IDENTIFIER ON\nGO\n\nCREATE TRIGGER [Production].[uWorkOrder] ON [Production].[WorkOrder] \nAFTER UPDATE AS \nBEGIN\n    DECLARE @Count int;\n\n    SET @Count = @@ROWCOUNT;\n    IF @Count = 0 \n        RETURN;\n\n    SET NOCOUNT ON;\n\n    BEGIN TRY\n        IF UPDATE([ProductID]) OR UPDATE([OrderQty])\n        BEGIN\n            INSERT INTO [Production].[TransactionHistory](\n                [ProductID]\n                ,[ReferenceOrderID]\n                ,[TransactionType]\n                ,[TransactionDate]\n                ,[Quantity])\n            SELECT \n                inserted.[ProductID]\n                ,inserted.[WorkOrderID]\n                ,'W'\n                ,GETDATE()\n                ,inserted.[OrderQty]\n            FROM inserted;\n        END;\n    END TRY\n    BEGIN CATCH\n        EXECUTE [dbo].[uspPrintError];\n\n        -- Rollback any active or uncommittable transactions before\n        -- inserting information in the ErrorLog\n        IF @@TRANCOUNT > 0\n        BEGIN\n            ROLLBACK TRANSACTION;\n        END\n\n        EXECUTE [dbo].[uspLogError];\n    END CATCH;\nEND;\n\nGO\nALTER TABLE [Production].[WorkOrder] ENABLE TRIGGER [uWorkOrder]\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key for WorkOrder records.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'WorkOrder', @level2type=N'COLUMN',@level2name=N'WorkOrderID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Product identification number. Foreign key to Product.ProductID.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'WorkOrder', @level2type=N'COLUMN',@level2name=N'ProductID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Product quantity to build.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'WorkOrder', @level2type=N'COLUMN',@level2name=N'OrderQty'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Quantity built and put in inventory.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'WorkOrder', @level2type=N'COLUMN',@level2name=N'StockedQty'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Quantity that failed inspection.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'WorkOrder', @level2type=N'COLUMN',@level2name=N'ScrappedQty'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Work order start date.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'WorkOrder', @level2type=N'COLUMN',@level2name=N'StartDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Work order end date.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'WorkOrder', @level2type=N'COLUMN',@level2name=N'EndDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Work order due date.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'WorkOrder', @level2type=N'COLUMN',@level2name=N'DueDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Reason for inspection failure.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'WorkOrder', @level2type=N'COLUMN',@level2name=N'ScrapReasonID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Date and time the record was last updated.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'WorkOrder', @level2type=N'COLUMN',@level2name=N'ModifiedDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of GETDATE()' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'WorkOrder', @level2type=N'CONSTRAINT',@level2name=N'DF_WorkOrder_ModifiedDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key (clustered) constraint' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'WorkOrder', @level2type=N'CONSTRAINT',@level2name=N'PK_WorkOrder_WorkOrderID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Nonclustered index.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'WorkOrder', @level2type=N'INDEX',@level2name=N'IX_WorkOrder_ProductID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Nonclustered index.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'WorkOrder', @level2type=N'INDEX',@level2name=N'IX_WorkOrder_ScrapReasonID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Manufacturing work orders.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'WorkOrder'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'AFTER INSERT trigger that inserts a row in the TransactionHistory table.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'WorkOrder', @level2type=N'TRIGGER',@level2name=N'iWorkOrder'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'AFTER UPDATE trigger that inserts a row in the TransactionHistory table, updates ModifiedDate in the WorkOrder table.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'WorkOrder', @level2type=N'TRIGGER',@level2name=N'uWorkOrder'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key constraint referencing Product.ProductID.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'WorkOrder', @level2type=N'CONSTRAINT',@level2name=N'FK_WorkOrder_Product_ProductID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key constraint referencing ScrapReason.ScrapReasonID.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'WorkOrder', @level2type=N'CONSTRAINT',@level2name=N'FK_WorkOrder_ScrapReason_ScrapReasonID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Check constraint [EndDate] >= [StartDate] OR [EndDate] IS NULL' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'WorkOrder', @level2type=N'CONSTRAINT',@level2name=N'CK_WorkOrder_EndDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Check constraint [OrderQty] > (0)' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'WorkOrder', @level2type=N'CONSTRAINT',@level2name=N'CK_WorkOrder_OrderQty'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Check constraint [ScrappedQty] >= (0)' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'WorkOrder', @level2type=N'CONSTRAINT',@level2name=N'CK_WorkOrder_ScrappedQty'\nGO", "output_text": "CREATE TABLE production.workorder (\n    workorderid integer NOT NULL,\n    productid integer NOT NULL,\n    orderqty integer NOT NULL,\n    scrappedqty smallint NOT NULL,\n    startdate timestamp without time zone NOT NULL,\n    enddate timestamp without time zone,\n    duedate timestamp without time zone NOT NULL,\n    scrapreasonid smallint,\n    modifieddate timestamp without time zone DEFAULT now() NOT NULL,\n    CONSTRAINT \"CK_WorkOrder_EndDate\" CHECK (((enddate >= startdate) OR (enddate IS NULL))),\n    CONSTRAINT \"CK_WorkOrder_OrderQty\" CHECK ((orderqty > 0)),\n    CONSTRAINT \"CK_WorkOrder_ScrappedQty\" CHECK ((scrappedqty >= 0))\n);\n\n\n--\n-- Name: TABLE workorder; Type: COMMENT; Schema: production; Owner: -\n--\n\nCOMMENT ON TABLE production.workorder IS 'Manufacturing work orders.';\n\n\n--\n-- Name: COLUMN workorder.workorderid; Type: COMMENT; Schema: production; Owner: -\n--\n\nCOMMENT ON COLUMN production.workorder.workorderid IS 'Primary key for WorkOrder records.';\n\n\n--\n-- Name: COLUMN workorder.productid; Type: COMMENT; Schema: production; Owner: -\n--\n\nCOMMENT ON COLUMN production.workorder.productid IS 'Product identification number. Foreign key to Product.ProductID.';\n\n\n--\n-- Name: COLUMN workorder.orderqty; Type: COMMENT; Schema: production; Owner: -\n--\n\nCOMMENT ON COLUMN production.workorder.orderqty IS 'Product quantity to build.';\n\n\n--\n-- Name: COLUMN workorder.scrappedqty; Type: COMMENT; Schema: production; Owner: -\n--\n\nCOMMENT ON COLUMN production.workorder.scrappedqty IS 'Quantity that failed inspection.';\n\n\n--\n-- Name: COLUMN workorder.startdate; Type: COMMENT; Schema: production; Owner: -\n--\n\nCOMMENT ON COLUMN production.workorder.startdate IS 'Work order start date.';\n\n\n--\n-- Name: COLUMN workorder.enddate; Type: COMMENT; Schema: production; Owner: -\n--\n\nCOMMENT ON COLUMN production.workorder.enddate IS 'Work order end date.';\n\n\n--\n-- Name: COLUMN workorder.duedate; Type: COMMENT; Schema: production; Owner: -\n--\n\nCOMMENT ON COLUMN production.workorder.duedate IS 'Work order due date.';\n\n\n--\n-- Name: COLUMN workorder.scrapreasonid; Type: COMMENT; Schema: production; Owner: -\n--\n\nCOMMENT ON COLUMN production.workorder.scrapreasonid IS 'Reason for inspection failure.';"}
{"input_text": "convert following DDL/DML code from MSSQL to Postgresql \nUSE [adventureworks]\nGO\n/****** Object:  Table [Production].[WorkOrderRouting]    Script Date: 2/3/24 12:02:59 AM ******/\nSET ANSI_NULLS ON\nGO\nSET QUOTED_IDENTIFIER ON\nGO\nCREATE TABLE [Production].[WorkOrderRouting](\n\t[WorkOrderID] [int] NOT NULL,\n\t[ProductID] [int] NOT NULL,\n\t[OperationSequence] [smallint] NOT NULL,\n\t[LocationID] [smallint] NOT NULL,\n\t[ScheduledStartDate] [datetime] NOT NULL,\n\t[ScheduledEndDate] [datetime] NOT NULL,\n\t[ActualStartDate] [datetime] NULL,\n\t[ActualEndDate] [datetime] NULL,\n\t[ActualResourceHrs] [decimal](9, 4) NULL,\n\t[PlannedCost] [money] NOT NULL,\n\t[ActualCost] [money] NULL,\n\t[ModifiedDate] [datetime] NOT NULL,\n CONSTRAINT [PK_WorkOrderRouting_WorkOrderID_ProductID_OperationSequence] PRIMARY KEY CLUSTERED \n(\n\t[WorkOrderID] ASC,\n\t[ProductID] ASC,\n\t[OperationSequence] ASC\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]\n) ON [PRIMARY]\nGO\n/****** Object:  Index [IX_WorkOrderRouting_ProductID]    Script Date: 2/3/24 12:03:02 AM ******/\nCREATE NONCLUSTERED INDEX [IX_WorkOrderRouting_ProductID] ON [Production].[WorkOrderRouting]\n(\n\t[ProductID] ASC\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]\nGO\nALTER TABLE [Production].[WorkOrderRouting] ADD  CONSTRAINT [DF_WorkOrderRouting_ModifiedDate]  DEFAULT (getdate()) FOR [ModifiedDate]\nGO\nALTER TABLE [Production].[WorkOrderRouting]  WITH CHECK ADD  CONSTRAINT [FK_WorkOrderRouting_Location_LocationID] FOREIGN KEY([LocationID])\nREFERENCES [Production].[Location] ([LocationID])\nGO\nALTER TABLE [Production].[WorkOrderRouting] CHECK CONSTRAINT [FK_WorkOrderRouting_Location_LocationID]\nGO\nALTER TABLE [Production].[WorkOrderRouting]  WITH CHECK ADD  CONSTRAINT [FK_WorkOrderRouting_WorkOrder_WorkOrderID] FOREIGN KEY([WorkOrderID])\nREFERENCES [Production].[WorkOrder] ([WorkOrderID])\nGO\nALTER TABLE [Production].[WorkOrderRouting] CHECK CONSTRAINT [FK_WorkOrderRouting_WorkOrder_WorkOrderID]\nGO\nALTER TABLE [Production].[WorkOrderRouting]  WITH CHECK ADD  CONSTRAINT [CK_WorkOrderRouting_ActualCost] CHECK  (([ActualCost]>(0.00)))\nGO\nALTER TABLE [Production].[WorkOrderRouting] CHECK CONSTRAINT [CK_WorkOrderRouting_ActualCost]\nGO\nALTER TABLE [Production].[WorkOrderRouting]  WITH CHECK ADD  CONSTRAINT [CK_WorkOrderRouting_ActualEndDate] CHECK  (([ActualEndDate]>=[ActualStartDate] OR [ActualEndDate] IS NULL OR [ActualStartDate] IS NULL))\nGO\nALTER TABLE [Production].[WorkOrderRouting] CHECK CONSTRAINT [CK_WorkOrderRouting_ActualEndDate]\nGO\nALTER TABLE [Production].[WorkOrderRouting]  WITH CHECK ADD  CONSTRAINT [CK_WorkOrderRouting_ActualResourceHrs] CHECK  (([ActualResourceHrs]>=(0.0000)))\nGO\nALTER TABLE [Production].[WorkOrderRouting] CHECK CONSTRAINT [CK_WorkOrderRouting_ActualResourceHrs]\nGO\nALTER TABLE [Production].[WorkOrderRouting]  WITH CHECK ADD  CONSTRAINT [CK_WorkOrderRouting_PlannedCost] CHECK  (([PlannedCost]>(0.00)))\nGO\nALTER TABLE [Production].[WorkOrderRouting] CHECK CONSTRAINT [CK_WorkOrderRouting_PlannedCost]\nGO\nALTER TABLE [Production].[WorkOrderRouting]  WITH CHECK ADD  CONSTRAINT [CK_WorkOrderRouting_ScheduledEndDate] CHECK  (([ScheduledEndDate]>=[ScheduledStartDate]))\nGO\nALTER TABLE [Production].[WorkOrderRouting] CHECK CONSTRAINT [CK_WorkOrderRouting_ScheduledEndDate]\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key. Foreign key to WorkOrder.WorkOrderID.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'WorkOrderRouting', @level2type=N'COLUMN',@level2name=N'WorkOrderID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key. Foreign key to Product.ProductID.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'WorkOrderRouting', @level2type=N'COLUMN',@level2name=N'ProductID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key. Indicates the manufacturing process sequence.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'WorkOrderRouting', @level2type=N'COLUMN',@level2name=N'OperationSequence'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Manufacturing location where the part is processed. Foreign key to Location.LocationID.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'WorkOrderRouting', @level2type=N'COLUMN',@level2name=N'LocationID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Planned manufacturing start date.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'WorkOrderRouting', @level2type=N'COLUMN',@level2name=N'ScheduledStartDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Planned manufacturing end date.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'WorkOrderRouting', @level2type=N'COLUMN',@level2name=N'ScheduledEndDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Actual start date.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'WorkOrderRouting', @level2type=N'COLUMN',@level2name=N'ActualStartDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Actual end date.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'WorkOrderRouting', @level2type=N'COLUMN',@level2name=N'ActualEndDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Number of manufacturing hours used.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'WorkOrderRouting', @level2type=N'COLUMN',@level2name=N'ActualResourceHrs'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Estimated manufacturing cost.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'WorkOrderRouting', @level2type=N'COLUMN',@level2name=N'PlannedCost'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Actual manufacturing cost.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'WorkOrderRouting', @level2type=N'COLUMN',@level2name=N'ActualCost'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Date and time the record was last updated.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'WorkOrderRouting', @level2type=N'COLUMN',@level2name=N'ModifiedDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of GETDATE()' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'WorkOrderRouting', @level2type=N'CONSTRAINT',@level2name=N'DF_WorkOrderRouting_ModifiedDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key (clustered) constraint' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'WorkOrderRouting', @level2type=N'CONSTRAINT',@level2name=N'PK_WorkOrderRouting_WorkOrderID_ProductID_OperationSequence'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Nonclustered index.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'WorkOrderRouting', @level2type=N'INDEX',@level2name=N'IX_WorkOrderRouting_ProductID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Work order details.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'WorkOrderRouting'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key constraint referencing Location.LocationID.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'WorkOrderRouting', @level2type=N'CONSTRAINT',@level2name=N'FK_WorkOrderRouting_Location_LocationID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key constraint referencing WorkOrder.WorkOrderID.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'WorkOrderRouting', @level2type=N'CONSTRAINT',@level2name=N'FK_WorkOrderRouting_WorkOrder_WorkOrderID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Check constraint [ActualCost] > (0.00)' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'WorkOrderRouting', @level2type=N'CONSTRAINT',@level2name=N'CK_WorkOrderRouting_ActualCost'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Check constraint [ActualEndDate] >= [ActualStartDate] OR [ActualEndDate] IS NULL OR [ActualStartDate] IS NULL' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'WorkOrderRouting', @level2type=N'CONSTRAINT',@level2name=N'CK_WorkOrderRouting_ActualEndDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Check constraint [ActualResourceHrs] >= (0.0000)' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'WorkOrderRouting', @level2type=N'CONSTRAINT',@level2name=N'CK_WorkOrderRouting_ActualResourceHrs'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Check constraint [PlannedCost] > (0.00)' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'WorkOrderRouting', @level2type=N'CONSTRAINT',@level2name=N'CK_WorkOrderRouting_PlannedCost'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Check constraint [ScheduledEndDate] >= [ScheduledStartDate]' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'WorkOrderRouting', @level2type=N'CONSTRAINT',@level2name=N'CK_WorkOrderRouting_ScheduledEndDate'\nGO", "output_text": "CREATE TABLE production.workorderrouting (\n    workorderid integer NOT NULL,\n    productid integer NOT NULL,\n    operationsequence smallint NOT NULL,\n    locationid smallint NOT NULL,\n    scheduledstartdate timestamp without time zone NOT NULL,\n    scheduledenddate timestamp without time zone NOT NULL,\n    actualstartdate timestamp without time zone,\n    actualenddate timestamp without time zone,\n    actualresourcehrs numeric(9,4),\n    plannedcost numeric NOT NULL,\n    actualcost numeric,\n    modifieddate timestamp without time zone DEFAULT now() NOT NULL,\n    CONSTRAINT \"CK_WorkOrderRouting_ActualCost\" CHECK ((actualcost > 0.00)),\n    CONSTRAINT \"CK_WorkOrderRouting_ActualEndDate\" CHECK (((actualenddate >= actualstartdate) OR (actualenddate IS NULL) OR (actualstartdate IS NULL))),\n    CONSTRAINT \"CK_WorkOrderRouting_ActualResourceHrs\" CHECK ((actualresourcehrs >= 0.0000)),\n    CONSTRAINT \"CK_WorkOrderRouting_PlannedCost\" CHECK ((plannedcost > 0.00)),\n    CONSTRAINT \"CK_WorkOrderRouting_ScheduledEndDate\" CHECK ((scheduledenddate >= scheduledstartdate))\n);\n\n\n--\n-- Name: TABLE workorderrouting; Type: COMMENT; Schema: production; Owner: -\n--\n\nCOMMENT ON TABLE production.workorderrouting IS 'Work order details.';\n\n\n--\n-- Name: COLUMN workorderrouting.workorderid; Type: COMMENT; Schema: production; Owner: -\n--\n\nCOMMENT ON COLUMN production.workorderrouting.workorderid IS 'Primary key. Foreign key to WorkOrder.WorkOrderID.';\n\n\n--\n-- Name: COLUMN workorderrouting.productid; Type: COMMENT; Schema: production; Owner: -\n--\n\nCOMMENT ON COLUMN production.workorderrouting.productid IS 'Primary key. Foreign key to Product.ProductID.';\n\n\n--\n-- Name: COLUMN workorderrouting.operationsequence; Type: COMMENT; Schema: production; Owner: -\n--\n\nCOMMENT ON COLUMN production.workorderrouting.operationsequence IS 'Primary key. Indicates the manufacturing process sequence.';\n\n\n--\n-- Name: COLUMN workorderrouting.locationid; Type: COMMENT; Schema: production; Owner: -\n--\n\nCOMMENT ON COLUMN production.workorderrouting.locationid IS 'Manufacturing location where the part is processed. Foreign key to Location.LocationID.';\n\n\n--\n-- Name: COLUMN workorderrouting.scheduledstartdate; Type: COMMENT; Schema: production; Owner: -\n--\n\nCOMMENT ON COLUMN production.workorderrouting.scheduledstartdate IS 'Planned manufacturing start date.';\n\n\n--\n-- Name: COLUMN workorderrouting.scheduledenddate; Type: COMMENT; Schema: production; Owner: -\n--\n\nCOMMENT ON COLUMN production.workorderrouting.scheduledenddate IS 'Planned manufacturing end date.';\n\n\n--\n-- Name: COLUMN workorderrouting.actualstartdate; Type: COMMENT; Schema: production; Owner: -\n--\n\nCOMMENT ON COLUMN production.workorderrouting.actualstartdate IS 'Actual start date.';\n\n\n--\n-- Name: COLUMN workorderrouting.actualenddate; Type: COMMENT; Schema: production; Owner: -\n--\n\nCOMMENT ON COLUMN production.workorderrouting.actualenddate IS 'Actual end date.';\n\n\n--\n-- Name: COLUMN workorderrouting.actualresourcehrs; Type: COMMENT; Schema: production; Owner: -\n--\n\nCOMMENT ON COLUMN production.workorderrouting.actualresourcehrs IS 'Number of manufacturing hours used.';\n\n\n--\n-- Name: COLUMN workorderrouting.plannedcost; Type: COMMENT; Schema: production; Owner: -\n--\n\nCOMMENT ON COLUMN production.workorderrouting.plannedcost IS 'Estimated manufacturing cost.';\n\n\n--\n-- Name: COLUMN workorderrouting.actualcost; Type: COMMENT; Schema: production; Owner: -\n--\n\nCOMMENT ON COLUMN production.workorderrouting.actualcost IS 'Actual manufacturing cost.';"}
{"input_text": "convert following DDL/DML code from MSSQL to Postgresql \nUSE [adventureworks]\nGO\n/****** Object:  Table [Purchasing].[ProductVendor]    Script Date: 2/3/24 12:02:59 AM ******/\nSET ANSI_NULLS ON\nGO\nSET QUOTED_IDENTIFIER ON\nGO\nCREATE TABLE [Purchasing].[ProductVendor](\n\t[ProductID] [int] NOT NULL,\n\t[BusinessEntityID] [int] NOT NULL,\n\t[AverageLeadTime] [int] NOT NULL,\n\t[StandardPrice] [money] NOT NULL,\n\t[LastReceiptCost] [money] NULL,\n\t[LastReceiptDate] [datetime] NULL,\n\t[MinOrderQty] [int] NOT NULL,\n\t[MaxOrderQty] [int] NOT NULL,\n\t[OnOrderQty] [int] NULL,\n\t[UnitMeasureCode] [nchar](3) NOT NULL,\n\t[ModifiedDate] [datetime] NOT NULL,\n CONSTRAINT [PK_ProductVendor_ProductID_BusinessEntityID] PRIMARY KEY CLUSTERED \n(\n\t[ProductID] ASC,\n\t[BusinessEntityID] ASC\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]\n) ON [PRIMARY]\nGO\n/****** Object:  Index [IX_ProductVendor_BusinessEntityID]    Script Date: 2/3/24 12:03:02 AM ******/\nCREATE NONCLUSTERED INDEX [IX_ProductVendor_BusinessEntityID] ON [Purchasing].[ProductVendor]\n(\n\t[BusinessEntityID] ASC\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]\nGO\nSET ANSI_PADDING ON\nGO\n/****** Object:  Index [IX_ProductVendor_UnitMeasureCode]    Script Date: 2/3/24 12:03:02 AM ******/\nCREATE NONCLUSTERED INDEX [IX_ProductVendor_UnitMeasureCode] ON [Purchasing].[ProductVendor]\n(\n\t[UnitMeasureCode] ASC\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]\nGO\nALTER TABLE [Purchasing].[ProductVendor] ADD  CONSTRAINT [DF_ProductVendor_ModifiedDate]  DEFAULT (getdate()) FOR [ModifiedDate]\nGO\nALTER TABLE [Purchasing].[ProductVendor]  WITH CHECK ADD  CONSTRAINT [FK_ProductVendor_Product_ProductID] FOREIGN KEY([ProductID])\nREFERENCES [Production].[Product] ([ProductID])\nGO\nALTER TABLE [Purchasing].[ProductVendor] CHECK CONSTRAINT [FK_ProductVendor_Product_ProductID]\nGO\nALTER TABLE [Purchasing].[ProductVendor]  WITH CHECK ADD  CONSTRAINT [FK_ProductVendor_UnitMeasure_UnitMeasureCode] FOREIGN KEY([UnitMeasureCode])\nREFERENCES [Production].[UnitMeasure] ([UnitMeasureCode])\nGO\nALTER TABLE [Purchasing].[ProductVendor] CHECK CONSTRAINT [FK_ProductVendor_UnitMeasure_UnitMeasureCode]\nGO\nALTER TABLE [Purchasing].[ProductVendor]  WITH CHECK ADD  CONSTRAINT [FK_ProductVendor_Vendor_BusinessEntityID] FOREIGN KEY([BusinessEntityID])\nREFERENCES [Purchasing].[Vendor] ([BusinessEntityID])\nGO\nALTER TABLE [Purchasing].[ProductVendor] CHECK CONSTRAINT [FK_ProductVendor_Vendor_BusinessEntityID]\nGO\nALTER TABLE [Purchasing].[ProductVendor]  WITH CHECK ADD  CONSTRAINT [CK_ProductVendor_AverageLeadTime] CHECK  (([AverageLeadTime]>=(1)))\nGO\nALTER TABLE [Purchasing].[ProductVendor] CHECK CONSTRAINT [CK_ProductVendor_AverageLeadTime]\nGO\nALTER TABLE [Purchasing].[ProductVendor]  WITH CHECK ADD  CONSTRAINT [CK_ProductVendor_LastReceiptCost] CHECK  (([LastReceiptCost]>(0.00)))\nGO\nALTER TABLE [Purchasing].[ProductVendor] CHECK CONSTRAINT [CK_ProductVendor_LastReceiptCost]\nGO\nALTER TABLE [Purchasing].[ProductVendor]  WITH CHECK ADD  CONSTRAINT [CK_ProductVendor_MaxOrderQty] CHECK  (([MaxOrderQty]>=(1)))\nGO\nALTER TABLE [Purchasing].[ProductVendor] CHECK CONSTRAINT [CK_ProductVendor_MaxOrderQty]\nGO\nALTER TABLE [Purchasing].[ProductVendor]  WITH CHECK ADD  CONSTRAINT [CK_ProductVendor_MinOrderQty] CHECK  (([MinOrderQty]>=(1)))\nGO\nALTER TABLE [Purchasing].[ProductVendor] CHECK CONSTRAINT [CK_ProductVendor_MinOrderQty]\nGO\nALTER TABLE [Purchasing].[ProductVendor]  WITH CHECK ADD  CONSTRAINT [CK_ProductVendor_OnOrderQty] CHECK  (([OnOrderQty]>=(0)))\nGO\nALTER TABLE [Purchasing].[ProductVendor] CHECK CONSTRAINT [CK_ProductVendor_OnOrderQty]\nGO\nALTER TABLE [Purchasing].[ProductVendor]  WITH CHECK ADD  CONSTRAINT [CK_ProductVendor_StandardPrice] CHECK  (([StandardPrice]>(0.00)))\nGO\nALTER TABLE [Purchasing].[ProductVendor] CHECK CONSTRAINT [CK_ProductVendor_StandardPrice]\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key. Foreign key to Product.ProductID.' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'ProductVendor', @level2type=N'COLUMN',@level2name=N'ProductID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key. Foreign key to Vendor.BusinessEntityID.' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'ProductVendor', @level2type=N'COLUMN',@level2name=N'BusinessEntityID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The average span of time (in days) between placing an order with the vendor and receiving the purchased product.' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'ProductVendor', @level2type=N'COLUMN',@level2name=N'AverageLeadTime'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The vendor''s usual selling price.' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'ProductVendor', @level2type=N'COLUMN',@level2name=N'StandardPrice'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The selling price when last purchased.' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'ProductVendor', @level2type=N'COLUMN',@level2name=N'LastReceiptCost'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Date the product was last received by the vendor.' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'ProductVendor', @level2type=N'COLUMN',@level2name=N'LastReceiptDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The maximum quantity that should be ordered.' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'ProductVendor', @level2type=N'COLUMN',@level2name=N'MinOrderQty'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The minimum quantity that should be ordered.' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'ProductVendor', @level2type=N'COLUMN',@level2name=N'MaxOrderQty'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The quantity currently on order.' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'ProductVendor', @level2type=N'COLUMN',@level2name=N'OnOrderQty'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The product''s unit of measure.' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'ProductVendor', @level2type=N'COLUMN',@level2name=N'UnitMeasureCode'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Date and time the record was last updated.' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'ProductVendor', @level2type=N'COLUMN',@level2name=N'ModifiedDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of GETDATE()' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'ProductVendor', @level2type=N'CONSTRAINT',@level2name=N'DF_ProductVendor_ModifiedDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key (clustered) constraint' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'ProductVendor', @level2type=N'CONSTRAINT',@level2name=N'PK_ProductVendor_ProductID_BusinessEntityID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Nonclustered index.' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'ProductVendor', @level2type=N'INDEX',@level2name=N'IX_ProductVendor_BusinessEntityID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Nonclustered index.' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'ProductVendor', @level2type=N'INDEX',@level2name=N'IX_ProductVendor_UnitMeasureCode'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Cross-reference table mapping vendors with the products they supply.' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'ProductVendor'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key constraint referencing Product.ProductID.' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'ProductVendor', @level2type=N'CONSTRAINT',@level2name=N'FK_ProductVendor_Product_ProductID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key constraint referencing UnitMeasure.UnitMeasureCode.' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'ProductVendor', @level2type=N'CONSTRAINT',@level2name=N'FK_ProductVendor_UnitMeasure_UnitMeasureCode'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key constraint referencing Vendor.BusinessEntityID.' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'ProductVendor', @level2type=N'CONSTRAINT',@level2name=N'FK_ProductVendor_Vendor_BusinessEntityID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Check constraint [AverageLeadTime] >= (1)' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'ProductVendor', @level2type=N'CONSTRAINT',@level2name=N'CK_ProductVendor_AverageLeadTime'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Check constraint [LastReceiptCost] > (0.00)' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'ProductVendor', @level2type=N'CONSTRAINT',@level2name=N'CK_ProductVendor_LastReceiptCost'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Check constraint [MaxOrderQty] >= (1)' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'ProductVendor', @level2type=N'CONSTRAINT',@level2name=N'CK_ProductVendor_MaxOrderQty'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Check constraint [MinOrderQty] >= (1)' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'ProductVendor', @level2type=N'CONSTRAINT',@level2name=N'CK_ProductVendor_MinOrderQty'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Check constraint [OnOrderQty] >= (0)' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'ProductVendor', @level2type=N'CONSTRAINT',@level2name=N'CK_ProductVendor_OnOrderQty'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Check constraint [StandardPrice] > (0.00)' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'ProductVendor', @level2type=N'CONSTRAINT',@level2name=N'CK_ProductVendor_StandardPrice'\nGO\n", "output_text": "CREATE TABLE purchasing.productvendor (\n    productid integer NOT NULL,\n    businessentityid integer NOT NULL,\n    averageleadtime integer NOT NULL,\n    standardprice numeric NOT NULL,\n    lastreceiptcost numeric,\n    lastreceiptdate timestamp without time zone,\n    minorderqty integer NOT NULL,\n    maxorderqty integer NOT NULL,\n    onorderqty integer,\n    unitmeasurecode character(3) NOT NULL,\n    modifieddate timestamp without time zone DEFAULT now() NOT NULL,\n    CONSTRAINT \"CK_ProductVendor_AverageLeadTime\" CHECK ((averageleadtime >= 1)),\n    CONSTRAINT \"CK_ProductVendor_LastReceiptCost\" CHECK ((lastreceiptcost > 0.00)),\n    CONSTRAINT \"CK_ProductVendor_MaxOrderQty\" CHECK ((maxorderqty >= 1)),\n    CONSTRAINT \"CK_ProductVendor_MinOrderQty\" CHECK ((minorderqty >= 1)),\n    CONSTRAINT \"CK_ProductVendor_OnOrderQty\" CHECK ((onorderqty >= 0)),\n    CONSTRAINT \"CK_ProductVendor_StandardPrice\" CHECK ((standardprice > 0.00))\n);\n\n\n--\n-- Name: TABLE productvendor; Type: COMMENT; Schema: purchasing; Owner: -\n--\n\nCOMMENT ON TABLE purchasing.productvendor IS 'Cross-reference table mapping vendors with the products they supply.';\n\n\n--\n-- Name: COLUMN productvendor.productid; Type: COMMENT; Schema: purchasing; Owner: -\n--\n\nCOMMENT ON COLUMN purchasing.productvendor.productid IS 'Primary key. Foreign key to Product.ProductID.';\n\n\n--\n-- Name: COLUMN productvendor.businessentityid; Type: COMMENT; Schema: purchasing; Owner: -\n--\n\nCOMMENT ON COLUMN purchasing.productvendor.businessentityid IS 'Primary key. Foreign key to Vendor.BusinessEntityID.';\n\n\n--\n-- Name: COLUMN productvendor.averageleadtime; Type: COMMENT; Schema: purchasing; Owner: -\n--\n\nCOMMENT ON COLUMN purchasing.productvendor.averageleadtime IS 'The average span of time (in days) between placing an order with the vendor and receiving the purchased product.';\n\n\n--\n-- Name: COLUMN productvendor.standardprice; Type: COMMENT; Schema: purchasing; Owner: -\n--\n\nCOMMENT ON COLUMN purchasing.productvendor.standardprice IS 'The vendor''s usual selling price.';\n\n\n--\n-- Name: COLUMN productvendor.lastreceiptcost; Type: COMMENT; Schema: purchasing; Owner: -\n--\n\nCOMMENT ON COLUMN purchasing.productvendor.lastreceiptcost IS 'The selling price when last purchased.';\n\n\n--\n-- Name: COLUMN productvendor.lastreceiptdate; Type: COMMENT; Schema: purchasing; Owner: -\n--\n\nCOMMENT ON COLUMN purchasing.productvendor.lastreceiptdate IS 'Date the product was last received by the vendor.';\n\n\n--\n-- Name: COLUMN productvendor.minorderqty; Type: COMMENT; Schema: purchasing; Owner: -\n--\n\nCOMMENT ON COLUMN purchasing.productvendor.minorderqty IS 'The maximum quantity that should be ordered.';\n\n\n--\n-- Name: COLUMN productvendor.maxorderqty; Type: COMMENT; Schema: purchasing; Owner: -\n--\n\nCOMMENT ON COLUMN purchasing.productvendor.maxorderqty IS 'The minimum quantity that should be ordered.';\n\n\n--\n-- Name: COLUMN productvendor.onorderqty; Type: COMMENT; Schema: purchasing; Owner: -\n--\n\nCOMMENT ON COLUMN purchasing.productvendor.onorderqty IS 'The quantity currently on order.';\n\n\n--\n-- Name: COLUMN productvendor.unitmeasurecode; Type: COMMENT; Schema: purchasing; Owner: -\n--\n\nCOMMENT ON COLUMN purchasing.productvendor.unitmeasurecode IS 'The product''s unit of measure.';"}
{"input_text": "convert following DDL/DML code from MSSQL to Postgresql \nUSE [adventureworks]\nGO\n/****** Object:  Table [Purchasing].[PurchaseOrderDetail]    Script Date: 2/3/24 12:02:59 AM ******/\nSET ANSI_NULLS ON\nGO\nSET QUOTED_IDENTIFIER ON\nGO\nCREATE TABLE [Purchasing].[PurchaseOrderDetail](\n\t[PurchaseOrderID] [int] NOT NULL,\n\t[PurchaseOrderDetailID] [int] IDENTITY(1,1) NOT NULL,\n\t[DueDate] [datetime] NOT NULL,\n\t[OrderQty] [smallint] NOT NULL,\n\t[ProductID] [int] NOT NULL,\n\t[UnitPrice] [money] NOT NULL,\n\t[LineTotal]  AS (isnull([OrderQty]*[UnitPrice],(0.00))),\n\t[ReceivedQty] [decimal](8, 2) NOT NULL,\n\t[RejectedQty] [decimal](8, 2) NOT NULL,\n\t[StockedQty]  AS (isnull([ReceivedQty]-[RejectedQty],(0.00))),\n\t[ModifiedDate] [datetime] NOT NULL,\n CONSTRAINT [PK_PurchaseOrderDetail_PurchaseOrderID_PurchaseOrderDetailID] PRIMARY KEY CLUSTERED \n(\n\t[PurchaseOrderID] ASC,\n\t[PurchaseOrderDetailID] ASC\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]\n) ON [PRIMARY]\nGO\n/****** Object:  Index [IX_PurchaseOrderDetail_ProductID]    Script Date: 2/3/24 12:03:02 AM ******/\nCREATE NONCLUSTERED INDEX [IX_PurchaseOrderDetail_ProductID] ON [Purchasing].[PurchaseOrderDetail]\n(\n\t[ProductID] ASC\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]\nGO\nALTER TABLE [Purchasing].[PurchaseOrderDetail] ADD  CONSTRAINT [DF_PurchaseOrderDetail_ModifiedDate]  DEFAULT (getdate()) FOR [ModifiedDate]\nGO\nALTER TABLE [Purchasing].[PurchaseOrderDetail]  WITH CHECK ADD  CONSTRAINT [FK_PurchaseOrderDetail_Product_ProductID] FOREIGN KEY([ProductID])\nREFERENCES [Production].[Product] ([ProductID])\nGO\nALTER TABLE [Purchasing].[PurchaseOrderDetail] CHECK CONSTRAINT [FK_PurchaseOrderDetail_Product_ProductID]\nGO\nALTER TABLE [Purchasing].[PurchaseOrderDetail]  WITH CHECK ADD  CONSTRAINT [FK_PurchaseOrderDetail_PurchaseOrderHeader_PurchaseOrderID] FOREIGN KEY([PurchaseOrderID])\nREFERENCES [Purchasing].[PurchaseOrderHeader] ([PurchaseOrderID])\nGO\nALTER TABLE [Purchasing].[PurchaseOrderDetail] CHECK CONSTRAINT [FK_PurchaseOrderDetail_PurchaseOrderHeader_PurchaseOrderID]\nGO\nALTER TABLE [Purchasing].[PurchaseOrderDetail]  WITH CHECK ADD  CONSTRAINT [CK_PurchaseOrderDetail_OrderQty] CHECK  (([OrderQty]>(0)))\nGO\nALTER TABLE [Purchasing].[PurchaseOrderDetail] CHECK CONSTRAINT [CK_PurchaseOrderDetail_OrderQty]\nGO\nALTER TABLE [Purchasing].[PurchaseOrderDetail]  WITH CHECK ADD  CONSTRAINT [CK_PurchaseOrderDetail_ReceivedQty] CHECK  (([ReceivedQty]>=(0.00)))\nGO\nALTER TABLE [Purchasing].[PurchaseOrderDetail] CHECK CONSTRAINT [CK_PurchaseOrderDetail_ReceivedQty]\nGO\nALTER TABLE [Purchasing].[PurchaseOrderDetail]  WITH CHECK ADD  CONSTRAINT [CK_PurchaseOrderDetail_RejectedQty] CHECK  (([RejectedQty]>=(0.00)))\nGO\nALTER TABLE [Purchasing].[PurchaseOrderDetail] CHECK CONSTRAINT [CK_PurchaseOrderDetail_RejectedQty]\nGO\nALTER TABLE [Purchasing].[PurchaseOrderDetail]  WITH CHECK ADD  CONSTRAINT [CK_PurchaseOrderDetail_UnitPrice] CHECK  (([UnitPrice]>=(0.00)))\nGO\nALTER TABLE [Purchasing].[PurchaseOrderDetail] CHECK CONSTRAINT [CK_PurchaseOrderDetail_UnitPrice]\nGO\n/****** Object:  Trigger [Purchasing].[iPurchaseOrderDetail]    Script Date: 2/3/24 12:03:04 AM ******/\nSET ANSI_NULLS ON\nGO\nSET QUOTED_IDENTIFIER ON\nGO\n\nCREATE TRIGGER [Purchasing].[iPurchaseOrderDetail] ON [Purchasing].[PurchaseOrderDetail] \nAFTER INSERT AS\nBEGIN\n    DECLARE @Count int;\n\n    SET @Count = @@ROWCOUNT;\n    IF @Count = 0 \n        RETURN;\n\n    SET NOCOUNT ON;\n\n    BEGIN TRY\n        INSERT INTO [Production].[TransactionHistory]\n            ([ProductID]\n            ,[ReferenceOrderID]\n            ,[ReferenceOrderLineID]\n            ,[TransactionType]\n            ,[TransactionDate]\n            ,[Quantity]\n            ,[ActualCost])\n        SELECT \n            inserted.[ProductID]\n            ,inserted.[PurchaseOrderID]\n            ,inserted.[PurchaseOrderDetailID]\n            ,'P'\n            ,GETDATE()\n            ,inserted.[OrderQty]\n            ,inserted.[UnitPrice]\n        FROM inserted \n            INNER JOIN [Purchasing].[PurchaseOrderHeader] \n            ON inserted.[PurchaseOrderID] = [Purchasing].[PurchaseOrderHeader].[PurchaseOrderID];\n\n        -- Update SubTotal in PurchaseOrderHeader record. Note that this causes the \n        -- PurchaseOrderHeader trigger to fire which will update the RevisionNumber.\n        UPDATE [Purchasing].[PurchaseOrderHeader]\n        SET [Purchasing].[PurchaseOrderHeader].[SubTotal] = \n            (SELECT SUM([Purchasing].[PurchaseOrderDetail].[LineTotal])\n                FROM [Purchasing].[PurchaseOrderDetail]\n                WHERE [Purchasing].[PurchaseOrderHeader].[PurchaseOrderID] = [Purchasing].[PurchaseOrderDetail].[PurchaseOrderID])\n        WHERE [Purchasing].[PurchaseOrderHeader].[PurchaseOrderID] IN (SELECT inserted.[PurchaseOrderID] FROM inserted);\n    END TRY\n    BEGIN CATCH\n        EXECUTE [dbo].[uspPrintError];\n\n        -- Rollback any active or uncommittable transactions before\n        -- inserting information in the ErrorLog\n        IF @@TRANCOUNT > 0\n        BEGIN\n            ROLLBACK TRANSACTION;\n        END\n\n        EXECUTE [dbo].[uspLogError];\n    END CATCH;\nEND;\n\nGO\nALTER TABLE [Purchasing].[PurchaseOrderDetail] ENABLE TRIGGER [iPurchaseOrderDetail]\nGO\n/****** Object:  Trigger [Purchasing].[uPurchaseOrderDetail]    Script Date: 2/3/24 12:03:04 AM ******/\nSET ANSI_NULLS ON\nGO\nSET QUOTED_IDENTIFIER ON\nGO\n\nCREATE TRIGGER [Purchasing].[uPurchaseOrderDetail] ON [Purchasing].[PurchaseOrderDetail] \nAFTER UPDATE AS \nBEGIN\n    DECLARE @Count int;\n\n    SET @Count = @@ROWCOUNT;\n    IF @Count = 0 \n        RETURN;\n\n    SET NOCOUNT ON;\n\n    BEGIN TRY\n        IF UPDATE([ProductID]) OR UPDATE([OrderQty]) OR UPDATE([UnitPrice])\n        -- Insert record into TransactionHistory \n        BEGIN\n            INSERT INTO [Production].[TransactionHistory]\n                ([ProductID]\n                ,[ReferenceOrderID]\n                ,[ReferenceOrderLineID]\n                ,[TransactionType]\n                ,[TransactionDate]\n                ,[Quantity]\n                ,[ActualCost])\n            SELECT \n                inserted.[ProductID]\n                ,inserted.[PurchaseOrderID]\n                ,inserted.[PurchaseOrderDetailID]\n                ,'P'\n                ,GETDATE()\n                ,inserted.[OrderQty]\n                ,inserted.[UnitPrice]\n            FROM inserted \n                INNER JOIN [Purchasing].[PurchaseOrderDetail] \n                ON inserted.[PurchaseOrderID] = [Purchasing].[PurchaseOrderDetail].[PurchaseOrderID];\n\n            -- Update SubTotal in PurchaseOrderHeader record. Note that this causes the \n            -- PurchaseOrderHeader trigger to fire which will update the RevisionNumber.\n            UPDATE [Purchasing].[PurchaseOrderHeader]\n            SET [Purchasing].[PurchaseOrderHeader].[SubTotal] = \n                (SELECT SUM([Purchasing].[PurchaseOrderDetail].[LineTotal])\n                    FROM [Purchasing].[PurchaseOrderDetail]\n                    WHERE [Purchasing].[PurchaseOrderHeader].[PurchaseOrderID] \n                        = [Purchasing].[PurchaseOrderDetail].[PurchaseOrderID])\n            WHERE [Purchasing].[PurchaseOrderHeader].[PurchaseOrderID] \n                IN (SELECT inserted.[PurchaseOrderID] FROM inserted);\n\n            UPDATE [Purchasing].[PurchaseOrderDetail]\n            SET [Purchasing].[PurchaseOrderDetail].[ModifiedDate] = GETDATE()\n            FROM inserted\n            WHERE inserted.[PurchaseOrderID] = [Purchasing].[PurchaseOrderDetail].[PurchaseOrderID]\n                AND inserted.[PurchaseOrderDetailID] = [Purchasing].[PurchaseOrderDetail].[PurchaseOrderDetailID];\n        END;\n    END TRY\n    BEGIN CATCH\n        EXECUTE [dbo].[uspPrintError];\n\n        -- Rollback any active or uncommittable transactions before\n        -- inserting information in the ErrorLog\n        IF @@TRANCOUNT > 0\n        BEGIN\n            ROLLBACK TRANSACTION;\n        END\n\n        EXECUTE [dbo].[uspLogError];\n    END CATCH;\nEND;\n\nGO\nALTER TABLE [Purchasing].[PurchaseOrderDetail] ENABLE TRIGGER [uPurchaseOrderDetail]\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key. Foreign key to PurchaseOrderHeader.PurchaseOrderID.' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'PurchaseOrderDetail', @level2type=N'COLUMN',@level2name=N'PurchaseOrderID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key. One line number per purchased product.' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'PurchaseOrderDetail', @level2type=N'COLUMN',@level2name=N'PurchaseOrderDetailID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Date the product is expected to be received.' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'PurchaseOrderDetail', @level2type=N'COLUMN',@level2name=N'DueDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Quantity ordered.' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'PurchaseOrderDetail', @level2type=N'COLUMN',@level2name=N'OrderQty'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Product identification number. Foreign key to Product.ProductID.' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'PurchaseOrderDetail', @level2type=N'COLUMN',@level2name=N'ProductID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Vendor''s selling price of a single product.' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'PurchaseOrderDetail', @level2type=N'COLUMN',@level2name=N'UnitPrice'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Per product subtotal. Computed as OrderQty * UnitPrice.' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'PurchaseOrderDetail', @level2type=N'COLUMN',@level2name=N'LineTotal'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Quantity actually received from the vendor.' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'PurchaseOrderDetail', @level2type=N'COLUMN',@level2name=N'ReceivedQty'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Quantity rejected during inspection.' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'PurchaseOrderDetail', @level2type=N'COLUMN',@level2name=N'RejectedQty'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Quantity accepted into inventory. Computed as ReceivedQty - RejectedQty.' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'PurchaseOrderDetail', @level2type=N'COLUMN',@level2name=N'StockedQty'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Date and time the record was last updated.' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'PurchaseOrderDetail', @level2type=N'COLUMN',@level2name=N'ModifiedDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of GETDATE()' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'PurchaseOrderDetail', @level2type=N'CONSTRAINT',@level2name=N'DF_PurchaseOrderDetail_ModifiedDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key (clustered) constraint' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'PurchaseOrderDetail', @level2type=N'CONSTRAINT',@level2name=N'PK_PurchaseOrderDetail_PurchaseOrderID_PurchaseOrderDetailID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Nonclustered index.' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'PurchaseOrderDetail', @level2type=N'INDEX',@level2name=N'IX_PurchaseOrderDetail_ProductID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Individual products associated with a specific purchase order. See PurchaseOrderHeader.' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'PurchaseOrderDetail'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'AFTER INSERT trigger that inserts a row in the TransactionHistory table and updates the PurchaseOrderHeader.SubTotal column.' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'PurchaseOrderDetail', @level2type=N'TRIGGER',@level2name=N'iPurchaseOrderDetail'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'AFTER UPDATE trigger that inserts a row in the TransactionHistory table, updates ModifiedDate in PurchaseOrderDetail and updates the PurchaseOrderHeader.SubTotal column.' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'PurchaseOrderDetail', @level2type=N'TRIGGER',@level2name=N'uPurchaseOrderDetail'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key constraint referencing Product.ProductID.' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'PurchaseOrderDetail', @level2type=N'CONSTRAINT',@level2name=N'FK_PurchaseOrderDetail_Product_ProductID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key constraint referencing PurchaseOrderHeader.PurchaseOrderID.' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'PurchaseOrderDetail', @level2type=N'CONSTRAINT',@level2name=N'FK_PurchaseOrderDetail_PurchaseOrderHeader_PurchaseOrderID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Check constraint [OrderQty] > (0)' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'PurchaseOrderDetail', @level2type=N'CONSTRAINT',@level2name=N'CK_PurchaseOrderDetail_OrderQty'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Check constraint [ReceivedQty] >= (0.00)' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'PurchaseOrderDetail', @level2type=N'CONSTRAINT',@level2name=N'CK_PurchaseOrderDetail_ReceivedQty'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Check constraint [RejectedQty] >= (0.00)' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'PurchaseOrderDetail', @level2type=N'CONSTRAINT',@level2name=N'CK_PurchaseOrderDetail_RejectedQty'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Check constraint [UnitPrice] >= (0.00)' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'PurchaseOrderDetail', @level2type=N'CONSTRAINT',@level2name=N'CK_PurchaseOrderDetail_UnitPrice'\nGO", "output_text": "CREATE TABLE purchasing.purchaseorderdetail (\n    purchaseorderid integer NOT NULL,\n    purchaseorderdetailid integer NOT NULL,\n    duedate timestamp without time zone NOT NULL,\n    orderqty smallint NOT NULL,\n    productid integer NOT NULL,\n    unitprice numeric NOT NULL,\n    receivedqty numeric(8,2) NOT NULL,\n    rejectedqty numeric(8,2) NOT NULL,\n    modifieddate timestamp without time zone DEFAULT now() NOT NULL,\n    CONSTRAINT \"CK_PurchaseOrderDetail_OrderQty\" CHECK ((orderqty > 0)),\n    CONSTRAINT \"CK_PurchaseOrderDetail_ReceivedQty\" CHECK ((receivedqty >= 0.00)),\n    CONSTRAINT \"CK_PurchaseOrderDetail_RejectedQty\" CHECK ((rejectedqty >= 0.00)),\n    CONSTRAINT \"CK_PurchaseOrderDetail_UnitPrice\" CHECK ((unitprice >= 0.00))\n);\n\n\n--\n-- Name: TABLE purchaseorderdetail; Type: COMMENT; Schema: purchasing; Owner: -\n--\n\nCOMMENT ON TABLE purchasing.purchaseorderdetail IS 'Individual products associated with a specific purchase order. See PurchaseOrderHeader.';\n\n\n--\n-- Name: COLUMN purchaseorderdetail.purchaseorderid; Type: COMMENT; Schema: purchasing; Owner: -\n--\n\nCOMMENT ON COLUMN purchasing.purchaseorderdetail.purchaseorderid IS 'Primary key. Foreign key to PurchaseOrderHeader.PurchaseOrderID.';\n\n\n--\n-- Name: COLUMN purchaseorderdetail.purchaseorderdetailid; Type: COMMENT; Schema: purchasing; Owner: -\n--\n\nCOMMENT ON COLUMN purchasing.purchaseorderdetail.purchaseorderdetailid IS 'Primary key. One line number per purchased product.';\n\n\n--\n-- Name: COLUMN purchaseorderdetail.duedate; Type: COMMENT; Schema: purchasing; Owner: -\n--\n\nCOMMENT ON COLUMN purchasing.purchaseorderdetail.duedate IS 'Date the product is expected to be received.';\n\n\n--\n-- Name: COLUMN purchaseorderdetail.orderqty; Type: COMMENT; Schema: purchasing; Owner: -\n--\n\nCOMMENT ON COLUMN purchasing.purchaseorderdetail.orderqty IS 'Quantity ordered.';\n\n\n--\n-- Name: COLUMN purchaseorderdetail.productid; Type: COMMENT; Schema: purchasing; Owner: -\n--\n\nCOMMENT ON COLUMN purchasing.purchaseorderdetail.productid IS 'Product identification number. Foreign key to Product.ProductID.';\n\n\n--\n-- Name: COLUMN purchaseorderdetail.unitprice; Type: COMMENT; Schema: purchasing; Owner: -\n--\n\nCOMMENT ON COLUMN purchasing.purchaseorderdetail.unitprice IS 'Vendor''s selling price of a single product.';\n\n\n--\n-- Name: COLUMN purchaseorderdetail.receivedqty; Type: COMMENT; Schema: purchasing; Owner: -\n--\n\nCOMMENT ON COLUMN purchasing.purchaseorderdetail.receivedqty IS 'Quantity actually received from the vendor.';\n\n\n--\n-- Name: COLUMN purchaseorderdetail.rejectedqty; Type: COMMENT; Schema: purchasing; Owner: -\n--\n\nCOMMENT ON COLUMN purchasing.purchaseorderdetail.rejectedqty IS 'Quantity rejected during inspection.';"}
{"input_text": "convert following DDL/DML code from MSSQL to Postgresql \nUSE [adventureworks]\nGO\n/****** Object:  Table [Purchasing].[PurchaseOrderHeader]    Script Date: 2/3/24 12:03:00 AM ******/\nSET ANSI_NULLS ON\nGO\nSET QUOTED_IDENTIFIER ON\nGO\nCREATE TABLE [Purchasing].[PurchaseOrderHeader](\n\t[PurchaseOrderID] [int] IDENTITY(1,1) NOT NULL,\n\t[RevisionNumber] [tinyint] NOT NULL,\n\t[Status] [tinyint] NOT NULL,\n\t[EmployeeID] [int] NOT NULL,\n\t[VendorID] [int] NOT NULL,\n\t[ShipMethodID] [int] NOT NULL,\n\t[OrderDate] [datetime] NOT NULL,\n\t[ShipDate] [datetime] NULL,\n\t[SubTotal] [money] NOT NULL,\n\t[TaxAmt] [money] NOT NULL,\n\t[Freight] [money] NOT NULL,\n\t[TotalDue]  AS (isnull(([SubTotal]+[TaxAmt])+[Freight],(0))) PERSISTED NOT NULL,\n\t[ModifiedDate] [datetime] NOT NULL,\n CONSTRAINT [PK_PurchaseOrderHeader_PurchaseOrderID] PRIMARY KEY CLUSTERED \n(\n\t[PurchaseOrderID] ASC\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]\n) ON [PRIMARY]\nGO\n/****** Object:  Index [IX_PurchaseOrderHeader_EmployeeID]    Script Date: 2/3/24 12:03:02 AM ******/\nCREATE NONCLUSTERED INDEX [IX_PurchaseOrderHeader_EmployeeID] ON [Purchasing].[PurchaseOrderHeader]\n(\n\t[EmployeeID] ASC\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]\nGO\n/****** Object:  Index [IX_PurchaseOrderHeader_VendorID]    Script Date: 2/3/24 12:03:02 AM ******/\nCREATE NONCLUSTERED INDEX [IX_PurchaseOrderHeader_VendorID] ON [Purchasing].[PurchaseOrderHeader]\n(\n\t[VendorID] ASC\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]\nGO\nALTER TABLE [Purchasing].[PurchaseOrderHeader] ADD  CONSTRAINT [DF_PurchaseOrderHeader_RevisionNumber]  DEFAULT ((0)) FOR [RevisionNumber]\nGO\nALTER TABLE [Purchasing].[PurchaseOrderHeader] ADD  CONSTRAINT [DF_PurchaseOrderHeader_Status]  DEFAULT ((1)) FOR [Status]\nGO\nALTER TABLE [Purchasing].[PurchaseOrderHeader] ADD  CONSTRAINT [DF_PurchaseOrderHeader_OrderDate]  DEFAULT (getdate()) FOR [OrderDate]\nGO\nALTER TABLE [Purchasing].[PurchaseOrderHeader] ADD  CONSTRAINT [DF_PurchaseOrderHeader_SubTotal]  DEFAULT ((0.00)) FOR [SubTotal]\nGO\nALTER TABLE [Purchasing].[PurchaseOrderHeader] ADD  CONSTRAINT [DF_PurchaseOrderHeader_TaxAmt]  DEFAULT ((0.00)) FOR [TaxAmt]\nGO\nALTER TABLE [Purchasing].[PurchaseOrderHeader] ADD  CONSTRAINT [DF_PurchaseOrderHeader_Freight]  DEFAULT ((0.00)) FOR [Freight]\nGO\nALTER TABLE [Purchasing].[PurchaseOrderHeader] ADD  CONSTRAINT [DF_PurchaseOrderHeader_ModifiedDate]  DEFAULT (getdate()) FOR [ModifiedDate]\nGO\nALTER TABLE [Purchasing].[PurchaseOrderHeader]  WITH CHECK ADD  CONSTRAINT [FK_PurchaseOrderHeader_Employee_EmployeeID] FOREIGN KEY([EmployeeID])\nREFERENCES [HumanResources].[Employee] ([BusinessEntityID])\nGO\nALTER TABLE [Purchasing].[PurchaseOrderHeader] CHECK CONSTRAINT [FK_PurchaseOrderHeader_Employee_EmployeeID]\nGO\nALTER TABLE [Purchasing].[PurchaseOrderHeader]  WITH CHECK ADD  CONSTRAINT [FK_PurchaseOrderHeader_ShipMethod_ShipMethodID] FOREIGN KEY([ShipMethodID])\nREFERENCES [Purchasing].[ShipMethod] ([ShipMethodID])\nGO\nALTER TABLE [Purchasing].[PurchaseOrderHeader] CHECK CONSTRAINT [FK_PurchaseOrderHeader_ShipMethod_ShipMethodID]\nGO\nALTER TABLE [Purchasing].[PurchaseOrderHeader]  WITH CHECK ADD  CONSTRAINT [FK_PurchaseOrderHeader_Vendor_VendorID] FOREIGN KEY([VendorID])\nREFERENCES [Purchasing].[Vendor] ([BusinessEntityID])\nGO\nALTER TABLE [Purchasing].[PurchaseOrderHeader] CHECK CONSTRAINT [FK_PurchaseOrderHeader_Vendor_VendorID]\nGO\nALTER TABLE [Purchasing].[PurchaseOrderHeader]  WITH CHECK ADD  CONSTRAINT [CK_PurchaseOrderHeader_Freight] CHECK  (([Freight]>=(0.00)))\nGO\nALTER TABLE [Purchasing].[PurchaseOrderHeader] CHECK CONSTRAINT [CK_PurchaseOrderHeader_Freight]\nGO\nALTER TABLE [Purchasing].[PurchaseOrderHeader]  WITH CHECK ADD  CONSTRAINT [CK_PurchaseOrderHeader_ShipDate] CHECK  (([ShipDate]>=[OrderDate] OR [ShipDate] IS NULL))\nGO\nALTER TABLE [Purchasing].[PurchaseOrderHeader] CHECK CONSTRAINT [CK_PurchaseOrderHeader_ShipDate]\nGO\nALTER TABLE [Purchasing].[PurchaseOrderHeader]  WITH CHECK ADD  CONSTRAINT [CK_PurchaseOrderHeader_Status] CHECK  (([Status]>=(1) AND [Status]<=(4)))\nGO\nALTER TABLE [Purchasing].[PurchaseOrderHeader] CHECK CONSTRAINT [CK_PurchaseOrderHeader_Status]\nGO\nALTER TABLE [Purchasing].[PurchaseOrderHeader]  WITH CHECK ADD  CONSTRAINT [CK_PurchaseOrderHeader_SubTotal] CHECK  (([SubTotal]>=(0.00)))\nGO\nALTER TABLE [Purchasing].[PurchaseOrderHeader] CHECK CONSTRAINT [CK_PurchaseOrderHeader_SubTotal]\nGO\nALTER TABLE [Purchasing].[PurchaseOrderHeader]  WITH CHECK ADD  CONSTRAINT [CK_PurchaseOrderHeader_TaxAmt] CHECK  (([TaxAmt]>=(0.00)))\nGO\nALTER TABLE [Purchasing].[PurchaseOrderHeader] CHECK CONSTRAINT [CK_PurchaseOrderHeader_TaxAmt]\nGO\n/****** Object:  Trigger [Purchasing].[uPurchaseOrderHeader]    Script Date: 2/3/24 12:03:04 AM ******/\nSET ANSI_NULLS ON\nGO\nSET QUOTED_IDENTIFIER ON\nGO\n\nCREATE TRIGGER [Purchasing].[uPurchaseOrderHeader] ON [Purchasing].[PurchaseOrderHeader] \nAFTER UPDATE AS \nBEGIN\n    DECLARE @Count int;\n\n    SET @Count = @@ROWCOUNT;\n    IF @Count = 0 \n        RETURN;\n\n    SET NOCOUNT ON;\n\n    BEGIN TRY\n        -- Update RevisionNumber for modification of any field EXCEPT the Status.\n        IF NOT UPDATE([Status])\n        BEGIN\n            UPDATE [Purchasing].[PurchaseOrderHeader]\n            SET [Purchasing].[PurchaseOrderHeader].[RevisionNumber] = \n                [Purchasing].[PurchaseOrderHeader].[RevisionNumber] + 1\n            WHERE [Purchasing].[PurchaseOrderHeader].[PurchaseOrderID] IN \n                (SELECT inserted.[PurchaseOrderID] FROM inserted);\n        END;\n    END TRY\n    BEGIN CATCH\n        EXECUTE [dbo].[uspPrintError];\n\n        -- Rollback any active or uncommittable transactions before\n        -- inserting information in the ErrorLog\n        IF @@TRANCOUNT > 0\n        BEGIN\n            ROLLBACK TRANSACTION;\n        END\n\n        EXECUTE [dbo].[uspLogError];\n    END CATCH;\nEND;\n\nGO\nALTER TABLE [Purchasing].[PurchaseOrderHeader] ENABLE TRIGGER [uPurchaseOrderHeader]\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key.' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'PurchaseOrderHeader', @level2type=N'COLUMN',@level2name=N'PurchaseOrderID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Incremental number to track changes to the purchase order over time.' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'PurchaseOrderHeader', @level2type=N'COLUMN',@level2name=N'RevisionNumber'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of 0' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'PurchaseOrderHeader', @level2type=N'CONSTRAINT',@level2name=N'DF_PurchaseOrderHeader_RevisionNumber'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Order current status. 1 = Pending; 2 = Approved; 3 = Rejected; 4 = Complete' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'PurchaseOrderHeader', @level2type=N'COLUMN',@level2name=N'Status'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of 1' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'PurchaseOrderHeader', @level2type=N'CONSTRAINT',@level2name=N'DF_PurchaseOrderHeader_Status'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Employee who created the purchase order. Foreign key to Employee.BusinessEntityID.' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'PurchaseOrderHeader', @level2type=N'COLUMN',@level2name=N'EmployeeID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Vendor with whom the purchase order is placed. Foreign key to Vendor.BusinessEntityID.' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'PurchaseOrderHeader', @level2type=N'COLUMN',@level2name=N'VendorID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Shipping method. Foreign key to ShipMethod.ShipMethodID.' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'PurchaseOrderHeader', @level2type=N'COLUMN',@level2name=N'ShipMethodID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Purchase order creation date.' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'PurchaseOrderHeader', @level2type=N'COLUMN',@level2name=N'OrderDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of GETDATE()' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'PurchaseOrderHeader', @level2type=N'CONSTRAINT',@level2name=N'DF_PurchaseOrderHeader_OrderDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Estimated shipment date from the vendor.' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'PurchaseOrderHeader', @level2type=N'COLUMN',@level2name=N'ShipDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Purchase order subtotal. Computed as SUM(PurchaseOrderDetail.LineTotal)for the appropriate PurchaseOrderID.' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'PurchaseOrderHeader', @level2type=N'COLUMN',@level2name=N'SubTotal'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of 0.0' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'PurchaseOrderHeader', @level2type=N'CONSTRAINT',@level2name=N'DF_PurchaseOrderHeader_SubTotal'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Tax amount.' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'PurchaseOrderHeader', @level2type=N'COLUMN',@level2name=N'TaxAmt'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of 0.0' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'PurchaseOrderHeader', @level2type=N'CONSTRAINT',@level2name=N'DF_PurchaseOrderHeader_TaxAmt'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Shipping cost.' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'PurchaseOrderHeader', @level2type=N'COLUMN',@level2name=N'Freight'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of 0.0' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'PurchaseOrderHeader', @level2type=N'CONSTRAINT',@level2name=N'DF_PurchaseOrderHeader_Freight'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Total due to vendor. Computed as Subtotal + TaxAmt + Freight.' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'PurchaseOrderHeader', @level2type=N'COLUMN',@level2name=N'TotalDue'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Date and time the record was last updated.' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'PurchaseOrderHeader', @level2type=N'COLUMN',@level2name=N'ModifiedDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of GETDATE()' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'PurchaseOrderHeader', @level2type=N'CONSTRAINT',@level2name=N'DF_PurchaseOrderHeader_ModifiedDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key (clustered) constraint' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'PurchaseOrderHeader', @level2type=N'CONSTRAINT',@level2name=N'PK_PurchaseOrderHeader_PurchaseOrderID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Nonclustered index.' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'PurchaseOrderHeader', @level2type=N'INDEX',@level2name=N'IX_PurchaseOrderHeader_EmployeeID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Nonclustered index.' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'PurchaseOrderHeader', @level2type=N'INDEX',@level2name=N'IX_PurchaseOrderHeader_VendorID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'General purchase order information. See PurchaseOrderDetail.' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'PurchaseOrderHeader'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'AFTER UPDATE trigger that updates the RevisionNumber and ModifiedDate columns in the PurchaseOrderHeader table.' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'PurchaseOrderHeader', @level2type=N'TRIGGER',@level2name=N'uPurchaseOrderHeader'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key constraint referencing Employee.EmployeeID.' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'PurchaseOrderHeader', @level2type=N'CONSTRAINT',@level2name=N'FK_PurchaseOrderHeader_Employee_EmployeeID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key constraint referencing ShipMethod.ShipMethodID.' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'PurchaseOrderHeader', @level2type=N'CONSTRAINT',@level2name=N'FK_PurchaseOrderHeader_ShipMethod_ShipMethodID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key constraint referencing Vendor.VendorID.' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'PurchaseOrderHeader', @level2type=N'CONSTRAINT',@level2name=N'FK_PurchaseOrderHeader_Vendor_VendorID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Check constraint [Freight] >= (0.00)' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'PurchaseOrderHeader', @level2type=N'CONSTRAINT',@level2name=N'CK_PurchaseOrderHeader_Freight'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Check constraint [ShipDate] >= [OrderDate] OR [ShipDate] IS NULL' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'PurchaseOrderHeader', @level2type=N'CONSTRAINT',@level2name=N'CK_PurchaseOrderHeader_ShipDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Check constraint [Status] BETWEEN (1) AND (4)' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'PurchaseOrderHeader', @level2type=N'CONSTRAINT',@level2name=N'CK_PurchaseOrderHeader_Status'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Check constraint [SubTotal] >= (0.00)' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'PurchaseOrderHeader', @level2type=N'CONSTRAINT',@level2name=N'CK_PurchaseOrderHeader_SubTotal'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Check constraint [TaxAmt] >= (0.00)' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'PurchaseOrderHeader', @level2type=N'CONSTRAINT',@level2name=N'CK_PurchaseOrderHeader_TaxAmt'\nGO", "output_text": "\"CREATE TABLE purchasing.purchaseorderheader (\n    purchaseorderid integer NOT NULL,\n    revisionnumber smallint DEFAULT 0 NOT NULL,\n    status smallint DEFAULT 1 NOT NULL,\n    employeeid integer NOT NULL,\n    vendorid integer NOT NULL,\n    shipmethodid integer NOT NULL,\n    orderdate timestamp without time zone DEFAULT now() NOT NULL,\n    shipdate timestamp without time zone,\n    subtotal numeric DEFAULT 0.00 NOT NULL,\n    taxamt numeric DEFAULT 0.00 NOT NULL,\n    freight numeric DEFAULT 0.00 NOT NULL,\n    modifieddate timestamp without time zone DEFAULT now() NOT NULL,\n    CONSTRAINT \"\"CK_PurchaseOrderHeader_Freight\"\" CHECK ((freight >= 0.00)),\n    CONSTRAINT \"\"CK_PurchaseOrderHeader_ShipDate\"\" CHECK (((shipdate >= orderdate) OR (shipdate IS NULL))),\n    CONSTRAINT \"\"CK_PurchaseOrderHeader_Status\"\" CHECK (((status >= 1) AND (status <= 4))),\n    CONSTRAINT \"\"CK_PurchaseOrderHeader_SubTotal\"\" CHECK ((subtotal >= 0.00)),\n    CONSTRAINT \"\"CK_PurchaseOrderHeader_TaxAmt\"\" CHECK ((taxamt >= 0.00))\n);\n\n\n--\n-- Name: TABLE purchaseorderheader; Type: COMMENT; Schema: purchasing; Owner: -\n--\n\nCOMMENT ON TABLE purchasing.purchaseorderheader IS 'General purchase order information. See PurchaseOrderDetail.';\n\n\n--\n-- Name: COLUMN purchaseorderheader.purchaseorderid; Type: COMMENT; Schema: purchasing; Owner: -\n--\n\nCOMMENT ON COLUMN purchasing.purchaseorderheader.purchaseorderid IS 'Primary key.';\n\n\n--\n-- Name: COLUMN purchaseorderheader.revisionnumber; Type: COMMENT; Schema: purchasing; Owner: -\n--\n\nCOMMENT ON COLUMN purchasing.purchaseorderheader.revisionnumber IS 'Incremental number to track changes to the purchase order over time.';\n\n\n--\n-- Name: COLUMN purchaseorderheader.status; Type: COMMENT; Schema: purchasing; Owner: -\n--\n\nCOMMENT ON COLUMN purchasing.purchaseorderheader.status IS 'Order current status. 1 = Pending; 2 = Approved; 3 = Rejected; 4 = Complete';\n\n\n--\n-- Name: COLUMN purchaseorderheader.employeeid; Type: COMMENT; Schema: purchasing; Owner: -\n--\n\nCOMMENT ON COLUMN purchasing.purchaseorderheader.employeeid IS 'Employee who created the purchase order. Foreign key to Employee.BusinessEntityID.';\n\n\n--\n-- Name: COLUMN purchaseorderheader.vendorid; Type: COMMENT; Schema: purchasing; Owner: -\n--\n\nCOMMENT ON COLUMN purchasing.purchaseorderheader.vendorid IS 'Vendor with whom the purchase order is placed. Foreign key to Vendor.BusinessEntityID.';\n\n\n--\n-- Name: COLUMN purchaseorderheader.shipmethodid; Type: COMMENT; Schema: purchasing; Owner: -\n--\n\nCOMMENT ON COLUMN purchasing.purchaseorderheader.shipmethodid IS 'Shipping method. Foreign key to ShipMethod.ShipMethodID.';\n\n\n--\n-- Name: COLUMN purchaseorderheader.orderdate; Type: COMMENT; Schema: purchasing; Owner: -\n--\n\nCOMMENT ON COLUMN purchasing.purchaseorderheader.orderdate IS 'Purchase order creation date.';\n\n\n--\n-- Name: COLUMN purchaseorderheader.shipdate; Type: COMMENT; Schema: purchasing; Owner: -\n--\n\nCOMMENT ON COLUMN purchasing.purchaseorderheader.shipdate IS 'Estimated shipment date from the vendor.';\n\n\n--\n-- Name: COLUMN purchaseorderheader.subtotal; Type: COMMENT; Schema: purchasing; Owner: -\n--\n\nCOMMENT ON COLUMN purchasing.purchaseorderheader.subtotal IS 'Purchase order subtotal. Computed as SUM(PurchaseOrderDetail.LineTotal)for the appropriate PurchaseOrderID.';\n\n\n--\n-- Name: COLUMN purchaseorderheader.taxamt; Type: COMMENT; Schema: purchasing; Owner: -\n--\n\nCOMMENT ON COLUMN purchasing.purchaseorderheader.taxamt IS 'Tax amount.';\n\n\n--\n-- Name: COLUMN purchaseorderheader.freight; Type: COMMENT; Schema: purchasing; Owner: -\n--\n\nCOMMENT ON COLUMN purchasing.purchaseorderheader.freight IS 'Shipping cost.';\""}
{"input_text": "convert following DDL/DML code from MSSQL to Postgresql \nUSE [adventureworks]\nGO\n/****** Object:  Schema [Purchasing]    Script Date: 2/3/24 12:02:51 AM ******/\nCREATE SCHEMA [Purchasing]\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Contains objects related to vendors and purchase orders.' , @level0type=N'SCHEMA',@level0name=N'Purchasing'\nGO", "output_text": "CREATE SCHEMA purchasing;\nCOMMENT ON SCHEMA purchasing IS 'Contains objects related to vendors and purchase orders.';"}
{"input_text": "convert following DDL/DML code from MSSQL to Postgresql \nUSE [adventureworks]\nGO\n/****** Object:  Table [Purchasing].[ShipMethod]    Script Date: 2/3/24 12:03:00 AM ******/\nSET ANSI_NULLS ON\nGO\nSET QUOTED_IDENTIFIER ON\nGO\nCREATE TABLE [Purchasing].[ShipMethod](\n\t[ShipMethodID] [int] IDENTITY(1,1) NOT NULL,\n\t[Name] [dbo].[Name] NOT NULL,\n\t[ShipBase] [money] NOT NULL,\n\t[ShipRate] [money] NOT NULL,\n\t[rowguid] [uniqueidentifier] ROWGUIDCOL  NOT NULL,\n\t[ModifiedDate] [datetime] NOT NULL,\n CONSTRAINT [PK_ShipMethod_ShipMethodID] PRIMARY KEY CLUSTERED \n(\n\t[ShipMethodID] ASC\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]\n) ON [PRIMARY]\nGO\nSET ANSI_PADDING ON\nGO\n/****** Object:  Index [AK_ShipMethod_Name]    Script Date: 2/3/24 12:03:02 AM ******/\nCREATE UNIQUE NONCLUSTERED INDEX [AK_ShipMethod_Name] ON [Purchasing].[ShipMethod]\n(\n\t[Name] ASC\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]\nGO\n/****** Object:  Index [AK_ShipMethod_rowguid]    Script Date: 2/3/24 12:03:02 AM ******/\nCREATE UNIQUE NONCLUSTERED INDEX [AK_ShipMethod_rowguid] ON [Purchasing].[ShipMethod]\n(\n\t[rowguid] ASC\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]\nGO\nALTER TABLE [Purchasing].[ShipMethod] ADD  CONSTRAINT [DF_ShipMethod_ShipBase]  DEFAULT ((0.00)) FOR [ShipBase]\nGO\nALTER TABLE [Purchasing].[ShipMethod] ADD  CONSTRAINT [DF_ShipMethod_ShipRate]  DEFAULT ((0.00)) FOR [ShipRate]\nGO\nALTER TABLE [Purchasing].[ShipMethod] ADD  CONSTRAINT [DF_ShipMethod_rowguid]  DEFAULT (newid()) FOR [rowguid]\nGO\nALTER TABLE [Purchasing].[ShipMethod] ADD  CONSTRAINT [DF_ShipMethod_ModifiedDate]  DEFAULT (getdate()) FOR [ModifiedDate]\nGO\nALTER TABLE [Purchasing].[ShipMethod]  WITH CHECK ADD  CONSTRAINT [CK_ShipMethod_ShipBase] CHECK  (([ShipBase]>(0.00)))\nGO\nALTER TABLE [Purchasing].[ShipMethod] CHECK CONSTRAINT [CK_ShipMethod_ShipBase]\nGO\nALTER TABLE [Purchasing].[ShipMethod]  WITH CHECK ADD  CONSTRAINT [CK_ShipMethod_ShipRate] CHECK  (([ShipRate]>(0.00)))\nGO\nALTER TABLE [Purchasing].[ShipMethod] CHECK CONSTRAINT [CK_ShipMethod_ShipRate]\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key for ShipMethod records.' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'ShipMethod', @level2type=N'COLUMN',@level2name=N'ShipMethodID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Shipping company name.' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'ShipMethod', @level2type=N'COLUMN',@level2name=N'Name'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Minimum shipping charge.' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'ShipMethod', @level2type=N'COLUMN',@level2name=N'ShipBase'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of 0.0' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'ShipMethod', @level2type=N'CONSTRAINT',@level2name=N'DF_ShipMethod_ShipBase'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Shipping charge per pound.' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'ShipMethod', @level2type=N'COLUMN',@level2name=N'ShipRate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of 0.0' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'ShipMethod', @level2type=N'CONSTRAINT',@level2name=N'DF_ShipMethod_ShipRate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'ShipMethod', @level2type=N'COLUMN',@level2name=N'rowguid'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of NEWID()' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'ShipMethod', @level2type=N'CONSTRAINT',@level2name=N'DF_ShipMethod_rowguid'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Date and time the record was last updated.' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'ShipMethod', @level2type=N'COLUMN',@level2name=N'ModifiedDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of GETDATE()' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'ShipMethod', @level2type=N'CONSTRAINT',@level2name=N'DF_ShipMethod_ModifiedDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key (clustered) constraint' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'ShipMethod', @level2type=N'CONSTRAINT',@level2name=N'PK_ShipMethod_ShipMethodID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Unique nonclustered index.' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'ShipMethod', @level2type=N'INDEX',@level2name=N'AK_ShipMethod_Name'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Unique nonclustered index. Used to support replication samples.' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'ShipMethod', @level2type=N'INDEX',@level2name=N'AK_ShipMethod_rowguid'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Shipping company lookup table.' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'ShipMethod'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Check constraint [ShipBase] > (0.00)' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'ShipMethod', @level2type=N'CONSTRAINT',@level2name=N'CK_ShipMethod_ShipBase'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Check constraint [ShipRate] > (0.00)' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'ShipMethod', @level2type=N'CONSTRAINT',@level2name=N'CK_ShipMethod_ShipRate'\nGO", "output_text": "CREATE TABLE purchasing.shipmethod (\n    shipmethodid integer NOT NULL,\n    name public.\"Name\" NOT NULL,\n    shipbase numeric DEFAULT 0.00 NOT NULL,\n    shiprate numeric DEFAULT 0.00 NOT NULL,\n    rowguid uuid DEFAULT public.uuid_generate_v1() NOT NULL,\n    modifieddate timestamp without time zone DEFAULT now() NOT NULL,\n    CONSTRAINT \"CK_ShipMethod_ShipBase\" CHECK ((shipbase > 0.00)),\n    CONSTRAINT \"CK_ShipMethod_ShipRate\" CHECK ((shiprate > 0.00))\n);\n\n\n--\n-- Name: TABLE shipmethod; Type: COMMENT; Schema: purchasing; Owner: -\n--\n\nCOMMENT ON TABLE purchasing.shipmethod IS 'Shipping company lookup table.';\n\n\n--\n-- Name: COLUMN shipmethod.shipmethodid; Type: COMMENT; Schema: purchasing; Owner: -\n--\n\nCOMMENT ON COLUMN purchasing.shipmethod.shipmethodid IS 'Primary key for ShipMethod records.';\n\n\n--\n-- Name: COLUMN shipmethod.name; Type: COMMENT; Schema: purchasing; Owner: -\n--\n\nCOMMENT ON COLUMN purchasing.shipmethod.name IS 'Shipping company name.';\n\n\n--\n-- Name: COLUMN shipmethod.shipbase; Type: COMMENT; Schema: purchasing; Owner: -\n--\n\nCOMMENT ON COLUMN purchasing.shipmethod.shipbase IS 'Minimum shipping charge.';\n\n\n--\n-- Name: COLUMN shipmethod.shiprate; Type: COMMENT; Schema: purchasing; Owner: -\n--\n\nCOMMENT ON COLUMN purchasing.shipmethod.shiprate IS 'Shipping charge per pound.';"}
{"input_text": "convert following DDL/DML code from MSSQL to Postgresql \nUSE [adventureworks]\nGO\n/****** Object:  Table [Purchasing].[Vendor]    Script Date: 2/3/24 12:02:55 AM ******/\nSET ANSI_NULLS ON\nGO\nSET QUOTED_IDENTIFIER ON\nGO\nCREATE TABLE [Purchasing].[Vendor](\n\t[BusinessEntityID] [int] NOT NULL,\n\t[AccountNumber] [dbo].[AccountNumber] NOT NULL,\n\t[Name] [dbo].[Name] NOT NULL,\n\t[CreditRating] [tinyint] NOT NULL,\n\t[PreferredVendorStatus] [dbo].[Flag] NOT NULL,\n\t[ActiveFlag] [dbo].[Flag] NOT NULL,\n\t[PurchasingWebServiceURL] [nvarchar](1024) NULL,\n\t[ModifiedDate] [datetime] NOT NULL,\n CONSTRAINT [PK_Vendor_BusinessEntityID] PRIMARY KEY CLUSTERED \n(\n\t[BusinessEntityID] ASC\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]\n) ON [PRIMARY]\nGO\nSET ANSI_PADDING ON\nGO\n/****** Object:  Index [AK_Vendor_AccountNumber]    Script Date: 2/3/24 12:03:02 AM ******/\nCREATE UNIQUE NONCLUSTERED INDEX [AK_Vendor_AccountNumber] ON [Purchasing].[Vendor]\n(\n\t[AccountNumber] ASC\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]\nGO\nALTER TABLE [Purchasing].[Vendor] ADD  CONSTRAINT [DF_Vendor_PreferredVendorStatus]  DEFAULT ((1)) FOR [PreferredVendorStatus]\nGO\nALTER TABLE [Purchasing].[Vendor] ADD  CONSTRAINT [DF_Vendor_ActiveFlag]  DEFAULT ((1)) FOR [ActiveFlag]\nGO\nALTER TABLE [Purchasing].[Vendor] ADD  CONSTRAINT [DF_Vendor_ModifiedDate]  DEFAULT (getdate()) FOR [ModifiedDate]\nGO\nALTER TABLE [Purchasing].[Vendor]  WITH CHECK ADD  CONSTRAINT [FK_Vendor_BusinessEntity_BusinessEntityID] FOREIGN KEY([BusinessEntityID])\nREFERENCES [Person].[BusinessEntity] ([BusinessEntityID])\nGO\nALTER TABLE [Purchasing].[Vendor] CHECK CONSTRAINT [FK_Vendor_BusinessEntity_BusinessEntityID]\nGO\nALTER TABLE [Purchasing].[Vendor]  WITH CHECK ADD  CONSTRAINT [CK_Vendor_CreditRating] CHECK  (([CreditRating]>=(1) AND [CreditRating]<=(5)))\nGO\nALTER TABLE [Purchasing].[Vendor] CHECK CONSTRAINT [CK_Vendor_CreditRating]\nGO\n/****** Object:  Trigger [Purchasing].[dVendor]    Script Date: 2/3/24 12:03:04 AM ******/\nSET ANSI_NULLS ON\nGO\nSET QUOTED_IDENTIFIER ON\nGO\n\nCREATE TRIGGER [Purchasing].[dVendor] ON [Purchasing].[Vendor] \nINSTEAD OF DELETE NOT FOR REPLICATION AS \nBEGIN\n    DECLARE @Count int;\n\n    SET @Count = @@ROWCOUNT;\n    IF @Count = 0 \n        RETURN;\n\n    SET NOCOUNT ON;\n\n    BEGIN TRY\n        DECLARE @DeleteCount int;\n\n        SELECT @DeleteCount = COUNT(*) FROM deleted;\n        IF @DeleteCount > 0 \n        BEGIN\n            RAISERROR\n                (N'Vendors cannot be deleted. They can only be marked as not active.', -- Message\n                10, -- Severity.\n                1); -- State.\n\n        -- Rollback any active or uncommittable transactions\n            IF @@TRANCOUNT > 0\n            BEGIN\n                ROLLBACK TRANSACTION;\n            END\n        END;\n    END TRY\n    BEGIN CATCH\n        EXECUTE [dbo].[uspPrintError];\n\n        -- Rollback any active or uncommittable transactions before\n        -- inserting information in the ErrorLog\n        IF @@TRANCOUNT > 0\n        BEGIN\n            ROLLBACK TRANSACTION;\n        END\n\n        EXECUTE [dbo].[uspLogError];\n    END CATCH;\nEND;\n\nGO\nALTER TABLE [Purchasing].[Vendor] ENABLE TRIGGER [dVendor]\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key for Vendor records.  Foreign key to BusinessEntity.BusinessEntityID' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'Vendor', @level2type=N'COLUMN',@level2name=N'BusinessEntityID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Vendor account (identification) number.' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'Vendor', @level2type=N'COLUMN',@level2name=N'AccountNumber'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Company name.' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'Vendor', @level2type=N'COLUMN',@level2name=N'Name'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'1 = Superior, 2 = Excellent, 3 = Above average, 4 = Average, 5 = Below average' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'Vendor', @level2type=N'COLUMN',@level2name=N'CreditRating'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'0 = Do not use if another vendor is available. 1 = Preferred over other vendors supplying the same product.' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'Vendor', @level2type=N'COLUMN',@level2name=N'PreferredVendorStatus'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of 1 (TRUE)' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'Vendor', @level2type=N'CONSTRAINT',@level2name=N'DF_Vendor_PreferredVendorStatus'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'0 = Vendor no longer used. 1 = Vendor is actively used.' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'Vendor', @level2type=N'COLUMN',@level2name=N'ActiveFlag'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of 1 (TRUE)' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'Vendor', @level2type=N'CONSTRAINT',@level2name=N'DF_Vendor_ActiveFlag'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Vendor URL.' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'Vendor', @level2type=N'COLUMN',@level2name=N'PurchasingWebServiceURL'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Date and time the record was last updated.' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'Vendor', @level2type=N'COLUMN',@level2name=N'ModifiedDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of GETDATE()' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'Vendor', @level2type=N'CONSTRAINT',@level2name=N'DF_Vendor_ModifiedDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key (clustered) constraint' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'Vendor', @level2type=N'CONSTRAINT',@level2name=N'PK_Vendor_BusinessEntityID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Unique nonclustered index.' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'Vendor', @level2type=N'INDEX',@level2name=N'AK_Vendor_AccountNumber'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Companies from whom Adventure Works Cycles purchases parts or other goods.' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'Vendor'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'INSTEAD OF DELETE trigger which keeps Vendors from being deleted.' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'Vendor', @level2type=N'TRIGGER',@level2name=N'dVendor'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key constraint referencing BusinessEntity.BusinessEntityID' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'Vendor', @level2type=N'CONSTRAINT',@level2name=N'FK_Vendor_BusinessEntity_BusinessEntityID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Check constraint [CreditRating] BETWEEN (1) AND (5)' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'Vendor', @level2type=N'CONSTRAINT',@level2name=N'CK_Vendor_CreditRating'\nGO", "output_text": "CREATE TABLE purchasing.vendor (\n    businessentityid integer NOT NULL,\n    accountnumber public.\"AccountNumber\" NOT NULL,\n    name public.\"Name\" NOT NULL,\n    creditrating smallint NOT NULL,\n    preferredvendorstatus public.\"Flag\" DEFAULT true NOT NULL,\n    activeflag public.\"Flag\" DEFAULT true NOT NULL,\n    purchasingwebserviceurl character varying(1024),\n    modifieddate timestamp without time zone DEFAULT now() NOT NULL,\n    CONSTRAINT \"CK_Vendor_CreditRating\" CHECK (((creditrating >= 1) AND (creditrating <= 5)))\n);\n\n\n--\n-- Name: TABLE vendor; Type: COMMENT; Schema: purchasing; Owner: -\n--\n\nCOMMENT ON TABLE purchasing.vendor IS 'Companies from whom Adventure Works Cycles purchases parts or other goods.';\n\n\n--\n-- Name: COLUMN vendor.businessentityid; Type: COMMENT; Schema: purchasing; Owner: -\n--\n\nCOMMENT ON COLUMN purchasing.vendor.businessentityid IS 'Primary key for Vendor records.  Foreign key to BusinessEntity.BusinessEntityID';\n\n\n--\n-- Name: COLUMN vendor.accountnumber; Type: COMMENT; Schema: purchasing; Owner: -\n--\n\nCOMMENT ON COLUMN purchasing.vendor.accountnumber IS 'Vendor account (identification) number.';\n\n\n--\n-- Name: COLUMN vendor.name; Type: COMMENT; Schema: purchasing; Owner: -\n--\n\nCOMMENT ON COLUMN purchasing.vendor.name IS 'Company name.';\n\n\n--\n-- Name: COLUMN vendor.creditrating; Type: COMMENT; Schema: purchasing; Owner: -\n--\n\nCOMMENT ON COLUMN purchasing.vendor.creditrating IS '1 = Superior, 2 = Excellent, 3 = Above average, 4 = Average, 5 = Below average';\n\n\n--\n-- Name: COLUMN vendor.preferredvendorstatus; Type: COMMENT; Schema: purchasing; Owner: -\n--\n\nCOMMENT ON COLUMN purchasing.vendor.preferredvendorstatus IS '0 = Do not use if another vendor is available. 1 = Preferred over other vendors supplying the same product.';\n\n\n--\n-- Name: COLUMN vendor.activeflag; Type: COMMENT; Schema: purchasing; Owner: -\n--\n\nCOMMENT ON COLUMN purchasing.vendor.activeflag IS '0 = Vendor no longer used. 1 = Vendor is actively used.';\n\n\n--\n-- Name: COLUMN vendor.purchasingwebserviceurl; Type: COMMENT; Schema: purchasing; Owner: -\n--\n\nCOMMENT ON COLUMN purchasing.vendor.purchasingwebserviceurl IS 'Vendor URL.';"}
{"input_text": "convert following DDL/DML code from MSSQL to Postgresql \nUSE [adventureworks]\nGO\n/****** Object:  Table [Sales].[CountryRegionCurrency]    Script Date: 2/3/24 12:03:00 AM ******/\nSET ANSI_NULLS ON\nGO\nSET QUOTED_IDENTIFIER ON\nGO\nCREATE TABLE [Sales].[CountryRegionCurrency](\n\t[CountryRegionCode] [nvarchar](3) NOT NULL,\n\t[CurrencyCode] [nchar](3) NOT NULL,\n\t[ModifiedDate] [datetime] NOT NULL,\n CONSTRAINT [PK_CountryRegionCurrency_CountryRegionCode_CurrencyCode] PRIMARY KEY CLUSTERED \n(\n\t[CountryRegionCode] ASC,\n\t[CurrencyCode] ASC\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]\n) ON [PRIMARY]\nGO\nSET ANSI_PADDING ON\nGO\n/****** Object:  Index [IX_CountryRegionCurrency_CurrencyCode]    Script Date: 2/3/24 12:03:02 AM ******/\nCREATE NONCLUSTERED INDEX [IX_CountryRegionCurrency_CurrencyCode] ON [Sales].[CountryRegionCurrency]\n(\n\t[CurrencyCode] ASC\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]\nGO\nALTER TABLE [Sales].[CountryRegionCurrency] ADD  CONSTRAINT [DF_CountryRegionCurrency_ModifiedDate]  DEFAULT (getdate()) FOR [ModifiedDate]\nGO\nALTER TABLE [Sales].[CountryRegionCurrency]  WITH CHECK ADD  CONSTRAINT [FK_CountryRegionCurrency_CountryRegion_CountryRegionCode] FOREIGN KEY([CountryRegionCode])\nREFERENCES [Person].[CountryRegion] ([CountryRegionCode])\nGO\nALTER TABLE [Sales].[CountryRegionCurrency] CHECK CONSTRAINT [FK_CountryRegionCurrency_CountryRegion_CountryRegionCode]\nGO\nALTER TABLE [Sales].[CountryRegionCurrency]  WITH CHECK ADD  CONSTRAINT [FK_CountryRegionCurrency_Currency_CurrencyCode] FOREIGN KEY([CurrencyCode])\nREFERENCES [Sales].[Currency] ([CurrencyCode])\nGO\nALTER TABLE [Sales].[CountryRegionCurrency] CHECK CONSTRAINT [FK_CountryRegionCurrency_Currency_CurrencyCode]\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'ISO code for countries and regions. Foreign key to CountryRegion.CountryRegionCode.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'CountryRegionCurrency', @level2type=N'COLUMN',@level2name=N'CountryRegionCode'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'ISO standard currency code. Foreign key to Currency.CurrencyCode.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'CountryRegionCurrency', @level2type=N'COLUMN',@level2name=N'CurrencyCode'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Date and time the record was last updated.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'CountryRegionCurrency', @level2type=N'COLUMN',@level2name=N'ModifiedDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of GETDATE()' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'CountryRegionCurrency', @level2type=N'CONSTRAINT',@level2name=N'DF_CountryRegionCurrency_ModifiedDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key (clustered) constraint' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'CountryRegionCurrency', @level2type=N'CONSTRAINT',@level2name=N'PK_CountryRegionCurrency_CountryRegionCode_CurrencyCode'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Nonclustered index.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'CountryRegionCurrency', @level2type=N'INDEX',@level2name=N'IX_CountryRegionCurrency_CurrencyCode'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Cross-reference table mapping ISO currency codes to a country or region.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'CountryRegionCurrency'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key constraint referencing CountryRegion.CountryRegionCode.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'CountryRegionCurrency', @level2type=N'CONSTRAINT',@level2name=N'FK_CountryRegionCurrency_CountryRegion_CountryRegionCode'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key constraint referencing Currency.CurrencyCode.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'CountryRegionCurrency', @level2type=N'CONSTRAINT',@level2name=N'FK_CountryRegionCurrency_Currency_CurrencyCode'\nGO", "output_text": "CREATE TABLE sales.countryregioncurrency (\n    countryregioncode character varying(3) NOT NULL,\n    currencycode character(3) NOT NULL,\n    modifieddate timestamp without time zone DEFAULT now() NOT NULL\n);\n\n\n--\n-- Name: TABLE countryregioncurrency; Type: COMMENT; Schema: sales; Owner: -\n--\n\nCOMMENT ON TABLE sales.countryregioncurrency IS 'Cross-reference table mapping ISO currency codes to a country or region.';\n\n\n--\n-- Name: COLUMN countryregioncurrency.countryregioncode; Type: COMMENT; Schema: sales; Owner: -\n--\n\nCOMMENT ON COLUMN sales.countryregioncurrency.countryregioncode IS 'ISO code for countries and regions. Foreign key to CountryRegion.CountryRegionCode.';\n\n\n--\n-- Name: COLUMN countryregioncurrency.currencycode; Type: COMMENT; Schema: sales; Owner: -\n--\n\nCOMMENT ON COLUMN sales.countryregioncurrency.currencycode IS 'ISO standard currency code. Foreign key to Currency.CurrencyCode.';"}
{"input_text": "convert following DDL/DML code from MSSQL to Postgresql \nUSE [adventureworks]\nGO\n/****** Object:  Table [Sales].[CreditCard]    Script Date: 2/3/24 12:03:00 AM ******/\nSET ANSI_NULLS ON\nGO\nSET QUOTED_IDENTIFIER ON\nGO\nCREATE TABLE [Sales].[CreditCard](\n\t[CreditCardID] [int] IDENTITY(1,1) NOT NULL,\n\t[CardType] [nvarchar](50) NOT NULL,\n\t[CardNumber] [nvarchar](25) NOT NULL,\n\t[ExpMonth] [tinyint] NOT NULL,\n\t[ExpYear] [smallint] NOT NULL,\n\t[ModifiedDate] [datetime] NOT NULL,\n CONSTRAINT [PK_CreditCard_CreditCardID] PRIMARY KEY CLUSTERED \n(\n\t[CreditCardID] ASC\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]\n) ON [PRIMARY]\nGO\nSET ANSI_PADDING ON\nGO\n/****** Object:  Index [AK_CreditCard_CardNumber]    Script Date: 2/3/24 12:03:02 AM ******/\nCREATE UNIQUE NONCLUSTERED INDEX [AK_CreditCard_CardNumber] ON [Sales].[CreditCard]\n(\n\t[CardNumber] ASC\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]\nGO\nALTER TABLE [Sales].[CreditCard] ADD  CONSTRAINT [DF_CreditCard_ModifiedDate]  DEFAULT (getdate()) FOR [ModifiedDate]\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key for CreditCard records.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'CreditCard', @level2type=N'COLUMN',@level2name=N'CreditCardID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Credit card name.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'CreditCard', @level2type=N'COLUMN',@level2name=N'CardType'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Credit card number.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'CreditCard', @level2type=N'COLUMN',@level2name=N'CardNumber'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Credit card expiration month.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'CreditCard', @level2type=N'COLUMN',@level2name=N'ExpMonth'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Credit card expiration year.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'CreditCard', @level2type=N'COLUMN',@level2name=N'ExpYear'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Date and time the record was last updated.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'CreditCard', @level2type=N'COLUMN',@level2name=N'ModifiedDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of GETDATE()' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'CreditCard', @level2type=N'CONSTRAINT',@level2name=N'DF_CreditCard_ModifiedDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key (clustered) constraint' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'CreditCard', @level2type=N'CONSTRAINT',@level2name=N'PK_CreditCard_CreditCardID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Unique nonclustered index.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'CreditCard', @level2type=N'INDEX',@level2name=N'AK_CreditCard_CardNumber'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Customer credit card information.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'CreditCard'\nGO", "output_text": "CREATE TABLE sales.creditcard (\n    creditcardid integer NOT NULL,\n    cardtype character varying(50) NOT NULL,\n    cardnumber character varying(25) NOT NULL,\n    expmonth smallint NOT NULL,\n    expyear smallint NOT NULL,\n    modifieddate timestamp without time zone DEFAULT now() NOT NULL\n);\n\n\n--\n-- Name: TABLE creditcard; Type: COMMENT; Schema: sales; Owner: -\n--\n\nCOMMENT ON TABLE sales.creditcard IS 'Customer credit card information.';\n\n\n--\n-- Name: COLUMN creditcard.creditcardid; Type: COMMENT; Schema: sales; Owner: -\n--\n\nCOMMENT ON COLUMN sales.creditcard.creditcardid IS 'Primary key for CreditCard records.';\n\n\n--\n-- Name: COLUMN creditcard.cardtype; Type: COMMENT; Schema: sales; Owner: -\n--\n\nCOMMENT ON COLUMN sales.creditcard.cardtype IS 'Credit card name.';\n\n\n--\n-- Name: COLUMN creditcard.cardnumber; Type: COMMENT; Schema: sales; Owner: -\n--\n\nCOMMENT ON COLUMN sales.creditcard.cardnumber IS 'Credit card number.';\n\n\n--\n-- Name: COLUMN creditcard.expmonth; Type: COMMENT; Schema: sales; Owner: -\n--\n\nCOMMENT ON COLUMN sales.creditcard.expmonth IS 'Credit card expiration month.';\n\n\n--\n-- Name: COLUMN creditcard.expyear; Type: COMMENT; Schema: sales; Owner: -\n--\n\nCOMMENT ON COLUMN sales.creditcard.expyear IS 'Credit card expiration year.';"}
{"input_text": "convert following DDL/DML code from MSSQL to Postgresql \nUSE [adventureworks]\nGO\n/****** Object:  Table [Sales].[Currency]    Script Date: 2/3/24 12:03:00 AM ******/\nSET ANSI_NULLS ON\nGO\nSET QUOTED_IDENTIFIER ON\nGO\nCREATE TABLE [Sales].[Currency](\n\t[CurrencyCode] [nchar](3) NOT NULL,\n\t[Name] [dbo].[Name] NOT NULL,\n\t[ModifiedDate] [datetime] NOT NULL,\n CONSTRAINT [PK_Currency_CurrencyCode] PRIMARY KEY CLUSTERED \n(\n\t[CurrencyCode] ASC\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]\n) ON [PRIMARY]\nGO\nSET ANSI_PADDING ON\nGO\n/****** Object:  Index [AK_Currency_Name]    Script Date: 2/3/24 12:03:02 AM ******/\nCREATE UNIQUE NONCLUSTERED INDEX [AK_Currency_Name] ON [Sales].[Currency]\n(\n\t[Name] ASC\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]\nGO\nALTER TABLE [Sales].[Currency] ADD  CONSTRAINT [DF_Currency_ModifiedDate]  DEFAULT (getdate()) FOR [ModifiedDate]\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The ISO code for the Currency.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'Currency', @level2type=N'COLUMN',@level2name=N'CurrencyCode'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Currency name.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'Currency', @level2type=N'COLUMN',@level2name=N'Name'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Date and time the record was last updated.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'Currency', @level2type=N'COLUMN',@level2name=N'ModifiedDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of GETDATE()' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'Currency', @level2type=N'CONSTRAINT',@level2name=N'DF_Currency_ModifiedDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key (clustered) constraint' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'Currency', @level2type=N'CONSTRAINT',@level2name=N'PK_Currency_CurrencyCode'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Unique nonclustered index.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'Currency', @level2type=N'INDEX',@level2name=N'AK_Currency_Name'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Lookup table containing standard ISO currencies.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'Currency'\nGO", "output_text": "CREATE TABLE sales.currency (\n    currencycode character(3) NOT NULL,\n    name public.\"Name\" NOT NULL,\n    modifieddate timestamp without time zone DEFAULT now() NOT NULL\n);\n\n\n--\n-- Name: TABLE currency; Type: COMMENT; Schema: sales; Owner: -\n--\n\nCOMMENT ON TABLE sales.currency IS 'Lookup table containing standard ISO currencies.';\n\n\n--\n-- Name: COLUMN currency.currencycode; Type: COMMENT; Schema: sales; Owner: -\n--\n\nCOMMENT ON COLUMN sales.currency.currencycode IS 'The ISO code for the Currency.';\n\n\n--\n-- Name: COLUMN currency.name; Type: COMMENT; Schema: sales; Owner: -\n--\n\nCOMMENT ON COLUMN sales.currency.name IS 'Currency name.';"}
{"input_text": "convert following DDL/DML code from MSSQL to Postgresql \nUSE [adventureworks]\nGO\n/****** Object:  Table [Sales].[CurrencyRate]    Script Date: 2/3/24 12:03:00 AM ******/\nSET ANSI_NULLS ON\nGO\nSET QUOTED_IDENTIFIER ON\nGO\nCREATE TABLE [Sales].[CurrencyRate](\n\t[CurrencyRateID] [int] IDENTITY(1,1) NOT NULL,\n\t[CurrencyRateDate] [datetime] NOT NULL,\n\t[FromCurrencyCode] [nchar](3) NOT NULL,\n\t[ToCurrencyCode] [nchar](3) NOT NULL,\n\t[AverageRate] [money] NOT NULL,\n\t[EndOfDayRate] [money] NOT NULL,\n\t[ModifiedDate] [datetime] NOT NULL,\n CONSTRAINT [PK_CurrencyRate_CurrencyRateID] PRIMARY KEY CLUSTERED \n(\n\t[CurrencyRateID] ASC\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]\n) ON [PRIMARY]\nGO\nSET ANSI_PADDING ON\nGO\n/****** Object:  Index [AK_CurrencyRate_CurrencyRateDate_FromCurrencyCode_ToCurrencyCode]    Script Date: 2/3/24 12:03:02 AM ******/\nCREATE UNIQUE NONCLUSTERED INDEX [AK_CurrencyRate_CurrencyRateDate_FromCurrencyCode_ToCurrencyCode] ON [Sales].[CurrencyRate]\n(\n\t[CurrencyRateDate] ASC,\n\t[FromCurrencyCode] ASC,\n\t[ToCurrencyCode] ASC\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]\nGO\nALTER TABLE [Sales].[CurrencyRate] ADD  CONSTRAINT [DF_CurrencyRate_ModifiedDate]  DEFAULT (getdate()) FOR [ModifiedDate]\nGO\nALTER TABLE [Sales].[CurrencyRate]  WITH CHECK ADD  CONSTRAINT [FK_CurrencyRate_Currency_FromCurrencyCode] FOREIGN KEY([FromCurrencyCode])\nREFERENCES [Sales].[Currency] ([CurrencyCode])\nGO\nALTER TABLE [Sales].[CurrencyRate] CHECK CONSTRAINT [FK_CurrencyRate_Currency_FromCurrencyCode]\nGO\nALTER TABLE [Sales].[CurrencyRate]  WITH CHECK ADD  CONSTRAINT [FK_CurrencyRate_Currency_ToCurrencyCode] FOREIGN KEY([ToCurrencyCode])\nREFERENCES [Sales].[Currency] ([CurrencyCode])\nGO\nALTER TABLE [Sales].[CurrencyRate] CHECK CONSTRAINT [FK_CurrencyRate_Currency_ToCurrencyCode]\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key for CurrencyRate records.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'CurrencyRate', @level2type=N'COLUMN',@level2name=N'CurrencyRateID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Date and time the exchange rate was obtained.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'CurrencyRate', @level2type=N'COLUMN',@level2name=N'CurrencyRateDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Exchange rate was converted from this currency code.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'CurrencyRate', @level2type=N'COLUMN',@level2name=N'FromCurrencyCode'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Exchange rate was converted to this currency code.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'CurrencyRate', @level2type=N'COLUMN',@level2name=N'ToCurrencyCode'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Average exchange rate for the day.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'CurrencyRate', @level2type=N'COLUMN',@level2name=N'AverageRate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Final exchange rate for the day.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'CurrencyRate', @level2type=N'COLUMN',@level2name=N'EndOfDayRate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Date and time the record was last updated.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'CurrencyRate', @level2type=N'COLUMN',@level2name=N'ModifiedDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of GETDATE()' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'CurrencyRate', @level2type=N'CONSTRAINT',@level2name=N'DF_CurrencyRate_ModifiedDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key (clustered) constraint' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'CurrencyRate', @level2type=N'CONSTRAINT',@level2name=N'PK_CurrencyRate_CurrencyRateID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Unique nonclustered index.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'CurrencyRate', @level2type=N'INDEX',@level2name=N'AK_CurrencyRate_CurrencyRateDate_FromCurrencyCode_ToCurrencyCode'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Currency exchange rates.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'CurrencyRate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key constraint referencing Currency.FromCurrencyCode.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'CurrencyRate', @level2type=N'CONSTRAINT',@level2name=N'FK_CurrencyRate_Currency_FromCurrencyCode'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key constraint referencing Currency.ToCurrencyCode.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'CurrencyRate', @level2type=N'CONSTRAINT',@level2name=N'FK_CurrencyRate_Currency_ToCurrencyCode'\nGO\n", "output_text": "CREATE TABLE sales.currencyrate (\n    currencyrateid integer NOT NULL,\n    currencyratedate timestamp without time zone NOT NULL,\n    fromcurrencycode character(3) NOT NULL,\n    tocurrencycode character(3) NOT NULL,\n    averagerate numeric NOT NULL,\n    endofdayrate numeric NOT NULL,\n    modifieddate timestamp without time zone DEFAULT now() NOT NULL\n);\n\n\n--\n-- Name: TABLE currencyrate; Type: COMMENT; Schema: sales; Owner: -\n--\n\nCOMMENT ON TABLE sales.currencyrate IS 'Currency exchange rates.';\n\n\n--\n-- Name: COLUMN currencyrate.currencyrateid; Type: COMMENT; Schema: sales; Owner: -\n--\n\nCOMMENT ON COLUMN sales.currencyrate.currencyrateid IS 'Primary key for CurrencyRate records.';\n\n\n--\n-- Name: COLUMN currencyrate.currencyratedate; Type: COMMENT; Schema: sales; Owner: -\n--\n\nCOMMENT ON COLUMN sales.currencyrate.currencyratedate IS 'Date and time the exchange rate was obtained.';\n\n\n--\n-- Name: COLUMN currencyrate.fromcurrencycode; Type: COMMENT; Schema: sales; Owner: -\n--\n\nCOMMENT ON COLUMN sales.currencyrate.fromcurrencycode IS 'Exchange rate was converted from this currency code.';\n\n\n--\n-- Name: COLUMN currencyrate.tocurrencycode; Type: COMMENT; Schema: sales; Owner: -\n--\n\nCOMMENT ON COLUMN sales.currencyrate.tocurrencycode IS 'Exchange rate was converted to this currency code.';\n\n\n--\n-- Name: COLUMN currencyrate.averagerate; Type: COMMENT; Schema: sales; Owner: -\n--\n\nCOMMENT ON COLUMN sales.currencyrate.averagerate IS 'Average exchange rate for the day.';\n\n\n--\n-- Name: COLUMN currencyrate.endofdayrate; Type: COMMENT; Schema: sales; Owner: -\n--\n\nCOMMENT ON COLUMN sales.currencyrate.endofdayrate IS 'Final exchange rate for the day.';"}
{"input_text": "convert following DDL/DML code from MSSQL to Postgresql \nUSE [adventureworks]\nGO\n/****** Object:  Table [Sales].[Customer]    Script Date: 2/3/24 12:02:54 AM ******/\nSET ANSI_NULLS ON\nGO\nSET QUOTED_IDENTIFIER ON\nGO\nCREATE TABLE [Sales].[Customer](\n\t[CustomerID] [int] IDENTITY(1,1) NOT FOR REPLICATION NOT NULL,\n\t[PersonID] [int] NULL,\n\t[StoreID] [int] NULL,\n\t[TerritoryID] [int] NULL,\n\t[AccountNumber]  AS (isnull('AW'+[dbo].[ufnLeadingZeros]([CustomerID]),'')),\n\t[rowguid] [uniqueidentifier] ROWGUIDCOL  NOT NULL,\n\t[ModifiedDate] [datetime] NOT NULL,\n CONSTRAINT [PK_Customer_CustomerID] PRIMARY KEY CLUSTERED \n(\n\t[CustomerID] ASC\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]\n) ON [PRIMARY]\nGO\nSET ARITHABORT ON\nSET CONCAT_NULL_YIELDS_NULL ON\nSET QUOTED_IDENTIFIER ON\nSET ANSI_NULLS ON\nSET ANSI_PADDING ON\nSET ANSI_WARNINGS ON\nSET NUMERIC_ROUNDABORT OFF\nGO\n/****** Object:  Index [AK_Customer_AccountNumber]    Script Date: 2/3/24 12:03:02 AM ******/\nCREATE UNIQUE NONCLUSTERED INDEX [AK_Customer_AccountNumber] ON [Sales].[Customer]\n(\n\t[AccountNumber] ASC\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]\nGO\n/****** Object:  Index [AK_Customer_rowguid]    Script Date: 2/3/24 12:03:02 AM ******/\nCREATE UNIQUE NONCLUSTERED INDEX [AK_Customer_rowguid] ON [Sales].[Customer]\n(\n\t[rowguid] ASC\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]\nGO\n/****** Object:  Index [IX_Customer_TerritoryID]    Script Date: 2/3/24 12:03:02 AM ******/\nCREATE NONCLUSTERED INDEX [IX_Customer_TerritoryID] ON [Sales].[Customer]\n(\n\t[TerritoryID] ASC\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]\nGO\nALTER TABLE [Sales].[Customer] ADD  CONSTRAINT [DF_Customer_rowguid]  DEFAULT (newid()) FOR [rowguid]\nGO\nALTER TABLE [Sales].[Customer] ADD  CONSTRAINT [DF_Customer_ModifiedDate]  DEFAULT (getdate()) FOR [ModifiedDate]\nGO\nALTER TABLE [Sales].[Customer]  WITH CHECK ADD  CONSTRAINT [FK_Customer_Person_PersonID] FOREIGN KEY([PersonID])\nREFERENCES [Person].[Person] ([BusinessEntityID])\nGO\nALTER TABLE [Sales].[Customer] CHECK CONSTRAINT [FK_Customer_Person_PersonID]\nGO\nALTER TABLE [Sales].[Customer]  WITH CHECK ADD  CONSTRAINT [FK_Customer_SalesTerritory_TerritoryID] FOREIGN KEY([TerritoryID])\nREFERENCES [Sales].[SalesTerritory] ([TerritoryID])\nGO\nALTER TABLE [Sales].[Customer] CHECK CONSTRAINT [FK_Customer_SalesTerritory_TerritoryID]\nGO\nALTER TABLE [Sales].[Customer]  WITH CHECK ADD  CONSTRAINT [FK_Customer_Store_StoreID] FOREIGN KEY([StoreID])\nREFERENCES [Sales].[Store] ([BusinessEntityID])\nGO\nALTER TABLE [Sales].[Customer] CHECK CONSTRAINT [FK_Customer_Store_StoreID]\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'Customer', @level2type=N'COLUMN',@level2name=N'CustomerID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key to Person.BusinessEntityID' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'Customer', @level2type=N'COLUMN',@level2name=N'PersonID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key to Store.BusinessEntityID' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'Customer', @level2type=N'COLUMN',@level2name=N'StoreID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'ID of the territory in which the customer is located. Foreign key to SalesTerritory.SalesTerritoryID.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'Customer', @level2type=N'COLUMN',@level2name=N'TerritoryID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Unique number identifying the customer assigned by the accounting system.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'Customer', @level2type=N'COLUMN',@level2name=N'AccountNumber'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'Customer', @level2type=N'COLUMN',@level2name=N'rowguid'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of NEWID()' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'Customer', @level2type=N'CONSTRAINT',@level2name=N'DF_Customer_rowguid'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Date and time the record was last updated.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'Customer', @level2type=N'COLUMN',@level2name=N'ModifiedDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of GETDATE()' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'Customer', @level2type=N'CONSTRAINT',@level2name=N'DF_Customer_ModifiedDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key (clustered) constraint' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'Customer', @level2type=N'CONSTRAINT',@level2name=N'PK_Customer_CustomerID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Unique nonclustered index.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'Customer', @level2type=N'INDEX',@level2name=N'AK_Customer_AccountNumber'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Unique nonclustered index. Used to support replication samples.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'Customer', @level2type=N'INDEX',@level2name=N'AK_Customer_rowguid'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Nonclustered index.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'Customer', @level2type=N'INDEX',@level2name=N'IX_Customer_TerritoryID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Current customer information. Also see the Person and Store tables.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'Customer'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key constraint referencing Person.BusinessEntityID.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'Customer', @level2type=N'CONSTRAINT',@level2name=N'FK_Customer_Person_PersonID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key constraint referencing SalesTerritory.TerritoryID.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'Customer', @level2type=N'CONSTRAINT',@level2name=N'FK_Customer_SalesTerritory_TerritoryID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key constraint referencing Store.BusinessEntityID.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'Customer', @level2type=N'CONSTRAINT',@level2name=N'FK_Customer_Store_StoreID'\nGO", "output_text": "CREATE TABLE sales.customer (\n    customerid integer NOT NULL,\n    personid integer,\n    storeid integer,\n    territoryid integer,\n    rowguid uuid DEFAULT public.uuid_generate_v1() NOT NULL,\n    modifieddate timestamp without time zone DEFAULT now() NOT NULL\n);\n\n\n--\n-- Name: TABLE customer; Type: COMMENT; Schema: sales; Owner: -\n--\n\nCOMMENT ON TABLE sales.customer IS 'Current customer information. Also see the Person and Store tables.';\n\n\n--\n-- Name: COLUMN customer.customerid; Type: COMMENT; Schema: sales; Owner: -\n--\n\nCOMMENT ON COLUMN sales.customer.customerid IS 'Primary key.';\n\n\n--\n-- Name: COLUMN customer.personid; Type: COMMENT; Schema: sales; Owner: -\n--\n\nCOMMENT ON COLUMN sales.customer.personid IS 'Foreign key to Person.BusinessEntityID';\n\n\n--\n-- Name: COLUMN customer.storeid; Type: COMMENT; Schema: sales; Owner: -\n--\n\nCOMMENT ON COLUMN sales.customer.storeid IS 'Foreign key to Store.BusinessEntityID';\n\n\n--\n-- Name: COLUMN customer.territoryid; Type: COMMENT; Schema: sales; Owner: -\n--\n\nCOMMENT ON COLUMN sales.customer.territoryid IS 'ID of the territory in which the customer is located. Foreign key to SalesTerritory.SalesTerritoryID.';"}
{"input_text": "convert following DDL/DML code from MSSQL to Postgresql \nUSE [adventureworks]\nGO\n/****** Object:  Table [Sales].[PersonCreditCard]    Script Date: 2/3/24 12:03:00 AM ******/\nSET ANSI_NULLS ON\nGO\nSET QUOTED_IDENTIFIER ON\nGO\nCREATE TABLE [Sales].[PersonCreditCard](\n\t[BusinessEntityID] [int] NOT NULL,\n\t[CreditCardID] [int] NOT NULL,\n\t[ModifiedDate] [datetime] NOT NULL,\n CONSTRAINT [PK_PersonCreditCard_BusinessEntityID_CreditCardID] PRIMARY KEY CLUSTERED \n(\n\t[BusinessEntityID] ASC,\n\t[CreditCardID] ASC\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]\n) ON [PRIMARY]\nGO\nALTER TABLE [Sales].[PersonCreditCard] ADD  CONSTRAINT [DF_PersonCreditCard_ModifiedDate]  DEFAULT (getdate()) FOR [ModifiedDate]\nGO\nALTER TABLE [Sales].[PersonCreditCard]  WITH CHECK ADD  CONSTRAINT [FK_PersonCreditCard_CreditCard_CreditCardID] FOREIGN KEY([CreditCardID])\nREFERENCES [Sales].[CreditCard] ([CreditCardID])\nGO\nALTER TABLE [Sales].[PersonCreditCard] CHECK CONSTRAINT [FK_PersonCreditCard_CreditCard_CreditCardID]\nGO\nALTER TABLE [Sales].[PersonCreditCard]  WITH CHECK ADD  CONSTRAINT [FK_PersonCreditCard_Person_BusinessEntityID] FOREIGN KEY([BusinessEntityID])\nREFERENCES [Person].[Person] ([BusinessEntityID])\nGO\nALTER TABLE [Sales].[PersonCreditCard] CHECK CONSTRAINT [FK_PersonCreditCard_Person_BusinessEntityID]\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Business entity identification number. Foreign key to Person.BusinessEntityID.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'PersonCreditCard', @level2type=N'COLUMN',@level2name=N'BusinessEntityID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Credit card identification number. Foreign key to CreditCard.CreditCardID.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'PersonCreditCard', @level2type=N'COLUMN',@level2name=N'CreditCardID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Date and time the record was last updated.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'PersonCreditCard', @level2type=N'COLUMN',@level2name=N'ModifiedDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of GETDATE()' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'PersonCreditCard', @level2type=N'CONSTRAINT',@level2name=N'DF_PersonCreditCard_ModifiedDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key (clustered) constraint' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'PersonCreditCard', @level2type=N'CONSTRAINT',@level2name=N'PK_PersonCreditCard_BusinessEntityID_CreditCardID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Cross-reference table mapping people to their credit card information in the CreditCard table. ' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'PersonCreditCard'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key constraint referencing CreditCard.CreditCardID.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'PersonCreditCard', @level2type=N'CONSTRAINT',@level2name=N'FK_PersonCreditCard_CreditCard_CreditCardID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key constraint referencing Person.BusinessEntityID.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'PersonCreditCard', @level2type=N'CONSTRAINT',@level2name=N'FK_PersonCreditCard_Person_BusinessEntityID'\nGO", "output_text": "CREATE TABLE sales.personcreditcard (\n    businessentityid integer NOT NULL,\n    creditcardid integer NOT NULL,\n    modifieddate timestamp without time zone DEFAULT now() NOT NULL\n);\n\n\n--\n-- Name: TABLE personcreditcard; Type: COMMENT; Schema: sales; Owner: -\n--\n\nCOMMENT ON TABLE sales.personcreditcard IS 'Cross-reference table mapping people to their credit card information in the CreditCard table.';\n\n\n--\n-- Name: COLUMN personcreditcard.businessentityid; Type: COMMENT; Schema: sales; Owner: -\n--\n\nCOMMENT ON COLUMN sales.personcreditcard.businessentityid IS 'Business entity identification number. Foreign key to Person.BusinessEntityID.';\n\n\n--\n-- Name: COLUMN personcreditcard.creditcardid; Type: COMMENT; Schema: sales; Owner: -\n--\n\nCOMMENT ON COLUMN sales.personcreditcard.creditcardid IS 'Credit card identification number. Foreign key to CreditCard.CreditCardID.';"}
{"input_text": "convert following DDL/DML code from MSSQL to Postgresql \nUSE [adventureworks]\nGO\n/****** Object:  Table [Sales].[SalesOrderDetail]    Script Date: 2/3/24 12:03:01 AM ******/\nSET ANSI_NULLS ON\nGO\nSET QUOTED_IDENTIFIER ON\nGO\nCREATE TABLE [Sales].[SalesOrderDetail](\n\t[SalesOrderID] [int] NOT NULL,\n\t[SalesOrderDetailID] [int] IDENTITY(1,1) NOT NULL,\n\t[CarrierTrackingNumber] [nvarchar](25) NULL,\n\t[OrderQty] [smallint] NOT NULL,\n\t[ProductID] [int] NOT NULL,\n\t[SpecialOfferID] [int] NOT NULL,\n\t[UnitPrice] [money] NOT NULL,\n\t[UnitPriceDiscount] [money] NOT NULL,\n\t[LineTotal]  AS (isnull(([UnitPrice]*((1.0)-[UnitPriceDiscount]))*[OrderQty],(0.0))),\n\t[rowguid] [uniqueidentifier] ROWGUIDCOL  NOT NULL,\n\t[ModifiedDate] [datetime] NOT NULL,\n CONSTRAINT [PK_SalesOrderDetail_SalesOrderID_SalesOrderDetailID] PRIMARY KEY CLUSTERED \n(\n\t[SalesOrderID] ASC,\n\t[SalesOrderDetailID] ASC\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]\n) ON [PRIMARY]\nGO\n/****** Object:  Index [AK_SalesOrderDetail_rowguid]    Script Date: 2/3/24 12:03:02 AM ******/\nCREATE UNIQUE NONCLUSTERED INDEX [AK_SalesOrderDetail_rowguid] ON [Sales].[SalesOrderDetail]\n(\n\t[rowguid] ASC\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]\nGO\n/****** Object:  Index [IX_SalesOrderDetail_ProductID]    Script Date: 2/3/24 12:03:02 AM ******/\nCREATE NONCLUSTERED INDEX [IX_SalesOrderDetail_ProductID] ON [Sales].[SalesOrderDetail]\n(\n\t[ProductID] ASC\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]\nGO\nALTER TABLE [Sales].[SalesOrderDetail] ADD  CONSTRAINT [DF_SalesOrderDetail_UnitPriceDiscount]  DEFAULT ((0.0)) FOR [UnitPriceDiscount]\nGO\nALTER TABLE [Sales].[SalesOrderDetail] ADD  CONSTRAINT [DF_SalesOrderDetail_rowguid]  DEFAULT (newid()) FOR [rowguid]\nGO\nALTER TABLE [Sales].[SalesOrderDetail] ADD  CONSTRAINT [DF_SalesOrderDetail_ModifiedDate]  DEFAULT (getdate()) FOR [ModifiedDate]\nGO\nALTER TABLE [Sales].[SalesOrderDetail]  WITH CHECK ADD  CONSTRAINT [FK_SalesOrderDetail_SalesOrderHeader_SalesOrderID] FOREIGN KEY([SalesOrderID])\nREFERENCES [Sales].[SalesOrderHeader] ([SalesOrderID])\nON DELETE CASCADE\nGO\nALTER TABLE [Sales].[SalesOrderDetail] CHECK CONSTRAINT [FK_SalesOrderDetail_SalesOrderHeader_SalesOrderID]\nGO\nALTER TABLE [Sales].[SalesOrderDetail]  WITH CHECK ADD  CONSTRAINT [FK_SalesOrderDetail_SpecialOfferProduct_SpecialOfferIDProductID] FOREIGN KEY([SpecialOfferID], [ProductID])\nREFERENCES [Sales].[SpecialOfferProduct] ([SpecialOfferID], [ProductID])\nGO\nALTER TABLE [Sales].[SalesOrderDetail] CHECK CONSTRAINT [FK_SalesOrderDetail_SpecialOfferProduct_SpecialOfferIDProductID]\nGO\nALTER TABLE [Sales].[SalesOrderDetail]  WITH CHECK ADD  CONSTRAINT [CK_SalesOrderDetail_OrderQty] CHECK  (([OrderQty]>(0)))\nGO\nALTER TABLE [Sales].[SalesOrderDetail] CHECK CONSTRAINT [CK_SalesOrderDetail_OrderQty]\nGO\nALTER TABLE [Sales].[SalesOrderDetail]  WITH CHECK ADD  CONSTRAINT [CK_SalesOrderDetail_UnitPrice] CHECK  (([UnitPrice]>=(0.00)))\nGO\nALTER TABLE [Sales].[SalesOrderDetail] CHECK CONSTRAINT [CK_SalesOrderDetail_UnitPrice]\nGO\nALTER TABLE [Sales].[SalesOrderDetail]  WITH CHECK ADD  CONSTRAINT [CK_SalesOrderDetail_UnitPriceDiscount] CHECK  (([UnitPriceDiscount]>=(0.00)))\nGO\nALTER TABLE [Sales].[SalesOrderDetail] CHECK CONSTRAINT [CK_SalesOrderDetail_UnitPriceDiscount]\nGO\n/****** Object:  Trigger [Sales].[iduSalesOrderDetail]    Script Date: 2/3/24 12:03:04 AM ******/\nSET ANSI_NULLS ON\nGO\nSET QUOTED_IDENTIFIER ON\nGO\n\nCREATE TRIGGER [Sales].[iduSalesOrderDetail] ON [Sales].[SalesOrderDetail] \nAFTER INSERT, DELETE, UPDATE AS \nBEGIN\n    DECLARE @Count int;\n\n    SET @Count = @@ROWCOUNT;\n    IF @Count = 0 \n        RETURN;\n\n    SET NOCOUNT ON;\n\n    BEGIN TRY\n        -- If inserting or updating these columns\n        IF UPDATE([ProductID]) OR UPDATE([OrderQty]) OR UPDATE([UnitPrice]) OR UPDATE([UnitPriceDiscount]) \n        -- Insert record into TransactionHistory\n        BEGIN\n            INSERT INTO [Production].[TransactionHistory]\n                ([ProductID]\n                ,[ReferenceOrderID]\n                ,[ReferenceOrderLineID]\n                ,[TransactionType]\n                ,[TransactionDate]\n                ,[Quantity]\n                ,[ActualCost])\n            SELECT \n                inserted.[ProductID]\n                ,inserted.[SalesOrderID]\n                ,inserted.[SalesOrderDetailID]\n                ,'S'\n                ,GETDATE()\n                ,inserted.[OrderQty]\n                ,inserted.[UnitPrice]\n            FROM inserted \n                INNER JOIN [Sales].[SalesOrderHeader] \n                ON inserted.[SalesOrderID] = [Sales].[SalesOrderHeader].[SalesOrderID];\n\n            UPDATE [Person].[Person] \n            SET [Demographics].modify('declare default element namespace \n                \"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/IndividualSurvey\"; \n                replace value of (/IndividualSurvey/TotalPurchaseYTD)[1] \n                with data(/IndividualSurvey/TotalPurchaseYTD)[1] + sql:column (\"inserted.LineTotal\")') \n            FROM inserted \n                INNER JOIN [Sales].[SalesOrderHeader] AS SOH\n                ON inserted.[SalesOrderID] = SOH.[SalesOrderID] \n                INNER JOIN [Sales].[Customer] AS C\n                ON SOH.[CustomerID] = C.[CustomerID]\n            WHERE C.[PersonID] = [Person].[Person].[BusinessEntityID];\n        END;\n\n        -- Update SubTotal in SalesOrderHeader record. Note that this causes the \n        -- SalesOrderHeader trigger to fire which will update the RevisionNumber.\n        UPDATE [Sales].[SalesOrderHeader]\n        SET [Sales].[SalesOrderHeader].[SubTotal] = \n            (SELECT SUM([Sales].[SalesOrderDetail].[LineTotal])\n                FROM [Sales].[SalesOrderDetail]\n                WHERE [Sales].[SalesOrderHeader].[SalesOrderID] = [Sales].[SalesOrderDetail].[SalesOrderID])\n        WHERE [Sales].[SalesOrderHeader].[SalesOrderID] IN (SELECT inserted.[SalesOrderID] FROM inserted);\n\n        UPDATE [Person].[Person] \n        SET [Demographics].modify('declare default element namespace \n            \"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/IndividualSurvey\"; \n            replace value of (/IndividualSurvey/TotalPurchaseYTD)[1] \n            with data(/IndividualSurvey/TotalPurchaseYTD)[1] - sql:column(\"deleted.LineTotal\")') \n        FROM deleted \n            INNER JOIN [Sales].[SalesOrderHeader] \n            ON deleted.[SalesOrderID] = [Sales].[SalesOrderHeader].[SalesOrderID] \n            INNER JOIN [Sales].[Customer]\n            ON [Sales].[Customer].[CustomerID] = [Sales].[SalesOrderHeader].[CustomerID]\n        WHERE [Sales].[Customer].[PersonID] = [Person].[Person].[BusinessEntityID];\n    END TRY\n    BEGIN CATCH\n        EXECUTE [dbo].[uspPrintError];\n\n        -- Rollback any active or uncommittable transactions before\n        -- inserting information in the ErrorLog\n        IF @@TRANCOUNT > 0\n        BEGIN\n            ROLLBACK TRANSACTION;\n        END\n\n        EXECUTE [dbo].[uspLogError];\n    END CATCH;\nEND;\n\nGO\nALTER TABLE [Sales].[SalesOrderDetail] ENABLE TRIGGER [iduSalesOrderDetail]\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key. Foreign key to SalesOrderHeader.SalesOrderID.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesOrderDetail', @level2type=N'COLUMN',@level2name=N'SalesOrderID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key. One incremental unique number per product sold.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesOrderDetail', @level2type=N'COLUMN',@level2name=N'SalesOrderDetailID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Shipment tracking number supplied by the shipper.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesOrderDetail', @level2type=N'COLUMN',@level2name=N'CarrierTrackingNumber'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Quantity ordered per product.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesOrderDetail', @level2type=N'COLUMN',@level2name=N'OrderQty'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Product sold to customer. Foreign key to Product.ProductID.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesOrderDetail', @level2type=N'COLUMN',@level2name=N'ProductID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Promotional code. Foreign key to SpecialOffer.SpecialOfferID.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesOrderDetail', @level2type=N'COLUMN',@level2name=N'SpecialOfferID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Selling price of a single product.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesOrderDetail', @level2type=N'COLUMN',@level2name=N'UnitPrice'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Discount amount.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesOrderDetail', @level2type=N'COLUMN',@level2name=N'UnitPriceDiscount'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of 0.0' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesOrderDetail', @level2type=N'CONSTRAINT',@level2name=N'DF_SalesOrderDetail_UnitPriceDiscount'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Per product subtotal. Computed as UnitPrice * (1 - UnitPriceDiscount) * OrderQty.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesOrderDetail', @level2type=N'COLUMN',@level2name=N'LineTotal'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesOrderDetail', @level2type=N'COLUMN',@level2name=N'rowguid'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of NEWID()' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesOrderDetail', @level2type=N'CONSTRAINT',@level2name=N'DF_SalesOrderDetail_rowguid'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Date and time the record was last updated.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesOrderDetail', @level2type=N'COLUMN',@level2name=N'ModifiedDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of GETDATE()' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesOrderDetail', @level2type=N'CONSTRAINT',@level2name=N'DF_SalesOrderDetail_ModifiedDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key (clustered) constraint' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesOrderDetail', @level2type=N'CONSTRAINT',@level2name=N'PK_SalesOrderDetail_SalesOrderID_SalesOrderDetailID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Unique nonclustered index. Used to support replication samples.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesOrderDetail', @level2type=N'INDEX',@level2name=N'AK_SalesOrderDetail_rowguid'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Nonclustered index.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesOrderDetail', @level2type=N'INDEX',@level2name=N'IX_SalesOrderDetail_ProductID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Individual products associated with a specific sales order. See SalesOrderHeader.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesOrderDetail'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'AFTER INSERT, DELETE, UPDATE trigger that inserts a row in the TransactionHistory table, updates ModifiedDate in SalesOrderDetail and updates the SalesOrderHeader.SubTotal column.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesOrderDetail', @level2type=N'TRIGGER',@level2name=N'iduSalesOrderDetail'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key constraint referencing SalesOrderHeader.PurchaseOrderID.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesOrderDetail', @level2type=N'CONSTRAINT',@level2name=N'FK_SalesOrderDetail_SalesOrderHeader_SalesOrderID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key constraint referencing SpecialOfferProduct.SpecialOfferIDProductID.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesOrderDetail', @level2type=N'CONSTRAINT',@level2name=N'FK_SalesOrderDetail_SpecialOfferProduct_SpecialOfferIDProductID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Check constraint [OrderQty] > (0)' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesOrderDetail', @level2type=N'CONSTRAINT',@level2name=N'CK_SalesOrderDetail_OrderQty'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Check constraint [UnitPrice] >= (0.00)' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesOrderDetail', @level2type=N'CONSTRAINT',@level2name=N'CK_SalesOrderDetail_UnitPrice'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Check constraint [UnitPriceDiscount] >= (0.00)' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesOrderDetail', @level2type=N'CONSTRAINT',@level2name=N'CK_SalesOrderDetail_UnitPriceDiscount'\nGO\n", "output_text": "CREATE TABLE sales.salesorderdetail (\n    salesorderid integer NOT NULL,\n    salesorderdetailid integer NOT NULL,\n    carriertrackingnumber character varying(25),\n    orderqty smallint NOT NULL,\n    productid integer NOT NULL,\n    specialofferid integer NOT NULL,\n    unitprice numeric NOT NULL,\n    unitpricediscount numeric DEFAULT 0.0 NOT NULL,\n    rowguid uuid DEFAULT public.uuid_generate_v1() NOT NULL,\n    modifieddate timestamp without time zone DEFAULT now() NOT NULL,\n    CONSTRAINT \"CK_SalesOrderDetail_OrderQty\" CHECK ((orderqty > 0)),\n    CONSTRAINT \"CK_SalesOrderDetail_UnitPrice\" CHECK ((unitprice >= 0.00)),\n    CONSTRAINT \"CK_SalesOrderDetail_UnitPriceDiscount\" CHECK ((unitpricediscount >= 0.00))\n);\n\n\n--\n-- Name: TABLE salesorderdetail; Type: COMMENT; Schema: sales; Owner: -\n--\n\nCOMMENT ON TABLE sales.salesorderdetail IS 'Individual products associated with a specific sales order. See SalesOrderHeader.';\n\n\n--\n-- Name: COLUMN salesorderdetail.salesorderid; Type: COMMENT; Schema: sales; Owner: -\n--\n\nCOMMENT ON COLUMN sales.salesorderdetail.salesorderid IS 'Primary key. Foreign key to SalesOrderHeader.SalesOrderID.';\n\n\n--\n-- Name: COLUMN salesorderdetail.salesorderdetailid; Type: COMMENT; Schema: sales; Owner: -\n--\n\nCOMMENT ON COLUMN sales.salesorderdetail.salesorderdetailid IS 'Primary key. One incremental unique number per product sold.';\n\n\n--\n-- Name: COLUMN salesorderdetail.carriertrackingnumber; Type: COMMENT; Schema: sales; Owner: -\n--\n\nCOMMENT ON COLUMN sales.salesorderdetail.carriertrackingnumber IS 'Shipment tracking number supplied by the shipper.';\n\n\n--\n-- Name: COLUMN salesorderdetail.orderqty; Type: COMMENT; Schema: sales; Owner: -\n--\n\nCOMMENT ON COLUMN sales.salesorderdetail.orderqty IS 'Quantity ordered per product.';\n\n\n--\n-- Name: COLUMN salesorderdetail.productid; Type: COMMENT; Schema: sales; Owner: -\n--\n\nCOMMENT ON COLUMN sales.salesorderdetail.productid IS 'Product sold to customer. Foreign key to Product.ProductID.';\n\n\n--\n-- Name: COLUMN salesorderdetail.specialofferid; Type: COMMENT; Schema: sales; Owner: -\n--\n\nCOMMENT ON COLUMN sales.salesorderdetail.specialofferid IS 'Promotional code. Foreign key to SpecialOffer.SpecialOfferID.';\n\n\n--\n-- Name: COLUMN salesorderdetail.unitprice; Type: COMMENT; Schema: sales; Owner: -\n--\n\nCOMMENT ON COLUMN sales.salesorderdetail.unitprice IS 'Selling price of a single product.';\n\n\n--\n-- Name: COLUMN salesorderdetail.unitpricediscount; Type: COMMENT; Schema: sales; Owner: -\n--\n\nCOMMENT ON COLUMN sales.salesorderdetail.unitpricediscount IS 'Discount amount.';"}
{"input_text": "convert following DDL/DML code from MSSQL to Postgresql \nUSE [adventureworks]\nGO\n/****** Object:  Table [Sales].[SalesOrderHeader]    Script Date: 2/3/24 12:02:55 AM ******/\nSET ANSI_NULLS ON\nGO\nSET QUOTED_IDENTIFIER ON\nGO\nCREATE TABLE [Sales].[SalesOrderHeader](\n\t[SalesOrderID] [int] IDENTITY(1,1) NOT FOR REPLICATION NOT NULL,\n\t[RevisionNumber] [tinyint] NOT NULL,\n\t[OrderDate] [datetime] NOT NULL,\n\t[DueDate] [datetime] NOT NULL,\n\t[ShipDate] [datetime] NULL,\n\t[Status] [tinyint] NOT NULL,\n\t[OnlineOrderFlag] [dbo].[Flag] NOT NULL,\n\t[SalesOrderNumber]  AS (isnull(N'SO'+CONVERT([nvarchar](23),[SalesOrderID]),N'*** ERROR ***')),\n\t[PurchaseOrderNumber] [dbo].[OrderNumber] NULL,\n\t[AccountNumber] [dbo].[AccountNumber] NULL,\n\t[CustomerID] [int] NOT NULL,\n\t[SalesPersonID] [int] NULL,\n\t[TerritoryID] [int] NULL,\n\t[BillToAddressID] [int] NOT NULL,\n\t[ShipToAddressID] [int] NOT NULL,\n\t[ShipMethodID] [int] NOT NULL,\n\t[CreditCardID] [int] NULL,\n\t[CreditCardApprovalCode] [varchar](15) NULL,\n\t[CurrencyRateID] [int] NULL,\n\t[SubTotal] [money] NOT NULL,\n\t[TaxAmt] [money] NOT NULL,\n\t[Freight] [money] NOT NULL,\n\t[TotalDue]  AS (isnull(([SubTotal]+[TaxAmt])+[Freight],(0))),\n\t[Comment] [nvarchar](128) NULL,\n\t[rowguid] [uniqueidentifier] ROWGUIDCOL  NOT NULL,\n\t[ModifiedDate] [datetime] NOT NULL,\n CONSTRAINT [PK_SalesOrderHeader_SalesOrderID] PRIMARY KEY CLUSTERED \n(\n\t[SalesOrderID] ASC\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]\n) ON [PRIMARY]\nGO\n/****** Object:  Index [AK_SalesOrderHeader_rowguid]    Script Date: 2/3/24 12:03:02 AM ******/\nCREATE UNIQUE NONCLUSTERED INDEX [AK_SalesOrderHeader_rowguid] ON [Sales].[SalesOrderHeader]\n(\n\t[rowguid] ASC\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]\nGO\nSET ARITHABORT ON\nSET CONCAT_NULL_YIELDS_NULL ON\nSET QUOTED_IDENTIFIER ON\nSET ANSI_NULLS ON\nSET ANSI_PADDING ON\nSET ANSI_WARNINGS ON\nSET NUMERIC_ROUNDABORT OFF\nGO\n/****** Object:  Index [AK_SalesOrderHeader_SalesOrderNumber]    Script Date: 2/3/24 12:03:02 AM ******/\nCREATE UNIQUE NONCLUSTERED INDEX [AK_SalesOrderHeader_SalesOrderNumber] ON [Sales].[SalesOrderHeader]\n(\n\t[SalesOrderNumber] ASC\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]\nGO\n/****** Object:  Index [IX_SalesOrderHeader_CustomerID]    Script Date: 2/3/24 12:03:02 AM ******/\nCREATE NONCLUSTERED INDEX [IX_SalesOrderHeader_CustomerID] ON [Sales].[SalesOrderHeader]\n(\n\t[CustomerID] ASC\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]\nGO\n/****** Object:  Index [IX_SalesOrderHeader_SalesPersonID]    Script Date: 2/3/24 12:03:02 AM ******/\nCREATE NONCLUSTERED INDEX [IX_SalesOrderHeader_SalesPersonID] ON [Sales].[SalesOrderHeader]\n(\n\t[SalesPersonID] ASC\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]\nGO\nALTER TABLE [Sales].[SalesOrderHeader] ADD  CONSTRAINT [DF_SalesOrderHeader_RevisionNumber]  DEFAULT ((0)) FOR [RevisionNumber]\nGO\nALTER TABLE [Sales].[SalesOrderHeader] ADD  CONSTRAINT [DF_SalesOrderHeader_OrderDate]  DEFAULT (getdate()) FOR [OrderDate]\nGO\nALTER TABLE [Sales].[SalesOrderHeader] ADD  CONSTRAINT [DF_SalesOrderHeader_Status]  DEFAULT ((1)) FOR [Status]\nGO\nALTER TABLE [Sales].[SalesOrderHeader] ADD  CONSTRAINT [DF_SalesOrderHeader_OnlineOrderFlag]  DEFAULT ((1)) FOR [OnlineOrderFlag]\nGO\nALTER TABLE [Sales].[SalesOrderHeader] ADD  CONSTRAINT [DF_SalesOrderHeader_SubTotal]  DEFAULT ((0.00)) FOR [SubTotal]\nGO\nALTER TABLE [Sales].[SalesOrderHeader] ADD  CONSTRAINT [DF_SalesOrderHeader_TaxAmt]  DEFAULT ((0.00)) FOR [TaxAmt]\nGO\nALTER TABLE [Sales].[SalesOrderHeader] ADD  CONSTRAINT [DF_SalesOrderHeader_Freight]  DEFAULT ((0.00)) FOR [Freight]\nGO\nALTER TABLE [Sales].[SalesOrderHeader] ADD  CONSTRAINT [DF_SalesOrderHeader_rowguid]  DEFAULT (newid()) FOR [rowguid]\nGO\nALTER TABLE [Sales].[SalesOrderHeader] ADD  CONSTRAINT [DF_SalesOrderHeader_ModifiedDate]  DEFAULT (getdate()) FOR [ModifiedDate]\nGO\nALTER TABLE [Sales].[SalesOrderHeader]  WITH CHECK ADD  CONSTRAINT [FK_SalesOrderHeader_Address_BillToAddressID] FOREIGN KEY([BillToAddressID])\nREFERENCES [Person].[Address] ([AddressID])\nGO\nALTER TABLE [Sales].[SalesOrderHeader] CHECK CONSTRAINT [FK_SalesOrderHeader_Address_BillToAddressID]\nGO\nALTER TABLE [Sales].[SalesOrderHeader]  WITH CHECK ADD  CONSTRAINT [FK_SalesOrderHeader_Address_ShipToAddressID] FOREIGN KEY([ShipToAddressID])\nREFERENCES [Person].[Address] ([AddressID])\nGO\nALTER TABLE [Sales].[SalesOrderHeader] CHECK CONSTRAINT [FK_SalesOrderHeader_Address_ShipToAddressID]\nGO\nALTER TABLE [Sales].[SalesOrderHeader]  WITH CHECK ADD  CONSTRAINT [FK_SalesOrderHeader_CreditCard_CreditCardID] FOREIGN KEY([CreditCardID])\nREFERENCES [Sales].[CreditCard] ([CreditCardID])\nGO\nALTER TABLE [Sales].[SalesOrderHeader] CHECK CONSTRAINT [FK_SalesOrderHeader_CreditCard_CreditCardID]\nGO\nALTER TABLE [Sales].[SalesOrderHeader]  WITH CHECK ADD  CONSTRAINT [FK_SalesOrderHeader_CurrencyRate_CurrencyRateID] FOREIGN KEY([CurrencyRateID])\nREFERENCES [Sales].[CurrencyRate] ([CurrencyRateID])\nGO\nALTER TABLE [Sales].[SalesOrderHeader] CHECK CONSTRAINT [FK_SalesOrderHeader_CurrencyRate_CurrencyRateID]\nGO\nALTER TABLE [Sales].[SalesOrderHeader]  WITH CHECK ADD  CONSTRAINT [FK_SalesOrderHeader_Customer_CustomerID] FOREIGN KEY([CustomerID])\nREFERENCES [Sales].[Customer] ([CustomerID])\nGO\nALTER TABLE [Sales].[SalesOrderHeader] CHECK CONSTRAINT [FK_SalesOrderHeader_Customer_CustomerID]\nGO\nALTER TABLE [Sales].[SalesOrderHeader]  WITH CHECK ADD  CONSTRAINT [FK_SalesOrderHeader_SalesPerson_SalesPersonID] FOREIGN KEY([SalesPersonID])\nREFERENCES [Sales].[SalesPerson] ([BusinessEntityID])\nGO\nALTER TABLE [Sales].[SalesOrderHeader] CHECK CONSTRAINT [FK_SalesOrderHeader_SalesPerson_SalesPersonID]\nGO\nALTER TABLE [Sales].[SalesOrderHeader]  WITH CHECK ADD  CONSTRAINT [FK_SalesOrderHeader_SalesTerritory_TerritoryID] FOREIGN KEY([TerritoryID])\nREFERENCES [Sales].[SalesTerritory] ([TerritoryID])\nGO\nALTER TABLE [Sales].[SalesOrderHeader] CHECK CONSTRAINT [FK_SalesOrderHeader_SalesTerritory_TerritoryID]\nGO\nALTER TABLE [Sales].[SalesOrderHeader]  WITH CHECK ADD  CONSTRAINT [FK_SalesOrderHeader_ShipMethod_ShipMethodID] FOREIGN KEY([ShipMethodID])\nREFERENCES [Purchasing].[ShipMethod] ([ShipMethodID])\nGO\nALTER TABLE [Sales].[SalesOrderHeader] CHECK CONSTRAINT [FK_SalesOrderHeader_ShipMethod_ShipMethodID]\nGO\nALTER TABLE [Sales].[SalesOrderHeader]  WITH CHECK ADD  CONSTRAINT [CK_SalesOrderHeader_DueDate] CHECK  (([DueDate]>=[OrderDate]))\nGO\nALTER TABLE [Sales].[SalesOrderHeader] CHECK CONSTRAINT [CK_SalesOrderHeader_DueDate]\nGO\nALTER TABLE [Sales].[SalesOrderHeader]  WITH CHECK ADD  CONSTRAINT [CK_SalesOrderHeader_Freight] CHECK  (([Freight]>=(0.00)))\nGO\nALTER TABLE [Sales].[SalesOrderHeader] CHECK CONSTRAINT [CK_SalesOrderHeader_Freight]\nGO\nALTER TABLE [Sales].[SalesOrderHeader]  WITH CHECK ADD  CONSTRAINT [CK_SalesOrderHeader_ShipDate] CHECK  (([ShipDate]>=[OrderDate] OR [ShipDate] IS NULL))\nGO\nALTER TABLE [Sales].[SalesOrderHeader] CHECK CONSTRAINT [CK_SalesOrderHeader_ShipDate]\nGO\nALTER TABLE [Sales].[SalesOrderHeader]  WITH CHECK ADD  CONSTRAINT [CK_SalesOrderHeader_Status] CHECK  (([Status]>=(0) AND [Status]<=(8)))\nGO\nALTER TABLE [Sales].[SalesOrderHeader] CHECK CONSTRAINT [CK_SalesOrderHeader_Status]\nGO\nALTER TABLE [Sales].[SalesOrderHeader]  WITH CHECK ADD  CONSTRAINT [CK_SalesOrderHeader_SubTotal] CHECK  (([SubTotal]>=(0.00)))\nGO\nALTER TABLE [Sales].[SalesOrderHeader] CHECK CONSTRAINT [CK_SalesOrderHeader_SubTotal]\nGO\nALTER TABLE [Sales].[SalesOrderHeader]  WITH CHECK ADD  CONSTRAINT [CK_SalesOrderHeader_TaxAmt] CHECK  (([TaxAmt]>=(0.00)))\nGO\nALTER TABLE [Sales].[SalesOrderHeader] CHECK CONSTRAINT [CK_SalesOrderHeader_TaxAmt]\nGO\n/****** Object:  Trigger [Sales].[uSalesOrderHeader]    Script Date: 2/3/24 12:03:05 AM ******/\nSET ANSI_NULLS ON\nGO\nSET QUOTED_IDENTIFIER ON\nGO\n\nCREATE TRIGGER [Sales].[uSalesOrderHeader] ON [Sales].[SalesOrderHeader] \nAFTER UPDATE NOT FOR REPLICATION AS \nBEGIN\n    DECLARE @Count int;\n\n    SET @Count = @@ROWCOUNT;\n    IF @Count = 0 \n        RETURN;\n\n    SET NOCOUNT ON;\n\n    BEGIN TRY\n        -- Update RevisionNumber for modification of any field EXCEPT the Status.\n        IF NOT UPDATE([Status])\n        BEGIN\n            UPDATE [Sales].[SalesOrderHeader]\n            SET [Sales].[SalesOrderHeader].[RevisionNumber] = \n                [Sales].[SalesOrderHeader].[RevisionNumber] + 1\n            WHERE [Sales].[SalesOrderHeader].[SalesOrderID] IN \n                (SELECT inserted.[SalesOrderID] FROM inserted);\n        END;\n\n        -- Update the SalesPerson SalesYTD when SubTotal is updated\n        IF UPDATE([SubTotal])\n        BEGIN\n            DECLARE @StartDate datetime,\n                    @EndDate datetime\n\n            SET @StartDate = [dbo].[ufnGetAccountingStartDate]();\n            SET @EndDate = [dbo].[ufnGetAccountingEndDate]();\n\n            UPDATE [Sales].[SalesPerson]\n            SET [Sales].[SalesPerson].[SalesYTD] = \n                (SELECT SUM([Sales].[SalesOrderHeader].[SubTotal])\n                FROM [Sales].[SalesOrderHeader] \n                WHERE [Sales].[SalesPerson].[BusinessEntityID] = [Sales].[SalesOrderHeader].[SalesPersonID]\n                    AND ([Sales].[SalesOrderHeader].[Status] = 5) -- Shipped\n                    AND [Sales].[SalesOrderHeader].[OrderDate] BETWEEN @StartDate AND @EndDate)\n            WHERE [Sales].[SalesPerson].[BusinessEntityID] \n                IN (SELECT DISTINCT inserted.[SalesPersonID] FROM inserted \n                    WHERE inserted.[OrderDate] BETWEEN @StartDate AND @EndDate);\n\n            -- Update the SalesTerritory SalesYTD when SubTotal is updated\n            UPDATE [Sales].[SalesTerritory]\n            SET [Sales].[SalesTerritory].[SalesYTD] = \n                (SELECT SUM([Sales].[SalesOrderHeader].[SubTotal])\n                FROM [Sales].[SalesOrderHeader] \n                WHERE [Sales].[SalesTerritory].[TerritoryID] = [Sales].[SalesOrderHeader].[TerritoryID]\n                    AND ([Sales].[SalesOrderHeader].[Status] = 5) -- Shipped\n                    AND [Sales].[SalesOrderHeader].[OrderDate] BETWEEN @StartDate AND @EndDate)\n            WHERE [Sales].[SalesTerritory].[TerritoryID] \n                IN (SELECT DISTINCT inserted.[TerritoryID] FROM inserted \n                    WHERE inserted.[OrderDate] BETWEEN @StartDate AND @EndDate);\n        END;\n    END TRY\n    BEGIN CATCH\n        EXECUTE [dbo].[uspPrintError];\n\n        -- Rollback any active or uncommittable transactions before\n        -- inserting information in the ErrorLog\n        IF @@TRANCOUNT > 0\n        BEGIN\n            ROLLBACK TRANSACTION;\n        END\n\n        EXECUTE [dbo].[uspLogError];\n    END CATCH;\nEND;\n\nGO\nALTER TABLE [Sales].[SalesOrderHeader] ENABLE TRIGGER [uSalesOrderHeader]\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesOrderHeader', @level2type=N'COLUMN',@level2name=N'SalesOrderID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Incremental number to track changes to the sales order over time.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesOrderHeader', @level2type=N'COLUMN',@level2name=N'RevisionNumber'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of 0' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesOrderHeader', @level2type=N'CONSTRAINT',@level2name=N'DF_SalesOrderHeader_RevisionNumber'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Dates the sales order was created.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesOrderHeader', @level2type=N'COLUMN',@level2name=N'OrderDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of GETDATE()' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesOrderHeader', @level2type=N'CONSTRAINT',@level2name=N'DF_SalesOrderHeader_OrderDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Date the order is due to the customer.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesOrderHeader', @level2type=N'COLUMN',@level2name=N'DueDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Date the order was shipped to the customer.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesOrderHeader', @level2type=N'COLUMN',@level2name=N'ShipDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Order current status. 1 = In process; 2 = Approved; 3 = Backordered; 4 = Rejected; 5 = Shipped; 6 = Cancelled' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesOrderHeader', @level2type=N'COLUMN',@level2name=N'Status'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of 1' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesOrderHeader', @level2type=N'CONSTRAINT',@level2name=N'DF_SalesOrderHeader_Status'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'0 = Order placed by sales person. 1 = Order placed online by customer.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesOrderHeader', @level2type=N'COLUMN',@level2name=N'OnlineOrderFlag'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of 1 (TRUE)' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesOrderHeader', @level2type=N'CONSTRAINT',@level2name=N'DF_SalesOrderHeader_OnlineOrderFlag'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Unique sales order identification number.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesOrderHeader', @level2type=N'COLUMN',@level2name=N'SalesOrderNumber'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Customer purchase order number reference. ' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesOrderHeader', @level2type=N'COLUMN',@level2name=N'PurchaseOrderNumber'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Financial accounting number reference.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesOrderHeader', @level2type=N'COLUMN',@level2name=N'AccountNumber'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Customer identification number. Foreign key to Customer.BusinessEntityID.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesOrderHeader', @level2type=N'COLUMN',@level2name=N'CustomerID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Sales person who created the sales order. Foreign key to SalesPerson.BusinessEntityID.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesOrderHeader', @level2type=N'COLUMN',@level2name=N'SalesPersonID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Territory in which the sale was made. Foreign key to SalesTerritory.SalesTerritoryID.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesOrderHeader', @level2type=N'COLUMN',@level2name=N'TerritoryID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Customer billing address. Foreign key to Address.AddressID.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesOrderHeader', @level2type=N'COLUMN',@level2name=N'BillToAddressID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Customer shipping address. Foreign key to Address.AddressID.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesOrderHeader', @level2type=N'COLUMN',@level2name=N'ShipToAddressID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Shipping method. Foreign key to ShipMethod.ShipMethodID.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesOrderHeader', @level2type=N'COLUMN',@level2name=N'ShipMethodID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Credit card identification number. Foreign key to CreditCard.CreditCardID.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesOrderHeader', @level2type=N'COLUMN',@level2name=N'CreditCardID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Approval code provided by the credit card company.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesOrderHeader', @level2type=N'COLUMN',@level2name=N'CreditCardApprovalCode'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Currency exchange rate used. Foreign key to CurrencyRate.CurrencyRateID.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesOrderHeader', @level2type=N'COLUMN',@level2name=N'CurrencyRateID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Sales subtotal. Computed as SUM(SalesOrderDetail.LineTotal)for the appropriate SalesOrderID.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesOrderHeader', @level2type=N'COLUMN',@level2name=N'SubTotal'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of 0.0' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesOrderHeader', @level2type=N'CONSTRAINT',@level2name=N'DF_SalesOrderHeader_SubTotal'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Tax amount.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesOrderHeader', @level2type=N'COLUMN',@level2name=N'TaxAmt'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of 0.0' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesOrderHeader', @level2type=N'CONSTRAINT',@level2name=N'DF_SalesOrderHeader_TaxAmt'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Shipping cost.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesOrderHeader', @level2type=N'COLUMN',@level2name=N'Freight'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of 0.0' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesOrderHeader', @level2type=N'CONSTRAINT',@level2name=N'DF_SalesOrderHeader_Freight'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Total due from customer. Computed as Subtotal + TaxAmt + Freight.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesOrderHeader', @level2type=N'COLUMN',@level2name=N'TotalDue'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Sales representative comments.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesOrderHeader', @level2type=N'COLUMN',@level2name=N'Comment'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesOrderHeader', @level2type=N'COLUMN',@level2name=N'rowguid'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of NEWID()' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesOrderHeader', @level2type=N'CONSTRAINT',@level2name=N'DF_SalesOrderHeader_rowguid'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Date and time the record was last updated.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesOrderHeader', @level2type=N'COLUMN',@level2name=N'ModifiedDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of GETDATE()' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesOrderHeader', @level2type=N'CONSTRAINT',@level2name=N'DF_SalesOrderHeader_ModifiedDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key (clustered) constraint' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesOrderHeader', @level2type=N'CONSTRAINT',@level2name=N'PK_SalesOrderHeader_SalesOrderID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Unique nonclustered index. Used to support replication samples.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesOrderHeader', @level2type=N'INDEX',@level2name=N'AK_SalesOrderHeader_rowguid'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Unique nonclustered index.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesOrderHeader', @level2type=N'INDEX',@level2name=N'AK_SalesOrderHeader_SalesOrderNumber'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Nonclustered index.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesOrderHeader', @level2type=N'INDEX',@level2name=N'IX_SalesOrderHeader_CustomerID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Nonclustered index.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesOrderHeader', @level2type=N'INDEX',@level2name=N'IX_SalesOrderHeader_SalesPersonID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'General sales order information.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesOrderHeader'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'AFTER UPDATE trigger that updates the RevisionNumber and ModifiedDate columns in the SalesOrderHeader table.Updates the SalesYTD column in the SalesPerson and SalesTerritory tables.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesOrderHeader', @level2type=N'TRIGGER',@level2name=N'uSalesOrderHeader'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key constraint referencing Address.AddressID.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesOrderHeader', @level2type=N'CONSTRAINT',@level2name=N'FK_SalesOrderHeader_Address_BillToAddressID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key constraint referencing Address.AddressID.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesOrderHeader', @level2type=N'CONSTRAINT',@level2name=N'FK_SalesOrderHeader_Address_ShipToAddressID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key constraint referencing CreditCard.CreditCardID.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesOrderHeader', @level2type=N'CONSTRAINT',@level2name=N'FK_SalesOrderHeader_CreditCard_CreditCardID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key constraint referencing CurrencyRate.CurrencyRateID.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesOrderHeader', @level2type=N'CONSTRAINT',@level2name=N'FK_SalesOrderHeader_CurrencyRate_CurrencyRateID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key constraint referencing Customer.CustomerID.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesOrderHeader', @level2type=N'CONSTRAINT',@level2name=N'FK_SalesOrderHeader_Customer_CustomerID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key constraint referencing SalesPerson.SalesPersonID.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesOrderHeader', @level2type=N'CONSTRAINT',@level2name=N'FK_SalesOrderHeader_SalesPerson_SalesPersonID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key constraint referencing SalesTerritory.TerritoryID.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesOrderHeader', @level2type=N'CONSTRAINT',@level2name=N'FK_SalesOrderHeader_SalesTerritory_TerritoryID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key constraint referencing ShipMethod.ShipMethodID.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesOrderHeader', @level2type=N'CONSTRAINT',@level2name=N'FK_SalesOrderHeader_ShipMethod_ShipMethodID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Check constraint [DueDate] >= [OrderDate]' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesOrderHeader', @level2type=N'CONSTRAINT',@level2name=N'CK_SalesOrderHeader_DueDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Check constraint [Freight] >= (0.00)' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesOrderHeader', @level2type=N'CONSTRAINT',@level2name=N'CK_SalesOrderHeader_Freight'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Check constraint [ShipDate] >= [OrderDate] OR [ShipDate] IS NULL' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesOrderHeader', @level2type=N'CONSTRAINT',@level2name=N'CK_SalesOrderHeader_ShipDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Check constraint [Status] BETWEEN (0) AND (8)' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesOrderHeader', @level2type=N'CONSTRAINT',@level2name=N'CK_SalesOrderHeader_Status'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Check constraint [SubTotal] >= (0.00)' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesOrderHeader', @level2type=N'CONSTRAINT',@level2name=N'CK_SalesOrderHeader_SubTotal'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Check constraint [TaxAmt] >= (0.00)' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesOrderHeader', @level2type=N'CONSTRAINT',@level2name=N'CK_SalesOrderHeader_TaxAmt'\nGO", "output_text": "CREATE TABLE sales.salesorderheader (\n    salesorderid integer NOT NULL,\n    revisionnumber smallint DEFAULT 0 NOT NULL,\n    orderdate timestamp without time zone DEFAULT now() NOT NULL,\n    duedate timestamp without time zone NOT NULL,\n    shipdate timestamp without time zone,\n    status smallint DEFAULT 1 NOT NULL,\n    onlineorderflag public.\"Flag\" DEFAULT true NOT NULL,\n    purchaseordernumber public.\"OrderNumber\",\n    accountnumber public.\"AccountNumber\",\n    customerid integer NOT NULL,\n    salespersonid integer,\n    territoryid integer,\n    billtoaddressid integer NOT NULL,\n    shiptoaddressid integer NOT NULL,\n    shipmethodid integer NOT NULL,\n    creditcardid integer,\n    creditcardapprovalcode character varying(15),\n    currencyrateid integer,\n    subtotal numeric DEFAULT 0.00 NOT NULL,\n    taxamt numeric DEFAULT 0.00 NOT NULL,\n    freight numeric DEFAULT 0.00 NOT NULL,\n    totaldue numeric,\n    comment character varying(128),\n    rowguid uuid DEFAULT public.uuid_generate_v1() NOT NULL,\n    modifieddate timestamp without time zone DEFAULT now() NOT NULL,\n    CONSTRAINT \"CK_SalesOrderHeader_DueDate\" CHECK ((duedate >= orderdate)),\n    CONSTRAINT \"CK_SalesOrderHeader_Freight\" CHECK ((freight >= 0.00)),\n    CONSTRAINT \"CK_SalesOrderHeader_ShipDate\" CHECK (((shipdate >= orderdate) OR (shipdate IS NULL))),\n    CONSTRAINT \"CK_SalesOrderHeader_Status\" CHECK (((status >= 0) AND (status <= 8))),\n    CONSTRAINT \"CK_SalesOrderHeader_SubTotal\" CHECK ((subtotal >= 0.00)),\n    CONSTRAINT \"CK_SalesOrderHeader_TaxAmt\" CHECK ((taxamt >= 0.00))\n);\n\n\n--\n-- Name: TABLE salesorderheader; Type: COMMENT; Schema: sales; Owner: -\n--\n\nCOMMENT ON TABLE sales.salesorderheader IS 'General sales order information.';\n\n\n--\n-- Name: COLUMN salesorderheader.salesorderid; Type: COMMENT; Schema: sales; Owner: -\n--\n\nCOMMENT ON COLUMN sales.salesorderheader.salesorderid IS 'Primary key.';\n\n\n--\n-- Name: COLUMN salesorderheader.revisionnumber; Type: COMMENT; Schema: sales; Owner: -\n--\n\nCOMMENT ON COLUMN sales.salesorderheader.revisionnumber IS 'Incremental number to track changes to the sales order over time.';\n\n\n--\n-- Name: COLUMN salesorderheader.orderdate; Type: COMMENT; Schema: sales; Owner: -\n--\n\nCOMMENT ON COLUMN sales.salesorderheader.orderdate IS 'Dates the sales order was created.';\n\n\n--\n-- Name: COLUMN salesorderheader.duedate; Type: COMMENT; Schema: sales; Owner: -\n--\n\nCOMMENT ON COLUMN sales.salesorderheader.duedate IS 'Date the order is due to the customer.';\n\n\n--\n-- Name: COLUMN salesorderheader.shipdate; Type: COMMENT; Schema: sales; Owner: -\n--\n\nCOMMENT ON COLUMN sales.salesorderheader.shipdate IS 'Date the order was shipped to the customer.';\n\n\n--\n-- Name: COLUMN salesorderheader.status; Type: COMMENT; Schema: sales; Owner: -\n--\n\nCOMMENT ON COLUMN sales.salesorderheader.status IS 'Order current status. 1 = In process; 2 = Approved; 3 = Backordered; 4 = Rejected; 5 = Shipped; 6 = Cancelled';\n\n\n--\n-- Name: COLUMN salesorderheader.onlineorderflag; Type: COMMENT; Schema: sales; Owner: -\n--\n\nCOMMENT ON COLUMN sales.salesorderheader.onlineorderflag IS '0 = Order placed by sales person. 1 = Order placed online by customer.';\n\n\n--\n-- Name: COLUMN salesorderheader.purchaseordernumber; Type: COMMENT; Schema: sales; Owner: -\n--\n\nCOMMENT ON COLUMN sales.salesorderheader.purchaseordernumber IS 'Customer purchase order number reference.';\n\n\n--\n-- Name: COLUMN salesorderheader.accountnumber; Type: COMMENT; Schema: sales; Owner: -\n--\n\nCOMMENT ON COLUMN sales.salesorderheader.accountnumber IS 'Financial accounting number reference.';\n\n\n--\n-- Name: COLUMN salesorderheader.customerid; Type: COMMENT; Schema: sales; Owner: -\n--\n\nCOMMENT ON COLUMN sales.salesorderheader.customerid IS 'Customer identification number. Foreign key to Customer.BusinessEntityID.';\n\n\n--\n-- Name: COLUMN salesorderheader.salespersonid; Type: COMMENT; Schema: sales; Owner: -\n--\n\nCOMMENT ON COLUMN sales.salesorderheader.salespersonid IS 'Sales person who created the sales order. Foreign key to SalesPerson.BusinessEntityID.';\n\n\n--\n-- Name: COLUMN salesorderheader.territoryid; Type: COMMENT; Schema: sales; Owner: -\n--\n\nCOMMENT ON COLUMN sales.salesorderheader.territoryid IS 'Territory in which the sale was made. Foreign key to SalesTerritory.SalesTerritoryID.';\n\n\n--\n-- Name: COLUMN salesorderheader.billtoaddressid; Type: COMMENT; Schema: sales; Owner: -\n--\n\nCOMMENT ON COLUMN sales.salesorderheader.billtoaddressid IS 'Customer billing address. Foreign key to Address.AddressID.';\n\n\n--\n-- Name: COLUMN salesorderheader.shiptoaddressid; Type: COMMENT; Schema: sales; Owner: -\n--\n\nCOMMENT ON COLUMN sales.salesorderheader.shiptoaddressid IS 'Customer shipping address. Foreign key to Address.AddressID.';\n\n\n--\n-- Name: COLUMN salesorderheader.shipmethodid; Type: COMMENT; Schema: sales; Owner: -\n--\n\nCOMMENT ON COLUMN sales.salesorderheader.shipmethodid IS 'Shipping method. Foreign key to ShipMethod.ShipMethodID.';\n\n\n--\n-- Name: COLUMN salesorderheader.creditcardid; Type: COMMENT; Schema: sales; Owner: -\n--\n\nCOMMENT ON COLUMN sales.salesorderheader.creditcardid IS 'Credit card identification number. Foreign key to CreditCard.CreditCardID.';\n\n\n--\n-- Name: COLUMN salesorderheader.creditcardapprovalcode; Type: COMMENT; Schema: sales; Owner: -\n--\n\nCOMMENT ON COLUMN sales.salesorderheader.creditcardapprovalcode IS 'Approval code provided by the credit card company.';\n\n\n--\n-- Name: COLUMN salesorderheader.currencyrateid; Type: COMMENT; Schema: sales; Owner: -\n--\n\nCOMMENT ON COLUMN sales.salesorderheader.currencyrateid IS 'Currency exchange rate used. Foreign key to CurrencyRate.CurrencyRateID.';\n\n\n--\n-- Name: COLUMN salesorderheader.subtotal; Type: COMMENT; Schema: sales; Owner: -\n--\n\nCOMMENT ON COLUMN sales.salesorderheader.subtotal IS 'Sales subtotal. Computed as SUM(SalesOrderDetail.LineTotal)for the appropriate SalesOrderID.';\n\n\n--\n-- Name: COLUMN salesorderheader.taxamt; Type: COMMENT; Schema: sales; Owner: -\n--\n\nCOMMENT ON COLUMN sales.salesorderheader.taxamt IS 'Tax amount.';\n\n\n--\n-- Name: COLUMN salesorderheader.freight; Type: COMMENT; Schema: sales; Owner: -\n--\n\nCOMMENT ON COLUMN sales.salesorderheader.freight IS 'Shipping cost.';\n\n\n--\n-- Name: COLUMN salesorderheader.totaldue; Type: COMMENT; Schema: sales; Owner: -\n--\n\nCOMMENT ON COLUMN sales.salesorderheader.totaldue IS 'Total due from customer. Computed as Subtotal + TaxAmt + Freight.';\n\n\n--\n-- Name: COLUMN salesorderheader.comment; Type: COMMENT; Schema: sales; Owner: -\n--\n\nCOMMENT ON COLUMN sales.salesorderheader.comment IS 'Sales representative comments.';"}
{"input_text": "convert following DDL/DML code from MSSQL to Postgresql \nUSE [adventureworks]\nGO\n/****** Object:  Table [Sales].[SalesOrderHeaderSalesReason]    Script Date: 2/3/24 12:03:01 AM ******/\nSET ANSI_NULLS ON\nGO\nSET QUOTED_IDENTIFIER ON\nGO\nCREATE TABLE [Sales].[SalesOrderHeaderSalesReason](\n\t[SalesOrderID] [int] NOT NULL,\n\t[SalesReasonID] [int] NOT NULL,\n\t[ModifiedDate] [datetime] NOT NULL,\n CONSTRAINT [PK_SalesOrderHeaderSalesReason_SalesOrderID_SalesReasonID] PRIMARY KEY CLUSTERED \n(\n\t[SalesOrderID] ASC,\n\t[SalesReasonID] ASC\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]\n) ON [PRIMARY]\nGO\nALTER TABLE [Sales].[SalesOrderHeaderSalesReason] ADD  CONSTRAINT [DF_SalesOrderHeaderSalesReason_ModifiedDate]  DEFAULT (getdate()) FOR [ModifiedDate]\nGO\nALTER TABLE [Sales].[SalesOrderHeaderSalesReason]  WITH CHECK ADD  CONSTRAINT [FK_SalesOrderHeaderSalesReason_SalesOrderHeader_SalesOrderID] FOREIGN KEY([SalesOrderID])\nREFERENCES [Sales].[SalesOrderHeader] ([SalesOrderID])\nON DELETE CASCADE\nGO\nALTER TABLE [Sales].[SalesOrderHeaderSalesReason] CHECK CONSTRAINT [FK_SalesOrderHeaderSalesReason_SalesOrderHeader_SalesOrderID]\nGO\nALTER TABLE [Sales].[SalesOrderHeaderSalesReason]  WITH CHECK ADD  CONSTRAINT [FK_SalesOrderHeaderSalesReason_SalesReason_SalesReasonID] FOREIGN KEY([SalesReasonID])\nREFERENCES [Sales].[SalesReason] ([SalesReasonID])\nGO\nALTER TABLE [Sales].[SalesOrderHeaderSalesReason] CHECK CONSTRAINT [FK_SalesOrderHeaderSalesReason_SalesReason_SalesReasonID]\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key. Foreign key to SalesOrderHeader.SalesOrderID.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesOrderHeaderSalesReason', @level2type=N'COLUMN',@level2name=N'SalesOrderID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key. Foreign key to SalesReason.SalesReasonID.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesOrderHeaderSalesReason', @level2type=N'COLUMN',@level2name=N'SalesReasonID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Date and time the record was last updated.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesOrderHeaderSalesReason', @level2type=N'COLUMN',@level2name=N'ModifiedDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of GETDATE()' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesOrderHeaderSalesReason', @level2type=N'CONSTRAINT',@level2name=N'DF_SalesOrderHeaderSalesReason_ModifiedDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key (clustered) constraint' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesOrderHeaderSalesReason', @level2type=N'CONSTRAINT',@level2name=N'PK_SalesOrderHeaderSalesReason_SalesOrderID_SalesReasonID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Cross-reference table mapping sales orders to sales reason codes.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesOrderHeaderSalesReason'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key constraint referencing SalesOrderHeader.SalesOrderID.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesOrderHeaderSalesReason', @level2type=N'CONSTRAINT',@level2name=N'FK_SalesOrderHeaderSalesReason_SalesOrderHeader_SalesOrderID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key constraint referencing SalesReason.SalesReasonID.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesOrderHeaderSalesReason', @level2type=N'CONSTRAINT',@level2name=N'FK_SalesOrderHeaderSalesReason_SalesReason_SalesReasonID'\nGO", "output_text": "CREATE TABLE sales.salesorderheadersalesreason (\n    salesorderid integer NOT NULL,\n    salesreasonid integer NOT NULL,\n    modifieddate timestamp without time zone DEFAULT now() NOT NULL\n);\n\n\n--\n-- Name: TABLE salesorderheadersalesreason; Type: COMMENT; Schema: sales; Owner: -\n--\n\nCOMMENT ON TABLE sales.salesorderheadersalesreason IS 'Cross-reference table mapping sales orders to sales reason codes.';\n\n\n--\n-- Name: COLUMN salesorderheadersalesreason.salesorderid; Type: COMMENT; Schema: sales; Owner: -\n--\n\nCOMMENT ON COLUMN sales.salesorderheadersalesreason.salesorderid IS 'Primary key. Foreign key to SalesOrderHeader.SalesOrderID.';\n\n\n--\n-- Name: COLUMN salesorderheadersalesreason.salesreasonid; Type: COMMENT; Schema: sales; Owner: -\n--\n\nCOMMENT ON COLUMN sales.salesorderheadersalesreason.salesreasonid IS 'Primary key. Foreign key to SalesReason.SalesReasonID.';"}
{"input_text": "convert following DDL/DML code from MSSQL to Postgresql \nUSE [adventureworks]\nGO\n/****** Object:  Table [Sales].[SalesPerson]    Script Date: 2/3/24 12:02:55 AM ******/\nSET ANSI_NULLS ON\nGO\nSET QUOTED_IDENTIFIER ON\nGO\nCREATE TABLE [Sales].[SalesPerson](\n\t[BusinessEntityID] [int] NOT NULL,\n\t[TerritoryID] [int] NULL,\n\t[SalesQuota] [money] NULL,\n\t[Bonus] [money] NOT NULL,\n\t[CommissionPct] [smallmoney] NOT NULL,\n\t[SalesYTD] [money] NOT NULL,\n\t[SalesLastYear] [money] NOT NULL,\n\t[rowguid] [uniqueidentifier] ROWGUIDCOL  NOT NULL,\n\t[ModifiedDate] [datetime] NOT NULL,\n CONSTRAINT [PK_SalesPerson_BusinessEntityID] PRIMARY KEY CLUSTERED \n(\n\t[BusinessEntityID] ASC\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]\n) ON [PRIMARY]\nGO\n/****** Object:  Index [AK_SalesPerson_rowguid]    Script Date: 2/3/24 12:03:02 AM ******/\nCREATE UNIQUE NONCLUSTERED INDEX [AK_SalesPerson_rowguid] ON [Sales].[SalesPerson]\n(\n\t[rowguid] ASC\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]\nGO\nALTER TABLE [Sales].[SalesPerson] ADD  CONSTRAINT [DF_SalesPerson_Bonus]  DEFAULT ((0.00)) FOR [Bonus]\nGO\nALTER TABLE [Sales].[SalesPerson] ADD  CONSTRAINT [DF_SalesPerson_CommissionPct]  DEFAULT ((0.00)) FOR [CommissionPct]\nGO\nALTER TABLE [Sales].[SalesPerson] ADD  CONSTRAINT [DF_SalesPerson_SalesYTD]  DEFAULT ((0.00)) FOR [SalesYTD]\nGO\nALTER TABLE [Sales].[SalesPerson] ADD  CONSTRAINT [DF_SalesPerson_SalesLastYear]  DEFAULT ((0.00)) FOR [SalesLastYear]\nGO\nALTER TABLE [Sales].[SalesPerson] ADD  CONSTRAINT [DF_SalesPerson_rowguid]  DEFAULT (newid()) FOR [rowguid]\nGO\nALTER TABLE [Sales].[SalesPerson] ADD  CONSTRAINT [DF_SalesPerson_ModifiedDate]  DEFAULT (getdate()) FOR [ModifiedDate]\nGO\nALTER TABLE [Sales].[SalesPerson]  WITH CHECK ADD  CONSTRAINT [FK_SalesPerson_Employee_BusinessEntityID] FOREIGN KEY([BusinessEntityID])\nREFERENCES [HumanResources].[Employee] ([BusinessEntityID])\nGO\nALTER TABLE [Sales].[SalesPerson] CHECK CONSTRAINT [FK_SalesPerson_Employee_BusinessEntityID]\nGO\nALTER TABLE [Sales].[SalesPerson]  WITH CHECK ADD  CONSTRAINT [FK_SalesPerson_SalesTerritory_TerritoryID] FOREIGN KEY([TerritoryID])\nREFERENCES [Sales].[SalesTerritory] ([TerritoryID])\nGO\nALTER TABLE [Sales].[SalesPerson] CHECK CONSTRAINT [FK_SalesPerson_SalesTerritory_TerritoryID]\nGO\nALTER TABLE [Sales].[SalesPerson]  WITH CHECK ADD  CONSTRAINT [CK_SalesPerson_Bonus] CHECK  (([Bonus]>=(0.00)))\nGO\nALTER TABLE [Sales].[SalesPerson] CHECK CONSTRAINT [CK_SalesPerson_Bonus]\nGO\nALTER TABLE [Sales].[SalesPerson]  WITH CHECK ADD  CONSTRAINT [CK_SalesPerson_CommissionPct] CHECK  (([CommissionPct]>=(0.00)))\nGO\nALTER TABLE [Sales].[SalesPerson] CHECK CONSTRAINT [CK_SalesPerson_CommissionPct]\nGO\nALTER TABLE [Sales].[SalesPerson]  WITH CHECK ADD  CONSTRAINT [CK_SalesPerson_SalesLastYear] CHECK  (([SalesLastYear]>=(0.00)))\nGO\nALTER TABLE [Sales].[SalesPerson] CHECK CONSTRAINT [CK_SalesPerson_SalesLastYear]\nGO\nALTER TABLE [Sales].[SalesPerson]  WITH CHECK ADD  CONSTRAINT [CK_SalesPerson_SalesQuota] CHECK  (([SalesQuota]>(0.00)))\nGO\nALTER TABLE [Sales].[SalesPerson] CHECK CONSTRAINT [CK_SalesPerson_SalesQuota]\nGO\nALTER TABLE [Sales].[SalesPerson]  WITH CHECK ADD  CONSTRAINT [CK_SalesPerson_SalesYTD] CHECK  (([SalesYTD]>=(0.00)))\nGO\nALTER TABLE [Sales].[SalesPerson] CHECK CONSTRAINT [CK_SalesPerson_SalesYTD]\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key for SalesPerson records. Foreign key to Employee.BusinessEntityID' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesPerson', @level2type=N'COLUMN',@level2name=N'BusinessEntityID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Territory currently assigned to. Foreign key to SalesTerritory.SalesTerritoryID.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesPerson', @level2type=N'COLUMN',@level2name=N'TerritoryID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Projected yearly sales.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesPerson', @level2type=N'COLUMN',@level2name=N'SalesQuota'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Bonus due if quota is met.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesPerson', @level2type=N'COLUMN',@level2name=N'Bonus'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of 0.0' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesPerson', @level2type=N'CONSTRAINT',@level2name=N'DF_SalesPerson_Bonus'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Commision percent received per sale.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesPerson', @level2type=N'COLUMN',@level2name=N'CommissionPct'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of 0.0' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesPerson', @level2type=N'CONSTRAINT',@level2name=N'DF_SalesPerson_CommissionPct'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Sales total year to date.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesPerson', @level2type=N'COLUMN',@level2name=N'SalesYTD'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of 0.0' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesPerson', @level2type=N'CONSTRAINT',@level2name=N'DF_SalesPerson_SalesYTD'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Sales total of previous year.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesPerson', @level2type=N'COLUMN',@level2name=N'SalesLastYear'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of 0.0' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesPerson', @level2type=N'CONSTRAINT',@level2name=N'DF_SalesPerson_SalesLastYear'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesPerson', @level2type=N'COLUMN',@level2name=N'rowguid'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of NEWID()' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesPerson', @level2type=N'CONSTRAINT',@level2name=N'DF_SalesPerson_rowguid'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Date and time the record was last updated.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesPerson', @level2type=N'COLUMN',@level2name=N'ModifiedDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of GETDATE()' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesPerson', @level2type=N'CONSTRAINT',@level2name=N'DF_SalesPerson_ModifiedDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key (clustered) constraint' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesPerson', @level2type=N'CONSTRAINT',@level2name=N'PK_SalesPerson_BusinessEntityID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Unique nonclustered index. Used to support replication samples.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesPerson', @level2type=N'INDEX',@level2name=N'AK_SalesPerson_rowguid'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Sales representative current information.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesPerson'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key constraint referencing Employee.EmployeeID.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesPerson', @level2type=N'CONSTRAINT',@level2name=N'FK_SalesPerson_Employee_BusinessEntityID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key constraint referencing SalesTerritory.TerritoryID.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesPerson', @level2type=N'CONSTRAINT',@level2name=N'FK_SalesPerson_SalesTerritory_TerritoryID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Check constraint [Bonus] >= (0.00)' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesPerson', @level2type=N'CONSTRAINT',@level2name=N'CK_SalesPerson_Bonus'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Check constraint [CommissionPct] >= (0.00)' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesPerson', @level2type=N'CONSTRAINT',@level2name=N'CK_SalesPerson_CommissionPct'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Check constraint [SalesLastYear] >= (0.00)' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesPerson', @level2type=N'CONSTRAINT',@level2name=N'CK_SalesPerson_SalesLastYear'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Check constraint [SalesQuota] > (0.00)' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesPerson', @level2type=N'CONSTRAINT',@level2name=N'CK_SalesPerson_SalesQuota'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Check constraint [SalesYTD] >= (0.00)' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesPerson', @level2type=N'CONSTRAINT',@level2name=N'CK_SalesPerson_SalesYTD'\nGO", "output_text": "CREATE TABLE sales.salesperson (\n    businessentityid integer NOT NULL,\n    territoryid integer,\n    salesquota numeric,\n    bonus numeric DEFAULT 0.00 NOT NULL,\n    commissionpct numeric DEFAULT 0.00 NOT NULL,\n    salesytd numeric DEFAULT 0.00 NOT NULL,\n    saleslastyear numeric DEFAULT 0.00 NOT NULL,\n    rowguid uuid DEFAULT public.uuid_generate_v1() NOT NULL,\n    modifieddate timestamp without time zone DEFAULT now() NOT NULL,\n    CONSTRAINT \"CK_SalesPerson_Bonus\" CHECK ((bonus >= 0.00)),\n    CONSTRAINT \"CK_SalesPerson_CommissionPct\" CHECK ((commissionpct >= 0.00)),\n    CONSTRAINT \"CK_SalesPerson_SalesLastYear\" CHECK ((saleslastyear >= 0.00)),\n    CONSTRAINT \"CK_SalesPerson_SalesQuota\" CHECK ((salesquota > 0.00)),\n    CONSTRAINT \"CK_SalesPerson_SalesYTD\" CHECK ((salesytd >= 0.00))\n);\n\n\n--\n-- Name: TABLE salesperson; Type: COMMENT; Schema: sales; Owner: -\n--\n\nCOMMENT ON TABLE sales.salesperson IS 'Sales representative current information.';\n\n\n--\n-- Name: COLUMN salesperson.businessentityid; Type: COMMENT; Schema: sales; Owner: -\n--\n\nCOMMENT ON COLUMN sales.salesperson.businessentityid IS 'Primary key for SalesPerson records. Foreign key to Employee.BusinessEntityID';\n\n\n--\n-- Name: COLUMN salesperson.territoryid; Type: COMMENT; Schema: sales; Owner: -\n--\n\nCOMMENT ON COLUMN sales.salesperson.territoryid IS 'Territory currently assigned to. Foreign key to SalesTerritory.SalesTerritoryID.';\n\n\n--\n-- Name: COLUMN salesperson.salesquota; Type: COMMENT; Schema: sales; Owner: -\n--\n\nCOMMENT ON COLUMN sales.salesperson.salesquota IS 'Projected yearly sales.';\n\n\n--\n-- Name: COLUMN salesperson.bonus; Type: COMMENT; Schema: sales; Owner: -\n--\n\nCOMMENT ON COLUMN sales.salesperson.bonus IS 'Bonus due if quota is met.';\n\n\n--\n-- Name: COLUMN salesperson.commissionpct; Type: COMMENT; Schema: sales; Owner: -\n--\n\nCOMMENT ON COLUMN sales.salesperson.commissionpct IS 'Commision percent received per sale.';\n\n\n--\n-- Name: COLUMN salesperson.salesytd; Type: COMMENT; Schema: sales; Owner: -\n--\n\nCOMMENT ON COLUMN sales.salesperson.salesytd IS 'Sales total year to date.';\n\n\n--\n-- Name: COLUMN salesperson.saleslastyear; Type: COMMENT; Schema: sales; Owner: -\n--\n\nCOMMENT ON COLUMN sales.salesperson.saleslastyear IS 'Sales total of previous year.';"}
{"input_text": "convert following DDL/DML code from MSSQL to Postgresql \nUSE [adventureworks]\nGO\n/****** Object:  Table [Sales].[SalesPersonQuotaHistory]    Script Date: 2/3/24 12:03:01 AM ******/\nSET ANSI_NULLS ON\nGO\nSET QUOTED_IDENTIFIER ON\nGO\nCREATE TABLE [Sales].[SalesPersonQuotaHistory](\n\t[BusinessEntityID] [int] NOT NULL,\n\t[QuotaDate] [datetime] NOT NULL,\n\t[SalesQuota] [money] NOT NULL,\n\t[rowguid] [uniqueidentifier] ROWGUIDCOL  NOT NULL,\n\t[ModifiedDate] [datetime] NOT NULL,\n CONSTRAINT [PK_SalesPersonQuotaHistory_BusinessEntityID_QuotaDate] PRIMARY KEY CLUSTERED \n(\n\t[BusinessEntityID] ASC,\n\t[QuotaDate] ASC\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]\n) ON [PRIMARY]\nGO\n/****** Object:  Index [AK_SalesPersonQuotaHistory_rowguid]    Script Date: 2/3/24 12:03:02 AM ******/\nCREATE UNIQUE NONCLUSTERED INDEX [AK_SalesPersonQuotaHistory_rowguid] ON [Sales].[SalesPersonQuotaHistory]\n(\n\t[rowguid] ASC\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]\nGO\nALTER TABLE [Sales].[SalesPersonQuotaHistory] ADD  CONSTRAINT [DF_SalesPersonQuotaHistory_rowguid]  DEFAULT (newid()) FOR [rowguid]\nGO\nALTER TABLE [Sales].[SalesPersonQuotaHistory] ADD  CONSTRAINT [DF_SalesPersonQuotaHistory_ModifiedDate]  DEFAULT (getdate()) FOR [ModifiedDate]\nGO\nALTER TABLE [Sales].[SalesPersonQuotaHistory]  WITH CHECK ADD  CONSTRAINT [FK_SalesPersonQuotaHistory_SalesPerson_BusinessEntityID] FOREIGN KEY([BusinessEntityID])\nREFERENCES [Sales].[SalesPerson] ([BusinessEntityID])\nGO\nALTER TABLE [Sales].[SalesPersonQuotaHistory] CHECK CONSTRAINT [FK_SalesPersonQuotaHistory_SalesPerson_BusinessEntityID]\nGO\nALTER TABLE [Sales].[SalesPersonQuotaHistory]  WITH CHECK ADD  CONSTRAINT [CK_SalesPersonQuotaHistory_SalesQuota] CHECK  (([SalesQuota]>(0.00)))\nGO\nALTER TABLE [Sales].[SalesPersonQuotaHistory] CHECK CONSTRAINT [CK_SalesPersonQuotaHistory_SalesQuota]\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Sales person identification number. Foreign key to SalesPerson.BusinessEntityID.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesPersonQuotaHistory', @level2type=N'COLUMN',@level2name=N'BusinessEntityID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Sales quota date.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesPersonQuotaHistory', @level2type=N'COLUMN',@level2name=N'QuotaDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Sales quota amount.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesPersonQuotaHistory', @level2type=N'COLUMN',@level2name=N'SalesQuota'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesPersonQuotaHistory', @level2type=N'COLUMN',@level2name=N'rowguid'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of NEWID()' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesPersonQuotaHistory', @level2type=N'CONSTRAINT',@level2name=N'DF_SalesPersonQuotaHistory_rowguid'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Date and time the record was last updated.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesPersonQuotaHistory', @level2type=N'COLUMN',@level2name=N'ModifiedDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of GETDATE()' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesPersonQuotaHistory', @level2type=N'CONSTRAINT',@level2name=N'DF_SalesPersonQuotaHistory_ModifiedDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key (clustered) constraint' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesPersonQuotaHistory', @level2type=N'CONSTRAINT',@level2name=N'PK_SalesPersonQuotaHistory_BusinessEntityID_QuotaDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Unique nonclustered index. Used to support replication samples.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesPersonQuotaHistory', @level2type=N'INDEX',@level2name=N'AK_SalesPersonQuotaHistory_rowguid'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Sales performance tracking.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesPersonQuotaHistory'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key constraint referencing SalesPerson.SalesPersonID.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesPersonQuotaHistory', @level2type=N'CONSTRAINT',@level2name=N'FK_SalesPersonQuotaHistory_SalesPerson_BusinessEntityID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Check constraint [SalesQuota] > (0.00)' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesPersonQuotaHistory', @level2type=N'CONSTRAINT',@level2name=N'CK_SalesPersonQuotaHistory_SalesQuota'\nGO", "output_text": "CREATE TABLE sales.salespersonquotahistory (\n    businessentityid integer NOT NULL,\n    quotadate timestamp without time zone NOT NULL,\n    salesquota numeric NOT NULL,\n    rowguid uuid DEFAULT public.uuid_generate_v1() NOT NULL,\n    modifieddate timestamp without time zone DEFAULT now() NOT NULL,\n    CONSTRAINT \"CK_SalesPersonQuotaHistory_SalesQuota\" CHECK ((salesquota > 0.00))\n);\n\n\n--\n-- Name: TABLE salespersonquotahistory; Type: COMMENT; Schema: sales; Owner: -\n--\n\nCOMMENT ON TABLE sales.salespersonquotahistory IS 'Sales performance tracking.';\n\n\n--\n-- Name: COLUMN salespersonquotahistory.businessentityid; Type: COMMENT; Schema: sales; Owner: -\n--\n\nCOMMENT ON COLUMN sales.salespersonquotahistory.businessentityid IS 'Sales person identification number. Foreign key to SalesPerson.BusinessEntityID.';\n\n\n--\n-- Name: COLUMN salespersonquotahistory.quotadate; Type: COMMENT; Schema: sales; Owner: -\n--\n\nCOMMENT ON COLUMN sales.salespersonquotahistory.quotadate IS 'Sales quota date.';\n\n\n--\n-- Name: COLUMN salespersonquotahistory.salesquota; Type: COMMENT; Schema: sales; Owner: -\n--\n\nCOMMENT ON COLUMN sales.salespersonquotahistory.salesquota IS 'Sales quota amount.';"}
{"input_text": "convert following DDL/DML code from MSSQL to Postgresql \nUSE [adventureworks]\nGO\n/****** Object:  Table [Sales].[SalesReason]    Script Date: 2/3/24 12:03:01 AM ******/\nSET ANSI_NULLS ON\nGO\nSET QUOTED_IDENTIFIER ON\nGO\nCREATE TABLE [Sales].[SalesReason](\n\t[SalesReasonID] [int] IDENTITY(1,1) NOT NULL,\n\t[Name] [dbo].[Name] NOT NULL,\n\t[ReasonType] [dbo].[Name] NOT NULL,\n\t[ModifiedDate] [datetime] NOT NULL,\n CONSTRAINT [PK_SalesReason_SalesReasonID] PRIMARY KEY CLUSTERED \n(\n\t[SalesReasonID] ASC\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]\n) ON [PRIMARY]\nGO\nALTER TABLE [Sales].[SalesReason] ADD  CONSTRAINT [DF_SalesReason_ModifiedDate]  DEFAULT (getdate()) FOR [ModifiedDate]\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key for SalesReason records.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesReason', @level2type=N'COLUMN',@level2name=N'SalesReasonID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Sales reason description.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesReason', @level2type=N'COLUMN',@level2name=N'Name'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Category the sales reason belongs to.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesReason', @level2type=N'COLUMN',@level2name=N'ReasonType'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Date and time the record was last updated.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesReason', @level2type=N'COLUMN',@level2name=N'ModifiedDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of GETDATE()' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesReason', @level2type=N'CONSTRAINT',@level2name=N'DF_SalesReason_ModifiedDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key (clustered) constraint' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesReason', @level2type=N'CONSTRAINT',@level2name=N'PK_SalesReason_SalesReasonID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Lookup table of customer purchase reasons.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesReason'\nGO", "output_text": "CREATE TABLE sales.salesreason (\n    salesreasonid integer NOT NULL,\n    name public.\"Name\" NOT NULL,\n    reasontype public.\"Name\" NOT NULL,\n    modifieddate timestamp without time zone DEFAULT now() NOT NULL\n);\n\n\n--\n-- Name: TABLE salesreason; Type: COMMENT; Schema: sales; Owner: -\n--\n\nCOMMENT ON TABLE sales.salesreason IS 'Lookup table of customer purchase reasons.';\n\n\n--\n-- Name: COLUMN salesreason.salesreasonid; Type: COMMENT; Schema: sales; Owner: -\n--\n\nCOMMENT ON COLUMN sales.salesreason.salesreasonid IS 'Primary key for SalesReason records.';\n\n\n--\n-- Name: COLUMN salesreason.name; Type: COMMENT; Schema: sales; Owner: -\n--\n\nCOMMENT ON COLUMN sales.salesreason.name IS 'Sales reason description.';\n\n\n--\n-- Name: COLUMN salesreason.reasontype; Type: COMMENT; Schema: sales; Owner: -\n--\n\nCOMMENT ON COLUMN sales.salesreason.reasontype IS 'Category the sales reason belongs to.';"}
{"input_text": "convert following DDL/DML code from MSSQL to Postgresql \nUSE [adventureworks]\nGO\n/****** Object:  Table [Sales].[SalesTaxRate]    Script Date: 2/3/24 12:03:01 AM ******/\nSET ANSI_NULLS ON\nGO\nSET QUOTED_IDENTIFIER ON\nGO\nCREATE TABLE [Sales].[SalesTaxRate](\n\t[SalesTaxRateID] [int] IDENTITY(1,1) NOT NULL,\n\t[StateProvinceID] [int] NOT NULL,\n\t[TaxType] [tinyint] NOT NULL,\n\t[TaxRate] [smallmoney] NOT NULL,\n\t[Name] [dbo].[Name] NOT NULL,\n\t[rowguid] [uniqueidentifier] ROWGUIDCOL  NOT NULL,\n\t[ModifiedDate] [datetime] NOT NULL,\n CONSTRAINT [PK_SalesTaxRate_SalesTaxRateID] PRIMARY KEY CLUSTERED \n(\n\t[SalesTaxRateID] ASC\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]\n) ON [PRIMARY]\nGO\n/****** Object:  Index [AK_SalesTaxRate_rowguid]    Script Date: 2/3/24 12:03:02 AM ******/\nCREATE UNIQUE NONCLUSTERED INDEX [AK_SalesTaxRate_rowguid] ON [Sales].[SalesTaxRate]\n(\n\t[rowguid] ASC\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]\nGO\n/****** Object:  Index [AK_SalesTaxRate_StateProvinceID_TaxType]    Script Date: 2/3/24 12:03:02 AM ******/\nCREATE UNIQUE NONCLUSTERED INDEX [AK_SalesTaxRate_StateProvinceID_TaxType] ON [Sales].[SalesTaxRate]\n(\n\t[StateProvinceID] ASC,\n\t[TaxType] ASC\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]\nGO\nALTER TABLE [Sales].[SalesTaxRate] ADD  CONSTRAINT [DF_SalesTaxRate_TaxRate]  DEFAULT ((0.00)) FOR [TaxRate]\nGO\nALTER TABLE [Sales].[SalesTaxRate] ADD  CONSTRAINT [DF_SalesTaxRate_rowguid]  DEFAULT (newid()) FOR [rowguid]\nGO\nALTER TABLE [Sales].[SalesTaxRate] ADD  CONSTRAINT [DF_SalesTaxRate_ModifiedDate]  DEFAULT (getdate()) FOR [ModifiedDate]\nGO\nALTER TABLE [Sales].[SalesTaxRate]  WITH CHECK ADD  CONSTRAINT [FK_SalesTaxRate_StateProvince_StateProvinceID] FOREIGN KEY([StateProvinceID])\nREFERENCES [Person].[StateProvince] ([StateProvinceID])\nGO\nALTER TABLE [Sales].[SalesTaxRate] CHECK CONSTRAINT [FK_SalesTaxRate_StateProvince_StateProvinceID]\nGO\nALTER TABLE [Sales].[SalesTaxRate]  WITH CHECK ADD  CONSTRAINT [CK_SalesTaxRate_TaxType] CHECK  (([TaxType]>=(1) AND [TaxType]<=(3)))\nGO\nALTER TABLE [Sales].[SalesTaxRate] CHECK CONSTRAINT [CK_SalesTaxRate_TaxType]\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key for SalesTaxRate records.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesTaxRate', @level2type=N'COLUMN',@level2name=N'SalesTaxRateID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'State, province, or country/region the sales tax applies to.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesTaxRate', @level2type=N'COLUMN',@level2name=N'StateProvinceID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'1 = Tax applied to retail transactions, 2 = Tax applied to wholesale transactions, 3 = Tax applied to all sales (retail and wholesale) transactions.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesTaxRate', @level2type=N'COLUMN',@level2name=N'TaxType'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Tax rate amount.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesTaxRate', @level2type=N'COLUMN',@level2name=N'TaxRate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of 0.0' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesTaxRate', @level2type=N'CONSTRAINT',@level2name=N'DF_SalesTaxRate_TaxRate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Tax rate description.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesTaxRate', @level2type=N'COLUMN',@level2name=N'Name'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesTaxRate', @level2type=N'COLUMN',@level2name=N'rowguid'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of NEWID()' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesTaxRate', @level2type=N'CONSTRAINT',@level2name=N'DF_SalesTaxRate_rowguid'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Date and time the record was last updated.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesTaxRate', @level2type=N'COLUMN',@level2name=N'ModifiedDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of GETDATE()' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesTaxRate', @level2type=N'CONSTRAINT',@level2name=N'DF_SalesTaxRate_ModifiedDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key (clustered) constraint' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesTaxRate', @level2type=N'CONSTRAINT',@level2name=N'PK_SalesTaxRate_SalesTaxRateID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Unique nonclustered index. Used to support replication samples.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesTaxRate', @level2type=N'INDEX',@level2name=N'AK_SalesTaxRate_rowguid'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Unique nonclustered index.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesTaxRate', @level2type=N'INDEX',@level2name=N'AK_SalesTaxRate_StateProvinceID_TaxType'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Tax rate lookup table.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesTaxRate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key constraint referencing StateProvince.StateProvinceID.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesTaxRate', @level2type=N'CONSTRAINT',@level2name=N'FK_SalesTaxRate_StateProvince_StateProvinceID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Check constraint [TaxType] BETWEEN (1) AND (3)' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesTaxRate', @level2type=N'CONSTRAINT',@level2name=N'CK_SalesTaxRate_TaxType'\nGO\n", "output_text": "CREATE TABLE sales.salestaxrate (\n    salestaxrateid integer NOT NULL,\n    stateprovinceid integer NOT NULL,\n    taxtype smallint NOT NULL,\n    taxrate numeric DEFAULT 0.00 NOT NULL,\n    name public.\"Name\" NOT NULL,\n    rowguid uuid DEFAULT public.uuid_generate_v1() NOT NULL,\n    modifieddate timestamp without time zone DEFAULT now() NOT NULL,\n    CONSTRAINT \"CK_SalesTaxRate_TaxType\" CHECK (((taxtype >= 1) AND (taxtype <= 3)))\n);\n\n\n--\n-- Name: TABLE salestaxrate; Type: COMMENT; Schema: sales; Owner: -\n--\n\nCOMMENT ON TABLE sales.salestaxrate IS 'Tax rate lookup table.';\n\n\n--\n-- Name: COLUMN salestaxrate.salestaxrateid; Type: COMMENT; Schema: sales; Owner: -\n--\n\nCOMMENT ON COLUMN sales.salestaxrate.salestaxrateid IS 'Primary key for SalesTaxRate records.';\n\n\n--\n-- Name: COLUMN salestaxrate.stateprovinceid; Type: COMMENT; Schema: sales; Owner: -\n--\n\nCOMMENT ON COLUMN sales.salestaxrate.stateprovinceid IS 'State, province, or country/region the sales tax applies to.';\n\n\n--\n-- Name: COLUMN salestaxrate.taxtype; Type: COMMENT; Schema: sales; Owner: -\n--\n\nCOMMENT ON COLUMN sales.salestaxrate.taxtype IS '1 = Tax applied to retail transactions, 2 = Tax applied to wholesale transactions, 3 = Tax applied to all sales (retail and wholesale) transactions.';\n\n\n--\n-- Name: COLUMN salestaxrate.taxrate; Type: COMMENT; Schema: sales; Owner: -\n--\n\nCOMMENT ON COLUMN sales.salestaxrate.taxrate IS 'Tax rate amount.';\n\n\n--\n-- Name: COLUMN salestaxrate.name; Type: COMMENT; Schema: sales; Owner: -\n--\n\nCOMMENT ON COLUMN sales.salestaxrate.name IS 'Tax rate description.';"}
{"input_text": "convert following DDL/DML code from MSSQL to Postgresql \nUSE [adventureworks]\nGO\n/****** Object:  Table [Sales].[SalesTerritory]    Script Date: 2/3/24 12:02:54 AM ******/\nSET ANSI_NULLS ON\nGO\nSET QUOTED_IDENTIFIER ON\nGO\nCREATE TABLE [Sales].[SalesTerritory](\n\t[TerritoryID] [int] IDENTITY(1,1) NOT NULL,\n\t[Name] [dbo].[Name] NOT NULL,\n\t[CountryRegionCode] [nvarchar](3) NOT NULL,\n\t[Group] [nvarchar](50) NOT NULL,\n\t[SalesYTD] [money] NOT NULL,\n\t[SalesLastYear] [money] NOT NULL,\n\t[CostYTD] [money] NOT NULL,\n\t[CostLastYear] [money] NOT NULL,\n\t[rowguid] [uniqueidentifier] ROWGUIDCOL  NOT NULL,\n\t[ModifiedDate] [datetime] NOT NULL,\n CONSTRAINT [PK_SalesTerritory_TerritoryID] PRIMARY KEY CLUSTERED \n(\n\t[TerritoryID] ASC\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]\n) ON [PRIMARY]\nGO\nSET ANSI_PADDING ON\nGO\n/****** Object:  Index [AK_SalesTerritory_Name]    Script Date: 2/3/24 12:03:02 AM ******/\nCREATE UNIQUE NONCLUSTERED INDEX [AK_SalesTerritory_Name] ON [Sales].[SalesTerritory]\n(\n\t[Name] ASC\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]\nGO\n/****** Object:  Index [AK_SalesTerritory_rowguid]    Script Date: 2/3/24 12:03:02 AM ******/\nCREATE UNIQUE NONCLUSTERED INDEX [AK_SalesTerritory_rowguid] ON [Sales].[SalesTerritory]\n(\n\t[rowguid] ASC\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]\nGO\nALTER TABLE [Sales].[SalesTerritory] ADD  CONSTRAINT [DF_SalesTerritory_SalesYTD]  DEFAULT ((0.00)) FOR [SalesYTD]\nGO\nALTER TABLE [Sales].[SalesTerritory] ADD  CONSTRAINT [DF_SalesTerritory_SalesLastYear]  DEFAULT ((0.00)) FOR [SalesLastYear]\nGO\nALTER TABLE [Sales].[SalesTerritory] ADD  CONSTRAINT [DF_SalesTerritory_CostYTD]  DEFAULT ((0.00)) FOR [CostYTD]\nGO\nALTER TABLE [Sales].[SalesTerritory] ADD  CONSTRAINT [DF_SalesTerritory_CostLastYear]  DEFAULT ((0.00)) FOR [CostLastYear]\nGO\nALTER TABLE [Sales].[SalesTerritory] ADD  CONSTRAINT [DF_SalesTerritory_rowguid]  DEFAULT (newid()) FOR [rowguid]\nGO\nALTER TABLE [Sales].[SalesTerritory] ADD  CONSTRAINT [DF_SalesTerritory_ModifiedDate]  DEFAULT (getdate()) FOR [ModifiedDate]\nGO\nALTER TABLE [Sales].[SalesTerritory]  WITH CHECK ADD  CONSTRAINT [FK_SalesTerritory_CountryRegion_CountryRegionCode] FOREIGN KEY([CountryRegionCode])\nREFERENCES [Person].[CountryRegion] ([CountryRegionCode])\nGO\nALTER TABLE [Sales].[SalesTerritory] CHECK CONSTRAINT [FK_SalesTerritory_CountryRegion_CountryRegionCode]\nGO\nALTER TABLE [Sales].[SalesTerritory]  WITH CHECK ADD  CONSTRAINT [CK_SalesTerritory_CostLastYear] CHECK  (([CostLastYear]>=(0.00)))\nGO\nALTER TABLE [Sales].[SalesTerritory] CHECK CONSTRAINT [CK_SalesTerritory_CostLastYear]\nGO\nALTER TABLE [Sales].[SalesTerritory]  WITH CHECK ADD  CONSTRAINT [CK_SalesTerritory_CostYTD] CHECK  (([CostYTD]>=(0.00)))\nGO\nALTER TABLE [Sales].[SalesTerritory] CHECK CONSTRAINT [CK_SalesTerritory_CostYTD]\nGO\nALTER TABLE [Sales].[SalesTerritory]  WITH CHECK ADD  CONSTRAINT [CK_SalesTerritory_SalesLastYear] CHECK  (([SalesLastYear]>=(0.00)))\nGO\nALTER TABLE [Sales].[SalesTerritory] CHECK CONSTRAINT [CK_SalesTerritory_SalesLastYear]\nGO\nALTER TABLE [Sales].[SalesTerritory]  WITH CHECK ADD  CONSTRAINT [CK_SalesTerritory_SalesYTD] CHECK  (([SalesYTD]>=(0.00)))\nGO\nALTER TABLE [Sales].[SalesTerritory] CHECK CONSTRAINT [CK_SalesTerritory_SalesYTD]\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key for SalesTerritory records.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesTerritory', @level2type=N'COLUMN',@level2name=N'TerritoryID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Sales territory description' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesTerritory', @level2type=N'COLUMN',@level2name=N'Name'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'ISO standard country or region code. Foreign key to CountryRegion.CountryRegionCode. ' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesTerritory', @level2type=N'COLUMN',@level2name=N'CountryRegionCode'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Geographic area to which the sales territory belong.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesTerritory', @level2type=N'COLUMN',@level2name=N'Group'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Sales in the territory year to date.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesTerritory', @level2type=N'COLUMN',@level2name=N'SalesYTD'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of 0.0' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesTerritory', @level2type=N'CONSTRAINT',@level2name=N'DF_SalesTerritory_SalesYTD'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Sales in the territory the previous year.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesTerritory', @level2type=N'COLUMN',@level2name=N'SalesLastYear'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of 0.0' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesTerritory', @level2type=N'CONSTRAINT',@level2name=N'DF_SalesTerritory_SalesLastYear'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Business costs in the territory year to date.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesTerritory', @level2type=N'COLUMN',@level2name=N'CostYTD'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of 0.0' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesTerritory', @level2type=N'CONSTRAINT',@level2name=N'DF_SalesTerritory_CostYTD'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Business costs in the territory the previous year.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesTerritory', @level2type=N'COLUMN',@level2name=N'CostLastYear'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of 0.0' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesTerritory', @level2type=N'CONSTRAINT',@level2name=N'DF_SalesTerritory_CostLastYear'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesTerritory', @level2type=N'COLUMN',@level2name=N'rowguid'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of NEWID()' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesTerritory', @level2type=N'CONSTRAINT',@level2name=N'DF_SalesTerritory_rowguid'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Date and time the record was last updated.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesTerritory', @level2type=N'COLUMN',@level2name=N'ModifiedDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of GETDATE()' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesTerritory', @level2type=N'CONSTRAINT',@level2name=N'DF_SalesTerritory_ModifiedDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key (clustered) constraint' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesTerritory', @level2type=N'CONSTRAINT',@level2name=N'PK_SalesTerritory_TerritoryID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Unique nonclustered index.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesTerritory', @level2type=N'INDEX',@level2name=N'AK_SalesTerritory_Name'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Unique nonclustered index. Used to support replication samples.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesTerritory', @level2type=N'INDEX',@level2name=N'AK_SalesTerritory_rowguid'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Sales territory lookup table.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesTerritory'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key constraint referencing CountryRegion.CountryRegionCode.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesTerritory', @level2type=N'CONSTRAINT',@level2name=N'FK_SalesTerritory_CountryRegion_CountryRegionCode'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Check constraint [CostLastYear] >= (0.00)' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesTerritory', @level2type=N'CONSTRAINT',@level2name=N'CK_SalesTerritory_CostLastYear'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Check constraint [CostYTD] >= (0.00)' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesTerritory', @level2type=N'CONSTRAINT',@level2name=N'CK_SalesTerritory_CostYTD'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Check constraint [SalesLastYear] >= (0.00)' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesTerritory', @level2type=N'CONSTRAINT',@level2name=N'CK_SalesTerritory_SalesLastYear'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Check constraint [SalesYTD] >= (0.00)' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesTerritory', @level2type=N'CONSTRAINT',@level2name=N'CK_SalesTerritory_SalesYTD'\nGO", "output_text": "CREATE TABLE sales.salesterritory (\n    territoryid integer NOT NULL,\n    name public.\"Name\" NOT NULL,\n    countryregioncode character varying(3) NOT NULL,\n    \"group\" character varying(50) NOT NULL,\n    salesytd numeric DEFAULT 0.00 NOT NULL,\n    saleslastyear numeric DEFAULT 0.00 NOT NULL,\n    costytd numeric DEFAULT 0.00 NOT NULL,\n    costlastyear numeric DEFAULT 0.00 NOT NULL,\n    rowguid uuid DEFAULT public.uuid_generate_v1() NOT NULL,\n    modifieddate timestamp without time zone DEFAULT now() NOT NULL,\n    CONSTRAINT \"CK_SalesTerritory_CostLastYear\" CHECK ((costlastyear >= 0.00)),\n    CONSTRAINT \"CK_SalesTerritory_CostYTD\" CHECK ((costytd >= 0.00)),\n    CONSTRAINT \"CK_SalesTerritory_SalesLastYear\" CHECK ((saleslastyear >= 0.00)),\n    CONSTRAINT \"CK_SalesTerritory_SalesYTD\" CHECK ((salesytd >= 0.00))\n);\n\n\n--\n-- Name: TABLE salesterritory; Type: COMMENT; Schema: sales; Owner: -\n--\n\nCOMMENT ON TABLE sales.salesterritory IS 'Sales territory lookup table.';\n\n\n--\n-- Name: COLUMN salesterritory.territoryid; Type: COMMENT; Schema: sales; Owner: -\n--\n\nCOMMENT ON COLUMN sales.salesterritory.territoryid IS 'Primary key for SalesTerritory records.';\n\n\n--\n-- Name: COLUMN salesterritory.name; Type: COMMENT; Schema: sales; Owner: -\n--\n\nCOMMENT ON COLUMN sales.salesterritory.name IS 'Sales territory description';\n\n\n--\n-- Name: COLUMN salesterritory.countryregioncode; Type: COMMENT; Schema: sales; Owner: -\n--\n\nCOMMENT ON COLUMN sales.salesterritory.countryregioncode IS 'ISO standard country or region code. Foreign key to CountryRegion.CountryRegionCode.';\n\n\n--\n-- Name: COLUMN salesterritory.\"group\"; Type: COMMENT; Schema: sales; Owner: -\n--\n\nCOMMENT ON COLUMN sales.salesterritory.\"group\" IS 'Geographic area to which the sales territory belong.';\n\n\n--\n-- Name: COLUMN salesterritory.salesytd; Type: COMMENT; Schema: sales; Owner: -\n--\n\nCOMMENT ON COLUMN sales.salesterritory.salesytd IS 'Sales in the territory year to date.';\n\n\n--\n-- Name: COLUMN salesterritory.saleslastyear; Type: COMMENT; Schema: sales; Owner: -\n--\n\nCOMMENT ON COLUMN sales.salesterritory.saleslastyear IS 'Sales in the territory the previous year.';\n\n\n--\n-- Name: COLUMN salesterritory.costytd; Type: COMMENT; Schema: sales; Owner: -\n--\n\nCOMMENT ON COLUMN sales.salesterritory.costytd IS 'Business costs in the territory year to date.';\n\n\n--\n-- Name: COLUMN salesterritory.costlastyear; Type: COMMENT; Schema: sales; Owner: -\n--\n\nCOMMENT ON COLUMN sales.salesterritory.costlastyear IS 'Business costs in the territory the previous year.';"}
{"input_text": "convert following DDL/DML code from MSSQL to Postgresql \nUSE [adventureworks]\nGO\n/****** Object:  Table [Sales].[SalesTerritoryHistory]    Script Date: 2/3/24 12:03:01 AM ******/\nSET ANSI_NULLS ON\nGO\nSET QUOTED_IDENTIFIER ON\nGO\nCREATE TABLE [Sales].[SalesTerritoryHistory](\n\t[BusinessEntityID] [int] NOT NULL,\n\t[TerritoryID] [int] NOT NULL,\n\t[StartDate] [datetime] NOT NULL,\n\t[EndDate] [datetime] NULL,\n\t[rowguid] [uniqueidentifier] ROWGUIDCOL  NOT NULL,\n\t[ModifiedDate] [datetime] NOT NULL,\n CONSTRAINT [PK_SalesTerritoryHistory_BusinessEntityID_StartDate_TerritoryID] PRIMARY KEY CLUSTERED \n(\n\t[BusinessEntityID] ASC,\n\t[StartDate] ASC,\n\t[TerritoryID] ASC\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]\n) ON [PRIMARY]\nGO\n/****** Object:  Index [AK_SalesTerritoryHistory_rowguid]    Script Date: 2/3/24 12:03:02 AM ******/\nCREATE UNIQUE NONCLUSTERED INDEX [AK_SalesTerritoryHistory_rowguid] ON [Sales].[SalesTerritoryHistory]\n(\n\t[rowguid] ASC\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]\nGO\nALTER TABLE [Sales].[SalesTerritoryHistory] ADD  CONSTRAINT [DF_SalesTerritoryHistory_rowguid]  DEFAULT (newid()) FOR [rowguid]\nGO\nALTER TABLE [Sales].[SalesTerritoryHistory] ADD  CONSTRAINT [DF_SalesTerritoryHistory_ModifiedDate]  DEFAULT (getdate()) FOR [ModifiedDate]\nGO\nALTER TABLE [Sales].[SalesTerritoryHistory]  WITH CHECK ADD  CONSTRAINT [FK_SalesTerritoryHistory_SalesPerson_BusinessEntityID] FOREIGN KEY([BusinessEntityID])\nREFERENCES [Sales].[SalesPerson] ([BusinessEntityID])\nGO\nALTER TABLE [Sales].[SalesTerritoryHistory] CHECK CONSTRAINT [FK_SalesTerritoryHistory_SalesPerson_BusinessEntityID]\nGO\nALTER TABLE [Sales].[SalesTerritoryHistory]  WITH CHECK ADD  CONSTRAINT [FK_SalesTerritoryHistory_SalesTerritory_TerritoryID] FOREIGN KEY([TerritoryID])\nREFERENCES [Sales].[SalesTerritory] ([TerritoryID])\nGO\nALTER TABLE [Sales].[SalesTerritoryHistory] CHECK CONSTRAINT [FK_SalesTerritoryHistory_SalesTerritory_TerritoryID]\nGO\nALTER TABLE [Sales].[SalesTerritoryHistory]  WITH CHECK ADD  CONSTRAINT [CK_SalesTerritoryHistory_EndDate] CHECK  (([EndDate]>=[StartDate] OR [EndDate] IS NULL))\nGO\nALTER TABLE [Sales].[SalesTerritoryHistory] CHECK CONSTRAINT [CK_SalesTerritoryHistory_EndDate]\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key. The sales rep.  Foreign key to SalesPerson.BusinessEntityID.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesTerritoryHistory', @level2type=N'COLUMN',@level2name=N'BusinessEntityID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key. Territory identification number. Foreign key to SalesTerritory.SalesTerritoryID.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesTerritoryHistory', @level2type=N'COLUMN',@level2name=N'TerritoryID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key. Date the sales representive started work in the territory.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesTerritoryHistory', @level2type=N'COLUMN',@level2name=N'StartDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Date the sales representative left work in the territory.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesTerritoryHistory', @level2type=N'COLUMN',@level2name=N'EndDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesTerritoryHistory', @level2type=N'COLUMN',@level2name=N'rowguid'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of NEWID()' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesTerritoryHistory', @level2type=N'CONSTRAINT',@level2name=N'DF_SalesTerritoryHistory_rowguid'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Date and time the record was last updated.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesTerritoryHistory', @level2type=N'COLUMN',@level2name=N'ModifiedDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of GETDATE()' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesTerritoryHistory', @level2type=N'CONSTRAINT',@level2name=N'DF_SalesTerritoryHistory_ModifiedDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key (clustered) constraint' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesTerritoryHistory', @level2type=N'CONSTRAINT',@level2name=N'PK_SalesTerritoryHistory_BusinessEntityID_StartDate_TerritoryID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Unique nonclustered index. Used to support replication samples.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesTerritoryHistory', @level2type=N'INDEX',@level2name=N'AK_SalesTerritoryHistory_rowguid'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Sales representative transfers to other sales territories.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesTerritoryHistory'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key constraint referencing SalesPerson.SalesPersonID.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesTerritoryHistory', @level2type=N'CONSTRAINT',@level2name=N'FK_SalesTerritoryHistory_SalesPerson_BusinessEntityID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key constraint referencing SalesTerritory.TerritoryID.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesTerritoryHistory', @level2type=N'CONSTRAINT',@level2name=N'FK_SalesTerritoryHistory_SalesTerritory_TerritoryID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Check constraint [EndDate] >= [StartDate] OR [EndDate] IS NULL' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesTerritoryHistory', @level2type=N'CONSTRAINT',@level2name=N'CK_SalesTerritoryHistory_EndDate'\nGO", "output_text": "CREATE TABLE sales.salesterritoryhistory (\n    businessentityid integer NOT NULL,\n    territoryid integer NOT NULL,\n    startdate timestamp without time zone NOT NULL,\n    enddate timestamp without time zone,\n    rowguid uuid DEFAULT public.uuid_generate_v1() NOT NULL,\n    modifieddate timestamp without time zone DEFAULT now() NOT NULL,\n    CONSTRAINT \"CK_SalesTerritoryHistory_EndDate\" CHECK (((enddate >= startdate) OR (enddate IS NULL)))\n);\n\n\n--\n-- Name: TABLE salesterritoryhistory; Type: COMMENT; Schema: sales; Owner: -\n--\n\nCOMMENT ON TABLE sales.salesterritoryhistory IS 'Sales representative transfers to other sales territories.';\n\n\n--\n-- Name: COLUMN salesterritoryhistory.businessentityid; Type: COMMENT; Schema: sales; Owner: -\n--\n\nCOMMENT ON COLUMN sales.salesterritoryhistory.businessentityid IS 'Primary key. The sales rep.  Foreign key to SalesPerson.BusinessEntityID.';\n\n\n--\n-- Name: COLUMN salesterritoryhistory.territoryid; Type: COMMENT; Schema: sales; Owner: -\n--\n\nCOMMENT ON COLUMN sales.salesterritoryhistory.territoryid IS 'Primary key. Territory identification number. Foreign key to SalesTerritory.SalesTerritoryID.';\n\n\n--\n-- Name: COLUMN salesterritoryhistory.startdate; Type: COMMENT; Schema: sales; Owner: -\n--\n\nCOMMENT ON COLUMN sales.salesterritoryhistory.startdate IS 'Primary key. Date the sales representive started work in the territory.';\n\n\n--\n-- Name: COLUMN salesterritoryhistory.enddate; Type: COMMENT; Schema: sales; Owner: -\n--\n\nCOMMENT ON COLUMN sales.salesterritoryhistory.enddate IS 'Date the sales representative left work in the territory.';"}
{"input_text": "convert following DDL/DML code from MSSQL to Postgresql \nUSE [adventureworks]\nGO\n/****** Object:  Schema [Sales]    Script Date: 2/3/24 12:02:51 AM ******/\nCREATE SCHEMA [Sales]\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Contains objects related to customers, sales orders, and sales territories.' , @level0type=N'SCHEMA',@level0name=N'Sales'\nGO", "output_text": "CREATE SCHEMA sales;\nCOMMENT ON SCHEMA sales IS 'Contains objects related to customers, sales orders, and sales territories.';"}
{"input_text": "convert following DDL/DML code from MSSQL to Postgresql \nUSE [adventureworks]\nGO\n/****** Object:  Table [Sales].[ShoppingCartItem]    Script Date: 2/3/24 12:03:01 AM ******/\nSET ANSI_NULLS ON\nGO\nSET QUOTED_IDENTIFIER ON\nGO\nCREATE TABLE [Sales].[ShoppingCartItem](\n\t[ShoppingCartItemID] [int] IDENTITY(1,1) NOT NULL,\n\t[ShoppingCartID] [nvarchar](50) NOT NULL,\n\t[Quantity] [int] NOT NULL,\n\t[ProductID] [int] NOT NULL,\n\t[DateCreated] [datetime] NOT NULL,\n\t[ModifiedDate] [datetime] NOT NULL,\n CONSTRAINT [PK_ShoppingCartItem_ShoppingCartItemID] PRIMARY KEY CLUSTERED \n(\n\t[ShoppingCartItemID] ASC\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]\n) ON [PRIMARY]\nGO\nSET ANSI_PADDING ON\nGO\n/****** Object:  Index [IX_ShoppingCartItem_ShoppingCartID_ProductID]    Script Date: 2/3/24 12:03:02 AM ******/\nCREATE NONCLUSTERED INDEX [IX_ShoppingCartItem_ShoppingCartID_ProductID] ON [Sales].[ShoppingCartItem]\n(\n\t[ShoppingCartID] ASC,\n\t[ProductID] ASC\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]\nGO\nALTER TABLE [Sales].[ShoppingCartItem] ADD  CONSTRAINT [DF_ShoppingCartItem_Quantity]  DEFAULT ((1)) FOR [Quantity]\nGO\nALTER TABLE [Sales].[ShoppingCartItem] ADD  CONSTRAINT [DF_ShoppingCartItem_DateCreated]  DEFAULT (getdate()) FOR [DateCreated]\nGO\nALTER TABLE [Sales].[ShoppingCartItem] ADD  CONSTRAINT [DF_ShoppingCartItem_ModifiedDate]  DEFAULT (getdate()) FOR [ModifiedDate]\nGO\nALTER TABLE [Sales].[ShoppingCartItem]  WITH CHECK ADD  CONSTRAINT [FK_ShoppingCartItem_Product_ProductID] FOREIGN KEY([ProductID])\nREFERENCES [Production].[Product] ([ProductID])\nGO\nALTER TABLE [Sales].[ShoppingCartItem] CHECK CONSTRAINT [FK_ShoppingCartItem_Product_ProductID]\nGO\nALTER TABLE [Sales].[ShoppingCartItem]  WITH CHECK ADD  CONSTRAINT [CK_ShoppingCartItem_Quantity] CHECK  (([Quantity]>=(1)))\nGO\nALTER TABLE [Sales].[ShoppingCartItem] CHECK CONSTRAINT [CK_ShoppingCartItem_Quantity]\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key for ShoppingCartItem records.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'ShoppingCartItem', @level2type=N'COLUMN',@level2name=N'ShoppingCartItemID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Shopping cart identification number.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'ShoppingCartItem', @level2type=N'COLUMN',@level2name=N'ShoppingCartID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Product quantity ordered.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'ShoppingCartItem', @level2type=N'COLUMN',@level2name=N'Quantity'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of 1' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'ShoppingCartItem', @level2type=N'CONSTRAINT',@level2name=N'DF_ShoppingCartItem_Quantity'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Product ordered. Foreign key to Product.ProductID.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'ShoppingCartItem', @level2type=N'COLUMN',@level2name=N'ProductID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Date the time the record was created.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'ShoppingCartItem', @level2type=N'COLUMN',@level2name=N'DateCreated'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of GETDATE()' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'ShoppingCartItem', @level2type=N'CONSTRAINT',@level2name=N'DF_ShoppingCartItem_DateCreated'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Date and time the record was last updated.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'ShoppingCartItem', @level2type=N'COLUMN',@level2name=N'ModifiedDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of GETDATE()' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'ShoppingCartItem', @level2type=N'CONSTRAINT',@level2name=N'DF_ShoppingCartItem_ModifiedDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key (clustered) constraint' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'ShoppingCartItem', @level2type=N'CONSTRAINT',@level2name=N'PK_ShoppingCartItem_ShoppingCartItemID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Nonclustered index.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'ShoppingCartItem', @level2type=N'INDEX',@level2name=N'IX_ShoppingCartItem_ShoppingCartID_ProductID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Contains online customer orders until the order is submitted or cancelled.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'ShoppingCartItem'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key constraint referencing Product.ProductID.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'ShoppingCartItem', @level2type=N'CONSTRAINT',@level2name=N'FK_ShoppingCartItem_Product_ProductID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Check constraint [Quantity] >= (1)' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'ShoppingCartItem', @level2type=N'CONSTRAINT',@level2name=N'CK_ShoppingCartItem_Quantity'\nGO", "output_text": "CREATE TABLE sales.shoppingcartitem (\n    shoppingcartitemid integer NOT NULL,\n    shoppingcartid character varying(50) NOT NULL,\n    quantity integer DEFAULT 1 NOT NULL,\n    productid integer NOT NULL,\n    datecreated timestamp without time zone DEFAULT now() NOT NULL,\n    modifieddate timestamp without time zone DEFAULT now() NOT NULL,\n    CONSTRAINT \"CK_ShoppingCartItem_Quantity\" CHECK ((quantity >= 1))\n);\n\n\n--\n-- Name: TABLE shoppingcartitem; Type: COMMENT; Schema: sales; Owner: -\n--\n\nCOMMENT ON TABLE sales.shoppingcartitem IS 'Contains online customer orders until the order is submitted or cancelled.';\n\n\n--\n-- Name: COLUMN shoppingcartitem.shoppingcartitemid; Type: COMMENT; Schema: sales; Owner: -\n--\n\nCOMMENT ON COLUMN sales.shoppingcartitem.shoppingcartitemid IS 'Primary key for ShoppingCartItem records.';\n\n\n--\n-- Name: COLUMN shoppingcartitem.shoppingcartid; Type: COMMENT; Schema: sales; Owner: -\n--\n\nCOMMENT ON COLUMN sales.shoppingcartitem.shoppingcartid IS 'Shopping cart identification number.';\n\n\n--\n-- Name: COLUMN shoppingcartitem.quantity; Type: COMMENT; Schema: sales; Owner: -\n--\n\nCOMMENT ON COLUMN sales.shoppingcartitem.quantity IS 'Product quantity ordered.';\n\n\n--\n-- Name: COLUMN shoppingcartitem.productid; Type: COMMENT; Schema: sales; Owner: -\n--\n\nCOMMENT ON COLUMN sales.shoppingcartitem.productid IS 'Product ordered. Foreign key to Product.ProductID.';\n\n\n--\n-- Name: COLUMN shoppingcartitem.datecreated; Type: COMMENT; Schema: sales; Owner: -\n--\n\nCOMMENT ON COLUMN sales.shoppingcartitem.datecreated IS 'Date the time the record was created.';"}
{"input_text": "convert following DDL/DML code from MSSQL to Postgresql \nUSE [adventureworks]\nGO\n/****** Object:  Table [Sales].[SpecialOffer]    Script Date: 2/3/24 12:03:02 AM ******/\nSET ANSI_NULLS ON\nGO\nSET QUOTED_IDENTIFIER ON\nGO\nCREATE TABLE [Sales].[SpecialOffer](\n\t[SpecialOfferID] [int] IDENTITY(1,1) NOT NULL,\n\t[Description] [nvarchar](255) NOT NULL,\n\t[DiscountPct] [smallmoney] NOT NULL,\n\t[Type] [nvarchar](50) NOT NULL,\n\t[Category] [nvarchar](50) NOT NULL,\n\t[StartDate] [datetime] NOT NULL,\n\t[EndDate] [datetime] NOT NULL,\n\t[MinQty] [int] NOT NULL,\n\t[MaxQty] [int] NULL,\n\t[rowguid] [uniqueidentifier] ROWGUIDCOL  NOT NULL,\n\t[ModifiedDate] [datetime] NOT NULL,\n CONSTRAINT [PK_SpecialOffer_SpecialOfferID] PRIMARY KEY CLUSTERED \n(\n\t[SpecialOfferID] ASC\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]\n) ON [PRIMARY]\nGO\n/****** Object:  Index [AK_SpecialOffer_rowguid]    Script Date: 2/3/24 12:03:02 AM ******/\nCREATE UNIQUE NONCLUSTERED INDEX [AK_SpecialOffer_rowguid] ON [Sales].[SpecialOffer]\n(\n\t[rowguid] ASC\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]\nGO\nALTER TABLE [Sales].[SpecialOffer] ADD  CONSTRAINT [DF_SpecialOffer_DiscountPct]  DEFAULT ((0.00)) FOR [DiscountPct]\nGO\nALTER TABLE [Sales].[SpecialOffer] ADD  CONSTRAINT [DF_SpecialOffer_MinQty]  DEFAULT ((0)) FOR [MinQty]\nGO\nALTER TABLE [Sales].[SpecialOffer] ADD  CONSTRAINT [DF_SpecialOffer_rowguid]  DEFAULT (newid()) FOR [rowguid]\nGO\nALTER TABLE [Sales].[SpecialOffer] ADD  CONSTRAINT [DF_SpecialOffer_ModifiedDate]  DEFAULT (getdate()) FOR [ModifiedDate]\nGO\nALTER TABLE [Sales].[SpecialOffer]  WITH CHECK ADD  CONSTRAINT [CK_SpecialOffer_DiscountPct] CHECK  (([DiscountPct]>=(0.00)))\nGO\nALTER TABLE [Sales].[SpecialOffer] CHECK CONSTRAINT [CK_SpecialOffer_DiscountPct]\nGO\nALTER TABLE [Sales].[SpecialOffer]  WITH CHECK ADD  CONSTRAINT [CK_SpecialOffer_EndDate] CHECK  (([EndDate]>=[StartDate]))\nGO\nALTER TABLE [Sales].[SpecialOffer] CHECK CONSTRAINT [CK_SpecialOffer_EndDate]\nGO\nALTER TABLE [Sales].[SpecialOffer]  WITH CHECK ADD  CONSTRAINT [CK_SpecialOffer_MaxQty] CHECK  (([MaxQty]>=(0)))\nGO\nALTER TABLE [Sales].[SpecialOffer] CHECK CONSTRAINT [CK_SpecialOffer_MaxQty]\nGO\nALTER TABLE [Sales].[SpecialOffer]  WITH CHECK ADD  CONSTRAINT [CK_SpecialOffer_MinQty] CHECK  (([MinQty]>=(0)))\nGO\nALTER TABLE [Sales].[SpecialOffer] CHECK CONSTRAINT [CK_SpecialOffer_MinQty]\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key for SpecialOffer records.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SpecialOffer', @level2type=N'COLUMN',@level2name=N'SpecialOfferID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Discount description.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SpecialOffer', @level2type=N'COLUMN',@level2name=N'Description'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Discount precentage.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SpecialOffer', @level2type=N'COLUMN',@level2name=N'DiscountPct'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of 0.0' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SpecialOffer', @level2type=N'CONSTRAINT',@level2name=N'DF_SpecialOffer_DiscountPct'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Discount type category.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SpecialOffer', @level2type=N'COLUMN',@level2name=N'Type'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Group the discount applies to such as Reseller or Customer.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SpecialOffer', @level2type=N'COLUMN',@level2name=N'Category'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Discount start date.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SpecialOffer', @level2type=N'COLUMN',@level2name=N'StartDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Discount end date.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SpecialOffer', @level2type=N'COLUMN',@level2name=N'EndDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Minimum discount percent allowed.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SpecialOffer', @level2type=N'COLUMN',@level2name=N'MinQty'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of 0.0' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SpecialOffer', @level2type=N'CONSTRAINT',@level2name=N'DF_SpecialOffer_MinQty'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Maximum discount percent allowed.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SpecialOffer', @level2type=N'COLUMN',@level2name=N'MaxQty'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SpecialOffer', @level2type=N'COLUMN',@level2name=N'rowguid'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of NEWID()' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SpecialOffer', @level2type=N'CONSTRAINT',@level2name=N'DF_SpecialOffer_rowguid'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Date and time the record was last updated.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SpecialOffer', @level2type=N'COLUMN',@level2name=N'ModifiedDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of GETDATE()' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SpecialOffer', @level2type=N'CONSTRAINT',@level2name=N'DF_SpecialOffer_ModifiedDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key (clustered) constraint' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SpecialOffer', @level2type=N'CONSTRAINT',@level2name=N'PK_SpecialOffer_SpecialOfferID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Unique nonclustered index. Used to support replication samples.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SpecialOffer', @level2type=N'INDEX',@level2name=N'AK_SpecialOffer_rowguid'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Sale discounts lookup table.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SpecialOffer'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Check constraint [DiscountPct] >= (0.00)' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SpecialOffer', @level2type=N'CONSTRAINT',@level2name=N'CK_SpecialOffer_DiscountPct'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Check constraint [EndDate] >= [StartDate]' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SpecialOffer', @level2type=N'CONSTRAINT',@level2name=N'CK_SpecialOffer_EndDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Check constraint [MaxQty] >= (0)' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SpecialOffer', @level2type=N'CONSTRAINT',@level2name=N'CK_SpecialOffer_MaxQty'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Check constraint [MinQty] >= (0)' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SpecialOffer', @level2type=N'CONSTRAINT',@level2name=N'CK_SpecialOffer_MinQty'\nGO", "output_text": "CREATE TABLE sales.specialoffer (\n    specialofferid integer NOT NULL,\n    description character varying(255) NOT NULL,\n    discountpct numeric DEFAULT 0.00 NOT NULL,\n    type character varying(50) NOT NULL,\n    category character varying(50) NOT NULL,\n    startdate timestamp without time zone NOT NULL,\n    enddate timestamp without time zone NOT NULL,\n    minqty integer DEFAULT 0 NOT NULL,\n    maxqty integer,\n    rowguid uuid DEFAULT public.uuid_generate_v1() NOT NULL,\n    modifieddate timestamp without time zone DEFAULT now() NOT NULL,\n    CONSTRAINT \"CK_SpecialOffer_DiscountPct\" CHECK ((discountpct >= 0.00)),\n    CONSTRAINT \"CK_SpecialOffer_EndDate\" CHECK ((enddate >= startdate)),\n    CONSTRAINT \"CK_SpecialOffer_MaxQty\" CHECK ((maxqty >= 0)),\n    CONSTRAINT \"CK_SpecialOffer_MinQty\" CHECK ((minqty >= 0))\n);\n\n\n--\n-- Name: TABLE specialoffer; Type: COMMENT; Schema: sales; Owner: -\n--\n\nCOMMENT ON TABLE sales.specialoffer IS 'Sale discounts lookup table.';\n\n\n--\n-- Name: COLUMN specialoffer.specialofferid; Type: COMMENT; Schema: sales; Owner: -\n--\n\nCOMMENT ON COLUMN sales.specialoffer.specialofferid IS 'Primary key for SpecialOffer records.';\n\n\n--\n-- Name: COLUMN specialoffer.description; Type: COMMENT; Schema: sales; Owner: -\n--\n\nCOMMENT ON COLUMN sales.specialoffer.description IS 'Discount description.';\n\n\n--\n-- Name: COLUMN specialoffer.discountpct; Type: COMMENT; Schema: sales; Owner: -\n--\n\nCOMMENT ON COLUMN sales.specialoffer.discountpct IS 'Discount precentage.';\n\n\n--\n-- Name: COLUMN specialoffer.type; Type: COMMENT; Schema: sales; Owner: -\n--\n\nCOMMENT ON COLUMN sales.specialoffer.type IS 'Discount type category.';\n\n\n--\n-- Name: COLUMN specialoffer.category; Type: COMMENT; Schema: sales; Owner: -\n--\n\nCOMMENT ON COLUMN sales.specialoffer.category IS 'Group the discount applies to such as Reseller or Customer.';\n\n\n--\n-- Name: COLUMN specialoffer.startdate; Type: COMMENT; Schema: sales; Owner: -\n--\n\nCOMMENT ON COLUMN sales.specialoffer.startdate IS 'Discount start date.';\n\n\n--\n-- Name: COLUMN specialoffer.enddate; Type: COMMENT; Schema: sales; Owner: -\n--\n\nCOMMENT ON COLUMN sales.specialoffer.enddate IS 'Discount end date.';\n\n\n--\n-- Name: COLUMN specialoffer.minqty; Type: COMMENT; Schema: sales; Owner: -\n--\n\nCOMMENT ON COLUMN sales.specialoffer.minqty IS 'Minimum discount percent allowed.';\n\n\n--\n-- Name: COLUMN specialoffer.maxqty; Type: COMMENT; Schema: sales; Owner: -\n--\n\nCOMMENT ON COLUMN sales.specialoffer.maxqty IS 'Maximum discount percent allowed.';"}
{"input_text": "convert following DDL/DML code from MSSQL to Postgresql \nUSE [adventureworks]\nGO\n/****** Object:  Table [Sales].[SpecialOfferProduct]    Script Date: 2/3/24 12:03:02 AM ******/\nSET ANSI_NULLS ON\nGO\nSET QUOTED_IDENTIFIER ON\nGO\nCREATE TABLE [Sales].[SpecialOfferProduct](\n\t[SpecialOfferID] [int] NOT NULL,\n\t[ProductID] [int] NOT NULL,\n\t[rowguid] [uniqueidentifier] ROWGUIDCOL  NOT NULL,\n\t[ModifiedDate] [datetime] NOT NULL,\n CONSTRAINT [PK_SpecialOfferProduct_SpecialOfferID_ProductID] PRIMARY KEY CLUSTERED \n(\n\t[SpecialOfferID] ASC,\n\t[ProductID] ASC\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]\n) ON [PRIMARY]\nGO\n/****** Object:  Index [AK_SpecialOfferProduct_rowguid]    Script Date: 2/3/24 12:03:02 AM ******/\nCREATE UNIQUE NONCLUSTERED INDEX [AK_SpecialOfferProduct_rowguid] ON [Sales].[SpecialOfferProduct]\n(\n\t[rowguid] ASC\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]\nGO\n/****** Object:  Index [IX_SpecialOfferProduct_ProductID]    Script Date: 2/3/24 12:03:02 AM ******/\nCREATE NONCLUSTERED INDEX [IX_SpecialOfferProduct_ProductID] ON [Sales].[SpecialOfferProduct]\n(\n\t[ProductID] ASC\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]\nGO\nALTER TABLE [Sales].[SpecialOfferProduct] ADD  CONSTRAINT [DF_SpecialOfferProduct_rowguid]  DEFAULT (newid()) FOR [rowguid]\nGO\nALTER TABLE [Sales].[SpecialOfferProduct] ADD  CONSTRAINT [DF_SpecialOfferProduct_ModifiedDate]  DEFAULT (getdate()) FOR [ModifiedDate]\nGO\nALTER TABLE [Sales].[SpecialOfferProduct]  WITH CHECK ADD  CONSTRAINT [FK_SpecialOfferProduct_Product_ProductID] FOREIGN KEY([ProductID])\nREFERENCES [Production].[Product] ([ProductID])\nGO\nALTER TABLE [Sales].[SpecialOfferProduct] CHECK CONSTRAINT [FK_SpecialOfferProduct_Product_ProductID]\nGO\nALTER TABLE [Sales].[SpecialOfferProduct]  WITH CHECK ADD  CONSTRAINT [FK_SpecialOfferProduct_SpecialOffer_SpecialOfferID] FOREIGN KEY([SpecialOfferID])\nREFERENCES [Sales].[SpecialOffer] ([SpecialOfferID])\nGO\nALTER TABLE [Sales].[SpecialOfferProduct] CHECK CONSTRAINT [FK_SpecialOfferProduct_SpecialOffer_SpecialOfferID]\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key for SpecialOfferProduct records.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SpecialOfferProduct', @level2type=N'COLUMN',@level2name=N'SpecialOfferID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Product identification number. Foreign key to Product.ProductID.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SpecialOfferProduct', @level2type=N'COLUMN',@level2name=N'ProductID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SpecialOfferProduct', @level2type=N'COLUMN',@level2name=N'rowguid'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of NEWID()' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SpecialOfferProduct', @level2type=N'CONSTRAINT',@level2name=N'DF_SpecialOfferProduct_rowguid'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Date and time the record was last updated.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SpecialOfferProduct', @level2type=N'COLUMN',@level2name=N'ModifiedDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of GETDATE()' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SpecialOfferProduct', @level2type=N'CONSTRAINT',@level2name=N'DF_SpecialOfferProduct_ModifiedDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key (clustered) constraint' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SpecialOfferProduct', @level2type=N'CONSTRAINT',@level2name=N'PK_SpecialOfferProduct_SpecialOfferID_ProductID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Unique nonclustered index. Used to support replication samples.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SpecialOfferProduct', @level2type=N'INDEX',@level2name=N'AK_SpecialOfferProduct_rowguid'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Nonclustered index.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SpecialOfferProduct', @level2type=N'INDEX',@level2name=N'IX_SpecialOfferProduct_ProductID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Cross-reference table mapping products to special offer discounts.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SpecialOfferProduct'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key constraint referencing Product.ProductID.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SpecialOfferProduct', @level2type=N'CONSTRAINT',@level2name=N'FK_SpecialOfferProduct_Product_ProductID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key constraint referencing SpecialOffer.SpecialOfferID.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SpecialOfferProduct', @level2type=N'CONSTRAINT',@level2name=N'FK_SpecialOfferProduct_SpecialOffer_SpecialOfferID'\nGO", "output_text": "CREATE TABLE sales.specialofferproduct (\n    specialofferid integer NOT NULL,\n    productid integer NOT NULL,\n    rowguid uuid DEFAULT public.uuid_generate_v1() NOT NULL,\n    modifieddate timestamp without time zone DEFAULT now() NOT NULL\n);\n\n\n--\n-- Name: TABLE specialofferproduct; Type: COMMENT; Schema: sales; Owner: -\n--\n\nCOMMENT ON TABLE sales.specialofferproduct IS 'Cross-reference table mapping products to special offer discounts.';\n\n\n--\n-- Name: COLUMN specialofferproduct.specialofferid; Type: COMMENT; Schema: sales; Owner: -\n--\n\nCOMMENT ON COLUMN sales.specialofferproduct.specialofferid IS 'Primary key for SpecialOfferProduct records.';\n\n\n--\n-- Name: COLUMN specialofferproduct.productid; Type: COMMENT; Schema: sales; Owner: -\n--\n\nCOMMENT ON COLUMN sales.specialofferproduct.productid IS 'Product identification number. Foreign key to Product.ProductID.';"}
{"input_text": "convert following DDL/DML code from MSSQL to Postgresql \nUSE [adventureworks]\nGO\n/****** Object:  Table [Sales].[Store]    Script Date: 2/3/24 12:02:55 AM ******/\nSET ANSI_NULLS ON\nGO\nSET QUOTED_IDENTIFIER ON\nGO\nCREATE TABLE [Sales].[Store](\n\t[BusinessEntityID] [int] NOT NULL,\n\t[Name] [dbo].[Name] NOT NULL,\n\t[SalesPersonID] [int] NULL,\n\t[Demographics] [xml](CONTENT [Sales].[StoreSurveySchemaCollection]) NULL,\n\t[rowguid] [uniqueidentifier] ROWGUIDCOL  NOT NULL,\n\t[ModifiedDate] [datetime] NOT NULL,\n CONSTRAINT [PK_Store_BusinessEntityID] PRIMARY KEY CLUSTERED \n(\n\t[BusinessEntityID] ASC\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]\n) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]\nGO\n/****** Object:  Index [AK_Store_rowguid]    Script Date: 2/3/24 12:03:02 AM ******/\nCREATE UNIQUE NONCLUSTERED INDEX [AK_Store_rowguid] ON [Sales].[Store]\n(\n\t[rowguid] ASC\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]\nGO\n/****** Object:  Index [IX_Store_SalesPersonID]    Script Date: 2/3/24 12:03:02 AM ******/\nCREATE NONCLUSTERED INDEX [IX_Store_SalesPersonID] ON [Sales].[Store]\n(\n\t[SalesPersonID] ASC\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]\nGO\nSET ARITHABORT ON\nSET CONCAT_NULL_YIELDS_NULL ON\nSET QUOTED_IDENTIFIER ON\nSET ANSI_NULLS ON\nSET ANSI_PADDING ON\nSET ANSI_WARNINGS ON\nSET NUMERIC_ROUNDABORT OFF\nGO\n/****** Object:  Index [PXML_Store_Demographics]    Script Date: 2/3/24 12:03:03 AM ******/\nCREATE PRIMARY XML INDEX [PXML_Store_Demographics] ON [Sales].[Store]\n(\n\t[Demographics]\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)\nGO\nALTER TABLE [Sales].[Store] ADD  CONSTRAINT [DF_Store_rowguid]  DEFAULT (newid()) FOR [rowguid]\nGO\nALTER TABLE [Sales].[Store] ADD  CONSTRAINT [DF_Store_ModifiedDate]  DEFAULT (getdate()) FOR [ModifiedDate]\nGO\nALTER TABLE [Sales].[Store]  WITH CHECK ADD  CONSTRAINT [FK_Store_BusinessEntity_BusinessEntityID] FOREIGN KEY([BusinessEntityID])\nREFERENCES [Person].[BusinessEntity] ([BusinessEntityID])\nGO\nALTER TABLE [Sales].[Store] CHECK CONSTRAINT [FK_Store_BusinessEntity_BusinessEntityID]\nGO\nALTER TABLE [Sales].[Store]  WITH CHECK ADD  CONSTRAINT [FK_Store_SalesPerson_SalesPersonID] FOREIGN KEY([SalesPersonID])\nREFERENCES [Sales].[SalesPerson] ([BusinessEntityID])\nGO\nALTER TABLE [Sales].[Store] CHECK CONSTRAINT [FK_Store_SalesPerson_SalesPersonID]\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key. Foreign key to Customer.BusinessEntityID.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'Store', @level2type=N'COLUMN',@level2name=N'BusinessEntityID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Name of the store.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'Store', @level2type=N'COLUMN',@level2name=N'Name'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'ID of the sales person assigned to the customer. Foreign key to SalesPerson.BusinessEntityID.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'Store', @level2type=N'COLUMN',@level2name=N'SalesPersonID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Demographic informationg about the store such as the number of employees, annual sales and store type.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'Store', @level2type=N'COLUMN',@level2name=N'Demographics'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'Store', @level2type=N'COLUMN',@level2name=N'rowguid'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of NEWID()' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'Store', @level2type=N'CONSTRAINT',@level2name=N'DF_Store_rowguid'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Date and time the record was last updated.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'Store', @level2type=N'COLUMN',@level2name=N'ModifiedDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of GETDATE()' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'Store', @level2type=N'CONSTRAINT',@level2name=N'DF_Store_ModifiedDate'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key (clustered) constraint' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'Store', @level2type=N'CONSTRAINT',@level2name=N'PK_Store_BusinessEntityID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Unique nonclustered index. Used to support replication samples.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'Store', @level2type=N'INDEX',@level2name=N'AK_Store_rowguid'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Nonclustered index.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'Store', @level2type=N'INDEX',@level2name=N'IX_Store_SalesPersonID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary XML index.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'Store', @level2type=N'INDEX',@level2name=N'PXML_Store_Demographics'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Customers (resellers) of Adventure Works products.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'Store'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key constraint referencing BusinessEntity.BusinessEntityID' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'Store', @level2type=N'CONSTRAINT',@level2name=N'FK_Store_BusinessEntity_BusinessEntityID'\nGO\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key constraint referencing SalesPerson.SalesPersonID' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'Store', @level2type=N'CONSTRAINT',@level2name=N'FK_Store_SalesPerson_SalesPersonID'\nGO", "output_text": "CREATE TABLE sales.store (\n    businessentityid integer NOT NULL,\n    name public.\"Name\" NOT NULL,\n    salespersonid integer,\n    demographics xml,\n    rowguid uuid DEFAULT public.uuid_generate_v1() NOT NULL,\n    modifieddate timestamp without time zone DEFAULT now() NOT NULL\n);\n\n\n--\n-- Name: TABLE store; Type: COMMENT; Schema: sales; Owner: -\n--\n\nCOMMENT ON TABLE sales.store IS 'Customers (resellers) of Adventure Works products.';\n\n\n--\n-- Name: COLUMN store.businessentityid; Type: COMMENT; Schema: sales; Owner: -\n--\n\nCOMMENT ON COLUMN sales.store.businessentityid IS 'Primary key. Foreign key to Customer.BusinessEntityID.';\n\n\n--\n-- Name: COLUMN store.name; Type: COMMENT; Schema: sales; Owner: -\n--\n\nCOMMENT ON COLUMN sales.store.name IS 'Name of the store.';\n\n\n--\n-- Name: COLUMN store.salespersonid; Type: COMMENT; Schema: sales; Owner: -\n--\n\nCOMMENT ON COLUMN sales.store.salespersonid IS 'ID of the sales person assigned to the customer. Foreign key to SalesPerson.BusinessEntityID.';\n\n\n--\n-- Name: COLUMN store.demographics; Type: COMMENT; Schema: sales; Owner: -\n--\n\nCOMMENT ON COLUMN sales.store.demographics IS 'Demographic informationg about the store such as the number of employees, annual sales and store type.';"}
